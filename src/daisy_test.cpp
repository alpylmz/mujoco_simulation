#include <math.h>
#include <FixedPoint/fixed_point.hpp> 
#include <mujoco_exec_helper.hpp>

//ap_fixed is <total_bits, integer_bits>
// fixed_point is <integer_bits, fractional_bits>
// convert it with define or typedef

template<int TOTAL_BITS, int INT_BITS>
//using ap_fixed = FixedPoint<INT_BITS, (TOTAL_BITS - INT_BITS)>;
using ap_fixed = double;

typedef struct{
  ap_fixed<32,6> Dinv_5_1;
  ap_fixed<16,2> Dinv_4_1;
  ap_fixed<16,6> Dinv_3_1;
  ap_fixed<16,3> Dinv_2_1;
  ap_fixed<16,5> Dinv_1_1;
} Dinv_t;

/* @pre: ((qpos1 > 0.2) && (qpos1 < 0.3) && (qpos2 > 0.2) && (qpos2 < 0.3) && (qpos3 > 0.2) && (qpos3 < 0.3) && (qpos4 > 0.2) && (qpos4 < 0.3) && (qpos5 > 0.2) && (qpos5 < 0.3) && (qpos6 > 0.2) && (qpos6 < 0.3)) */
/* @post: (res) => (res +/- 0.1) */
Dinv_t firstPass(ap_fixed<32,1> qpos1, ap_fixed<32,1> qpos2, ap_fixed<32,1> qpos3, ap_fixed<32,1> qpos4, ap_fixed<32,1> qpos5, ap_fixed<32,1> qpos6) {
  ap_fixed<32,1> _const0 = -0.316;
  ap_fixed<32,1> _const1 = -0.316;
  ap_fixed<32,1> _const2 = -0.316;
  ap_fixed<32,1> _const3 = 0.333;
  ap_fixed<32,1> _const4 = 0.083;
  ap_fixed<32,1> _const5 = 0.083;
  ap_fixed<32,1> _const6 = 0.083;
  ap_fixed<32,1> _const7 = -0.083;
  ap_fixed<32,1> _const8 = 0.384;
  ap_fixed<32,1> _const9 = -0.083;
  ap_fixed<32,1> _const10 = 0.384;
  ap_fixed<32,1> _const11 = -0.083;
  ap_fixed<32,1> _const12 = 0.384;
  ap_fixed<32,3> _const13 = 2.253;
  ap_fixed<32,1> _const14 = -0.374;
  ap_fixed<32,1> _const15 = -0.374;
  ap_fixed<32,2> _const16 = 1.463;
  ap_fixed<32,3> _const17 = 2.253;
  ap_fixed<32,1> _const18 = -0.374;
  ap_fixed<32,1> _const19 = -0.374;
  ap_fixed<32,2> _const20 = 1.463;
  ap_fixed<32,1> _const21 = 0.022;
  ap_fixed<32,1> _const22 = -0.022;
  ap_fixed<32,1> _const23 = -0.003;
  ap_fixed<32,1> _const24 = 0.022;
  ap_fixed<32,1> _const25 = -0.022;
  ap_fixed<32,1> _const26 = -0.003;
  ap_fixed<32,1> _const27 = 0.069;
  ap_fixed<32,1> _const28 = 0.173;
  ap_fixed<32,1> _const29 = 0.069;
  ap_fixed<32,1> _const30 = 0.173;
  ap_fixed<32,1> _const31 = 0.018;
  ap_fixed<32,1> _const32 = 0.007;
  ap_fixed<32,1> _const33 = 0.007;
  ap_fixed<32,1> _const34 = 0.023;
  ap_fixed<32,1> _const35 = 0.018;
  ap_fixed<32,1> _const36 = 0.007;
  ap_fixed<32,1> _const37 = 0.007;
  ap_fixed<32,1> _const38 = 0.023;
  ap_fixed<32,2> _const39 = 1.22595;
  ap_fixed<32,1> _const40 = 0.0;
  ap_fixed<32,1> _const41 = 0.0;
  ap_fixed<32,2> _const42 = 1.22595;
  ap_fixed<32,1> _const43 = 0.0;
  ap_fixed<32,1> _const44 = 0.0471217;
  ap_fixed<32,1> _const45 = 0.0503435;
  ap_fixed<32,1> _const46 = 0.0503435;
  ap_fixed<32,1> _const47 = 0.0146537;
  ap_fixed<32,1> _const48 = 0.0;
  ap_fixed<32,1> _const49 = 0.0;
  ap_fixed<32,1> _const50 = 0.0503435;
  ap_fixed<32,1> _const51 = 0.0471217;
  ap_fixed<32,1> _const52 = 0.0146537;
  ap_fixed<32,1> _const53 = 0.0503435;
  ap_fixed<32,1> _const54 = 0.0;
  ap_fixed<32,1> _const55 = 0.0394276;
  ap_fixed<32,1> _const56 = 0.00460025;
  ap_fixed<32,1> _const57 = 0.00460025;
  ap_fixed<32,1> _const58 = 0.0108695;
  ap_fixed<32,2> _const59 = 1.0;
  ap_fixed<32,1> _const60 = 0.00216405;
  ap_fixed<32,1> _const61 = 0.00216405;
  ap_fixed<32,1> _const62 = -0.0471217;
  ap_fixed<32,3> _const63 = 3.62795;
  ap_fixed<32,1> _const64 = 0.00216405;
  ap_fixed<32,1> _const65 = 0.00216405;
  ap_fixed<32,1> _const66 = 0.0156537;
  ap_fixed<32,1> _const67 = 0.00216405;
  ap_fixed<32,1> _const68 = -0.00151524;
  ap_fixed<32,1> _const69 = 0.0471217;
  ap_fixed<32,1> _const70 = 0.0;
  ap_fixed<32,1> _const71 = 0.0146537;
  ap_fixed<32,1> _const72 = 0.00151524;
  ap_fixed<32,1> _const73 = 0.00216405;
  ap_fixed<32,1> _const74 = 0.0314604;
  ap_fixed<32,1> _const75 = -0.00216405;
  ap_fixed<32,1> _const76 = 0.00216405;
  ap_fixed<32,1> _const77 = 0.00216405;
  ap_fixed<32,1> _const78 = 0.384;
  ap_fixed<32,1> _const79 = 0.083;
  ap_fixed<32,1> _const80 = -0.083;
  ap_fixed<32,1> _const81 = 0.384;
  ap_fixed<32,1> _const82 = 0.384;
  ap_fixed<32,1> _const83 = 0.083;
  ap_fixed<32,1> _const84 = -0.083;
  ap_fixed<32,1> _const85 = 0.384;
  ap_fixed<32,1> _const86 = 0.384;
  ap_fixed<32,1> _const87 = 0.083;
  ap_fixed<32,1> _const88 = -0.083;
  ap_fixed<32,1> _const89 = 0.384;
  ap_fixed<32,1> _const90 = 0.384;
  ap_fixed<32,1> _const91 = 0.083;
  ap_fixed<32,1> _const92 = -0.083;
  ap_fixed<32,1> _const93 = 0.384;
  ap_fixed<32,1> _const94 = 0.384;
  ap_fixed<32,1> _const95 = 0.083;
  ap_fixed<32,1> _const96 = -0.083;
  ap_fixed<32,1> _const97 = 0.384;
  ap_fixed<32,1> _const98 = 0.384;
  ap_fixed<32,1> _const99 = 0.083;
  ap_fixed<32,1> _const100 = -0.083;
  ap_fixed<32,1> _const101 = 0.384;
  ap_fixed<32,1> _const102 = -0.384;
  ap_fixed<32,1> _const103 = -0.083;
  ap_fixed<32,1> _const104 = 0.083;
  ap_fixed<32,1> _const105 = 0.384;
  ap_fixed<32,1> _const106 = -0.384;
  ap_fixed<32,1> _const107 = -0.083;
  ap_fixed<32,1> _const108 = 0.083;
  ap_fixed<32,1> _const109 = 0.384;
  ap_fixed<32,1> _const110 = -0.384;
  ap_fixed<32,1> _const111 = -0.083;
  ap_fixed<32,1> _const112 = 0.083;
  ap_fixed<32,1> _const113 = 0.384;
  ap_fixed<32,3> _const114 = 3.5879;
  ap_fixed<32,1> _const115 = 0.0;
  ap_fixed<32,1> _const116 = 0.0;
  ap_fixed<32,1> _const117 = 0.0;
  ap_fixed<32,3> _const118 = 3.5879;
  ap_fixed<32,1> _const119 = 0.0;
  ap_fixed<32,1> _const120 = 0.0;
  ap_fixed<32,1> _const121 = 0.0;
  ap_fixed<32,3> _const122 = 3.5879;
  ap_fixed<32,1> _const123 = 0.0;
  ap_fixed<32,1> _const124 = 0.0985021;
  ap_fixed<32,1> _const125 = 0.374644;
  ap_fixed<32,1> _const126 = 0.0985021;
  ap_fixed<32,1> _const127 = 0.0;
  ap_fixed<32,1> _const128 = 0.190768;
  ap_fixed<32,1> _const129 = 0.374644;
  ap_fixed<32,1> _const130 = 0.190768;
  ap_fixed<32,1> _const131 = 0.0;
  ap_fixed<32,1> _const132 = 0.0;
  ap_fixed<32,1> _const133 = 0.0985021;
  ap_fixed<32,1> _const134 = 0.374644;
  ap_fixed<32,1> _const135 = 0.0985021;
  ap_fixed<32,1> _const136 = 0.0;
  ap_fixed<32,1> _const137 = 0.190768;
  ap_fixed<32,1> _const138 = 0.374644;
  ap_fixed<32,1> _const139 = 0.190768;
  ap_fixed<32,1> _const140 = 0.0;
  ap_fixed<32,1> _const141 = 0.0676773;
  ap_fixed<32,1> _const142 = 0.0277158;
  ap_fixed<32,1> _const143 = 0.00390536;
  ap_fixed<32,1> _const144 = 0.0277158;
  ap_fixed<32,1> _const145 = 0.0323994;
  ap_fixed<32,1> _const146 = 0.00164449;
  ap_fixed<32,1> _const147 = 0.00390536;
  ap_fixed<32,1> _const148 = 0.00164449;
  ap_fixed<32,1> _const149 = 0.0775861;
  ap_fixed<32,2> _const150 = 1.0;
  ap_fixed<32,1> _const151 = 0.0;
  ap_fixed<32,1> _const152 = 0.0;
  ap_fixed<32,1> _const153 = 0.0;
  ap_fixed<32,1> _const154 = 0.083;
  ap_fixed<32,1> _const155 = 0.083;
  ap_fixed<32,1> _const156 = 0.0;
  ap_fixed<32,1> _const157 = 0.0;
  ap_fixed<32,1> _const158 = 0.0;
  ap_fixed<32,1> _const159 = 0.0;
  ap_fixed<32,1> _const160 = 0.083;
  ap_fixed<32,1> _const161 = 0.083;
  ap_fixed<32,1> _const162 = 0.0;
  ap_fixed<32,1> _const163 = 0.0;
  ap_fixed<32,1> _const164 = 0.0;
  ap_fixed<32,1> _const165 = 0.0;
  ap_fixed<32,1> _const166 = 0.083;
  ap_fixed<32,1> _const167 = 0.083;
  ap_fixed<32,1> _const168 = 0.0;
  ap_fixed<32,1> _const169 = 0.0;
  ap_fixed<32,1> _const170 = 0.0;
  ap_fixed<32,1> _const171 = 0.0;
  ap_fixed<32,1> _const172 = 0.083;
  ap_fixed<32,1> _const173 = 0.083;
  ap_fixed<32,1> _const174 = 0.0;
  ap_fixed<32,1> _const175 = 0.0;
  ap_fixed<32,1> _const176 = 0.0;
  ap_fixed<32,1> _const177 = 0.0;
  ap_fixed<32,1> _const178 = 0.083;
  ap_fixed<32,1> _const179 = 0.083;
  ap_fixed<32,1> _const180 = 0.0;
  ap_fixed<32,1> _const181 = 0.0;
  ap_fixed<32,1> _const182 = 0.0;
  ap_fixed<32,1> _const183 = 0.0;
  ap_fixed<32,1> _const184 = 0.083;
  ap_fixed<32,1> _const185 = 0.083;
  ap_fixed<32,1> _const186 = 0.0;
  ap_fixed<32,1> _const187 = -0.0;
  ap_fixed<32,1> _const188 = 0.0;
  ap_fixed<32,1> _const189 = -0.0;
  ap_fixed<32,1> _const190 = 0.083;
  ap_fixed<32,1> _const191 = -0.083;
  ap_fixed<32,1> _const192 = 0.0;
  ap_fixed<32,1> _const193 = -0.0;
  ap_fixed<32,1> _const194 = 0.0;
  ap_fixed<32,1> _const195 = -0.0;
  ap_fixed<32,1> _const196 = 0.083;
  ap_fixed<32,1> _const197 = -0.083;
  ap_fixed<32,1> _const198 = 0.0;
  ap_fixed<32,1> _const199 = -0.0;
  ap_fixed<32,1> _const200 = 0.0;
  ap_fixed<32,1> _const201 = -0.0;
  ap_fixed<32,1> _const202 = 0.083;
  ap_fixed<32,1> _const203 = -0.083;
  ap_fixed<32,1> _const204 = 0.0;
  ap_fixed<32,3> _const205 = 3.2286;
  ap_fixed<32,1> _const206 = 0.0;
  ap_fixed<32,1> _const207 = 0.0;
  ap_fixed<32,1> _const208 = 0.0;
  ap_fixed<32,3> _const209 = 3.2286;
  ap_fixed<32,1> _const210 = 0.0;
  ap_fixed<32,1> _const211 = 0.0;
  ap_fixed<32,1> _const212 = 0.0;
  ap_fixed<32,3> _const213 = 3.2286;
  ap_fixed<32,1> _const214 = 0.0;
  ap_fixed<32,1> _const215 = 0.214709;
  ap_fixed<32,1> _const216 = 0.126729;
  ap_fixed<32,1> _const217 = 0.214709;
  ap_fixed<32,1> _const218 = 0.0;
  ap_fixed<32,1> _const219 = 0.0888447;
  ap_fixed<32,1> _const220 = 0.126729;
  ap_fixed<32,1> _const221 = 0.0888447;
  ap_fixed<32,1> _const222 = 0.0;
  ap_fixed<32,1> _const223 = 0.0;
  ap_fixed<32,1> _const224 = 0.214709;
  ap_fixed<32,1> _const225 = 0.126729;
  ap_fixed<32,1> _const226 = 0.214709;
  ap_fixed<32,1> _const227 = 0.0;
  ap_fixed<32,1> _const228 = 0.0888447;
  ap_fixed<32,1> _const229 = 0.126729;
  ap_fixed<32,1> _const230 = 0.0888447;
  ap_fixed<32,1> _const231 = 0.0;
  ap_fixed<32,1> _const232 = 0.0564949;
  ap_fixed<32,1> _const233 = 0.00824833;
  ap_fixed<32,1> _const234 = 0.00548765;
  ap_fixed<32,1> _const235 = 0.00824833;
  ap_fixed<32,1> _const236 = 0.0528784;
  ap_fixed<32,1> _const237 = 0.00437726;
  ap_fixed<32,1> _const238 = 0.00548765;
  ap_fixed<32,1> _const239 = 0.00437726;
  ap_fixed<32,1> _const240 = 0.0182492;
  ap_fixed<32,2> _const241 = 1.0;
  ap_fixed<32,1> _const242 = -0.316;
  ap_fixed<32,1> _const243 = 0.316;
  ap_fixed<32,1> _const244 = -0.316;
  ap_fixed<32,1> _const245 = 0.316;
  ap_fixed<32,1> _const246 = -0.316;
  ap_fixed<32,1> _const247 = 0.316;
  ap_fixed<32,1> _const248 = -0.316;
  ap_fixed<32,1> _const249 = 0.316;
  ap_fixed<32,1> _const250 = -0.316;
  ap_fixed<32,1> _const251 = 0.316;
  ap_fixed<32,1> _const252 = -0.316;
  ap_fixed<32,1> _const253 = 0.316;
  ap_fixed<32,1> _const254 = 0.316;
  ap_fixed<32,1> _const255 = -0.316;
  ap_fixed<32,1> _const256 = 0.316;
  ap_fixed<32,1> _const257 = -0.316;
  ap_fixed<32,1> _const258 = 0.316;
  ap_fixed<32,1> _const259 = -0.316;
  ap_fixed<32,1> _const260 = 0.646926;
  ap_fixed<32,1> _const261 = 0.0;
  ap_fixed<32,1> _const262 = 0.0;
  ap_fixed<32,1> _const263 = 0.0;
  ap_fixed<32,1> _const264 = 0.646926;
  ap_fixed<32,1> _const265 = 0.0;
  ap_fixed<32,1> _const266 = 0.0;
  ap_fixed<32,1> _const267 = 0.0;
  ap_fixed<32,1> _const268 = 0.646926;
  ap_fixed<32,1> _const269 = 0.0;
  ap_fixed<32,1> _const270 = 0.00226101;
  ap_fixed<32,1> _const271 = 0.0185797;
  ap_fixed<32,1> _const272 = 0.00226101;
  ap_fixed<32,1> _const273 = 0.0;
  ap_fixed<32,1> _const274 = 0.00203199;
  ap_fixed<32,1> _const275 = 0.0185797;
  ap_fixed<32,1> _const276 = 0.00203199;
  ap_fixed<32,1> _const277 = 0.0;
  ap_fixed<32,1> _const278 = 0.0;
  ap_fixed<32,1> _const279 = 0.00226101;
  ap_fixed<32,1> _const280 = 0.0185797;
  ap_fixed<32,1> _const281 = 0.00226101;
  ap_fixed<32,1> _const282 = 0.0;
  ap_fixed<32,1> _const283 = 0.00203199;
  ap_fixed<32,1> _const284 = 0.0185797;
  ap_fixed<32,1> _const285 = 0.00203199;
  ap_fixed<32,1> _const286 = 0.0;
  ap_fixed<32,1> _const287 = 0.00850351;
  ap_fixed<32,1> _const288 = 0.00398336;
  ap_fixed<32,1> _const289 = 0.0102611;
  ap_fixed<32,1> _const290 = 0.00398336;
  ap_fixed<32,1> _const291 = 0.0281243;
  ap_fixed<32,1> _const292 = 7.68936E-4;
  ap_fixed<32,1> _const293 = 0.0102611;
  ap_fixed<32,1> _const294 = 7.68936E-4;
  ap_fixed<32,1> _const295 = 0.026535;
  ap_fixed<32,2> _const296 = 1.0;
  ap_fixed<32,3> _const297 = 3.5879;
  ap_fixed<32,1> _const298 = 0.0;
  ap_fixed<32,1> _const299 = 0.0;
  ap_fixed<32,1> _const300 = 0.0;
  ap_fixed<32,3> _const301 = 3.5879;
  ap_fixed<32,1> _const302 = 0.0;
  ap_fixed<32,1> _const303 = 0.0;
  ap_fixed<32,1> _const304 = 0.0;
  ap_fixed<32,3> _const305 = 3.5879;
  ap_fixed<32,1> _const306 = 0.0;
  ap_fixed<32,1> _const307 = 0.0985021;
  ap_fixed<32,1> _const308 = 0.374644;
  ap_fixed<32,1> _const309 = 0.0985021;
  ap_fixed<32,1> _const310 = 0.0;
  ap_fixed<32,1> _const311 = 0.190768;
  ap_fixed<32,1> _const312 = 0.374644;
  ap_fixed<32,1> _const313 = 0.190768;
  ap_fixed<32,1> _const314 = 0.0;
  ap_fixed<32,1> _const315 = 0.0;
  ap_fixed<32,1> _const316 = 0.0985021;
  ap_fixed<32,1> _const317 = 0.374644;
  ap_fixed<32,1> _const318 = 0.0985021;
  ap_fixed<32,1> _const319 = 0.0;
  ap_fixed<32,1> _const320 = 0.190768;
  ap_fixed<32,1> _const321 = 0.374644;
  ap_fixed<32,1> _const322 = 0.190768;
  ap_fixed<32,1> _const323 = 0.0;
  ap_fixed<32,1> _const324 = 0.0676773;
  ap_fixed<32,1> _const325 = 0.0277158;
  ap_fixed<32,1> _const326 = 0.00390536;
  ap_fixed<32,1> _const327 = 0.0277158;
  ap_fixed<32,1> _const328 = 0.0323994;
  ap_fixed<32,1> _const329 = 0.00164449;
  ap_fixed<32,1> _const330 = 0.00390536;
  ap_fixed<32,1> _const331 = 0.00164449;
  ap_fixed<32,1> _const332 = 0.00921316;
  ap_fixed<32,2> _const333 = 1.0;
  ap_fixed<32,1> sin_qpos1 = sin(qpos1);
  ap_fixed<32,1> cos_qpos1 = cos(qpos1);
  ap_fixed<32,1> sin_qpos2 = sin(qpos2);
  ap_fixed<32,1> cos_qpos2 = cos(qpos2);
  ap_fixed<32,1> sin_qpos3 = sin(qpos3);
  ap_fixed<32,1> cos_qpos3 = cos(qpos3);
  ap_fixed<32,1> sin_qpos4 = sin(qpos4);
  ap_fixed<32,1> cos_qpos4 = cos(qpos4);
  ap_fixed<32,1> sin_qpos5 = sin(qpos5);
  ap_fixed<32,1> cos_qpos5 = cos(qpos5);
  ap_fixed<32,1> sin_qpos6 = sin(qpos6);
  ap_fixed<32,1> cos_qpos6 = cos(qpos6);
  ap_fixed<32,1> rotation_matrix_1_1_1 = cos_qpos1;
  ap_fixed<32,1> rotation_matrix_1_1_2 = -(sin_qpos1);
  ap_fixed<32,1> rotation_matrix_1_2_1 = sin_qpos1;
  ap_fixed<32,1> rotation_matrix_1_2_2 = cos_qpos1;
  ap_fixed<32,1> limi_rotation_1_1_1 = rotation_matrix_1_1_1;
  ap_fixed<32,1> limi_rotation_1_1_2 = rotation_matrix_1_1_2;
  ap_fixed<32,1> limi_rotation_1_2_1 = rotation_matrix_1_2_1;
  ap_fixed<32,1> limi_rotation_1_2_2 = rotation_matrix_1_2_2;
  ap_fixed<32,1> oMi_rotation_1_1_1 = limi_rotation_1_1_1;
  ap_fixed<32,1> oMi_rotation_1_1_2 = limi_rotation_1_1_2;
  ap_fixed<32,1> oMi_rotation_1_2_1 = limi_rotation_1_2_1;
  ap_fixed<32,1> oMi_rotation_1_2_2 = limi_rotation_1_2_2;
  ap_fixed<32,1> rotation_matrix_2_1_1 = cos_qpos2;
  ap_fixed<32,1> rotation_matrix_2_1_2 = -(sin_qpos2);
  ap_fixed<32,1> rotation_matrix_2_2_1 = sin_qpos2;
  ap_fixed<32,1> rotation_matrix_2_2_2 = cos_qpos2;
  ap_fixed<32,1> limi_rotation_2_1_1 = rotation_matrix_2_1_1;
  ap_fixed<32,1> limi_rotation_2_1_2 = rotation_matrix_2_1_2;
  ap_fixed<32,1> limi_rotation_2_3_1 = -(rotation_matrix_2_2_1);
  ap_fixed<32,1> limi_rotation_2_3_2 = -(rotation_matrix_2_2_2);
  ap_fixed<32,1> oMi_rotation_2_1_1 = (oMi_rotation_1_1_1 * limi_rotation_2_1_1);
  ap_fixed<32,1> oMi_rotation_2_1_2 = (oMi_rotation_1_1_1 * limi_rotation_2_1_2);
  ap_fixed<32,1> oMi_rotation_2_1_3 = oMi_rotation_1_1_2;
  ap_fixed<32,1> oMi_rotation_2_2_1 = (oMi_rotation_1_2_1 * limi_rotation_2_1_1);
  ap_fixed<32,1> oMi_rotation_2_2_2 = (oMi_rotation_1_2_1 * limi_rotation_2_1_2);
  ap_fixed<32,1> oMi_rotation_2_2_3 = oMi_rotation_1_2_2;
  ap_fixed<32,1> oMi_rotation_2_3_1 = limi_rotation_2_3_1;
  ap_fixed<32,1> oMi_rotation_2_3_2 = limi_rotation_2_3_2;
  ap_fixed<32,1> rotation_matrix_3_1_1 = cos_qpos3;
  ap_fixed<32,1> rotation_matrix_3_1_2 = -(sin_qpos3);
  ap_fixed<32,1> rotation_matrix_3_2_1 = sin_qpos3;
  ap_fixed<32,1> rotation_matrix_3_2_2 = cos_qpos3;
  ap_fixed<32,1> limi_rotation_3_1_1 = rotation_matrix_3_1_1;
  ap_fixed<32,1> limi_rotation_3_1_2 = rotation_matrix_3_1_2;
  ap_fixed<32,1> limi_rotation_3_3_1 = rotation_matrix_3_2_1;
  ap_fixed<32,1> limi_rotation_3_3_2 = rotation_matrix_3_2_2;
  ap_fixed<32,1> _tmp = (oMi_rotation_2_1_1 * limi_rotation_3_1_1);
  ap_fixed<32,1> _tmp1 = (oMi_rotation_2_1_3 * limi_rotation_3_3_1);
  ap_fixed<32,1> oMi_rotation_3_1_1 = (_tmp + _tmp1);
  ap_fixed<32,1> _tmp2 = (oMi_rotation_2_1_1 * limi_rotation_3_1_2);
  ap_fixed<32,1> _tmp3 = (oMi_rotation_2_1_3 * limi_rotation_3_3_2);
  ap_fixed<32,1> oMi_rotation_3_1_2 = (_tmp2 + _tmp3);
  ap_fixed<32,1> oMi_rotation_3_1_3 = -(oMi_rotation_2_1_2);
  ap_fixed<32,1> _tmp4 = (oMi_rotation_2_2_1 * limi_rotation_3_1_1);
  ap_fixed<32,1> _tmp5 = (oMi_rotation_2_2_3 * limi_rotation_3_3_1);
  ap_fixed<32,1> oMi_rotation_3_2_1 = (_tmp4 + _tmp5);
  ap_fixed<32,1> _tmp6 = (oMi_rotation_2_2_1 * limi_rotation_3_1_2);
  ap_fixed<32,1> _tmp7 = (oMi_rotation_2_2_3 * limi_rotation_3_3_2);
  ap_fixed<32,1> oMi_rotation_3_2_2 = (_tmp6 + _tmp7);
  ap_fixed<32,1> oMi_rotation_3_2_3 = -(oMi_rotation_2_2_2);
  ap_fixed<32,1> oMi_rotation_3_3_1 = (oMi_rotation_2_3_1 * limi_rotation_3_1_1);
  ap_fixed<32,1> oMi_rotation_3_3_2 = (oMi_rotation_2_3_1 * limi_rotation_3_1_2);
  ap_fixed<32,1> oMi_rotation_3_3_3 = -(oMi_rotation_2_3_2);
  ap_fixed<32,1> oMi_translation_3_1 = (oMi_rotation_2_1_2 * _const0);
  ap_fixed<32,1> oMi_translation_3_2 = (oMi_rotation_2_2_2 * _const1);
  ap_fixed<32,1> _tmp8 = (oMi_rotation_2_3_2 * _const2);
  ap_fixed<32,1> oMi_translation_3_3 = (_tmp8 + _const3);
  ap_fixed<32,1> rotation_matrix_4_1_1 = cos_qpos4;
  ap_fixed<32,1> rotation_matrix_4_1_2 = -(sin_qpos4);
  ap_fixed<32,1> rotation_matrix_4_2_1 = sin_qpos4;
  ap_fixed<32,1> rotation_matrix_4_2_2 = cos_qpos4;
  ap_fixed<32,1> limi_rotation_4_1_1 = rotation_matrix_4_1_1;
  ap_fixed<32,1> limi_rotation_4_1_2 = rotation_matrix_4_1_2;
  ap_fixed<32,1> limi_rotation_4_3_1 = rotation_matrix_4_2_1;
  ap_fixed<32,1> limi_rotation_4_3_2 = rotation_matrix_4_2_2;
  ap_fixed<32,1> _tmp9 = (oMi_rotation_3_1_1 * limi_rotation_4_1_1);
  ap_fixed<32,1> _tmp10 = (oMi_rotation_3_1_3 * limi_rotation_4_3_1);
  ap_fixed<32,1> oMi_rotation_4_1_1 = (_tmp9 + _tmp10);
  ap_fixed<32,1> _tmp11 = (oMi_rotation_3_1_1 * limi_rotation_4_1_2);
  ap_fixed<32,1> _tmp12 = (oMi_rotation_3_1_3 * limi_rotation_4_3_2);
  ap_fixed<32,1> oMi_rotation_4_1_2 = (_tmp11 + _tmp12);
  ap_fixed<32,1> oMi_rotation_4_1_3 = -(oMi_rotation_3_1_2);
  ap_fixed<32,1> _tmp13 = (oMi_rotation_3_2_1 * limi_rotation_4_1_1);
  ap_fixed<32,1> _tmp14 = (oMi_rotation_3_2_3 * limi_rotation_4_3_1);
  ap_fixed<32,1> oMi_rotation_4_2_1 = (_tmp13 + _tmp14);
  ap_fixed<32,1> _tmp15 = (oMi_rotation_3_2_1 * limi_rotation_4_1_2);
  ap_fixed<32,1> _tmp16 = (oMi_rotation_3_2_3 * limi_rotation_4_3_2);
  ap_fixed<32,1> oMi_rotation_4_2_2 = (_tmp15 + _tmp16);
  ap_fixed<32,1> oMi_rotation_4_2_3 = -(oMi_rotation_3_2_2);
  ap_fixed<32,1> _tmp17 = (oMi_rotation_3_3_1 * limi_rotation_4_1_1);
  ap_fixed<32,1> _tmp18 = (oMi_rotation_3_3_3 * limi_rotation_4_3_1);
  ap_fixed<32,1> oMi_rotation_4_3_1 = (_tmp17 + _tmp18);
  ap_fixed<32,1> _tmp19 = (oMi_rotation_3_3_1 * limi_rotation_4_1_2);
  ap_fixed<32,1> _tmp20 = (oMi_rotation_3_3_3 * limi_rotation_4_3_2);
  ap_fixed<32,2> oMi_rotation_4_3_2 = (_tmp19 + _tmp20);
  ap_fixed<32,1> oMi_rotation_4_3_3 = -(oMi_rotation_3_3_2);
  ap_fixed<32,1> _tmp21 = (oMi_rotation_3_1_1 * _const4);
  ap_fixed<32,1> oMi_translation_4_1 = (_tmp21 + oMi_translation_3_1);
  ap_fixed<32,1> _tmp22 = (oMi_rotation_3_2_1 * _const5);
  ap_fixed<32,1> oMi_translation_4_2 = (_tmp22 + oMi_translation_3_2);
  ap_fixed<32,1> _tmp23 = (oMi_rotation_3_3_1 * _const6);
  ap_fixed<32,1> oMi_translation_4_3 = (_tmp23 + oMi_translation_3_3);
  ap_fixed<32,1> rotation_matrix_5_1_1 = cos_qpos5;
  ap_fixed<32,1> rotation_matrix_5_1_2 = -(sin_qpos5);
  ap_fixed<32,1> rotation_matrix_5_2_1 = sin_qpos5;
  ap_fixed<32,1> rotation_matrix_5_2_2 = cos_qpos5;
  ap_fixed<32,1> limi_rotation_5_1_1 = rotation_matrix_5_1_1;
  ap_fixed<32,1> limi_rotation_5_1_2 = rotation_matrix_5_1_2;
  ap_fixed<32,1> limi_rotation_5_3_1 = -(rotation_matrix_5_2_1);
  ap_fixed<32,1> limi_rotation_5_3_2 = -(rotation_matrix_5_2_2);
  ap_fixed<32,1> _tmp24 = (oMi_rotation_4_1_1 * limi_rotation_5_1_1);
  ap_fixed<32,1> _tmp25 = (oMi_rotation_4_1_3 * limi_rotation_5_3_1);
  ap_fixed<32,1> oMi_rotation_5_1_1 = (_tmp24 + _tmp25);
  ap_fixed<32,1> _tmp26 = (oMi_rotation_4_1_1 * limi_rotation_5_1_2);
  ap_fixed<32,1> _tmp27 = (oMi_rotation_4_1_3 * limi_rotation_5_3_2);
  ap_fixed<32,1> oMi_rotation_5_1_2 = (_tmp26 + _tmp27);
  ap_fixed<32,1> oMi_rotation_5_1_3 = oMi_rotation_4_1_2;
  ap_fixed<32,1> _tmp28 = (oMi_rotation_4_2_1 * limi_rotation_5_1_1);
  ap_fixed<32,1> _tmp29 = (oMi_rotation_4_2_3 * limi_rotation_5_3_1);
  ap_fixed<32,1> oMi_rotation_5_2_1 = (_tmp28 + _tmp29);
  ap_fixed<32,1> _tmp30 = (oMi_rotation_4_2_1 * limi_rotation_5_1_2);
  ap_fixed<32,1> _tmp31 = (oMi_rotation_4_2_3 * limi_rotation_5_3_2);
  ap_fixed<32,1> oMi_rotation_5_2_2 = (_tmp30 + _tmp31);
  ap_fixed<32,1> oMi_rotation_5_2_3 = oMi_rotation_4_2_2;
  ap_fixed<32,1> _tmp32 = (oMi_rotation_4_3_1 * limi_rotation_5_1_1);
  ap_fixed<32,1> _tmp33 = (oMi_rotation_4_3_3 * limi_rotation_5_3_1);
  ap_fixed<32,1> oMi_rotation_5_3_1 = (_tmp32 + _tmp33);
  ap_fixed<32,1> _tmp34 = (oMi_rotation_4_3_1 * limi_rotation_5_1_2);
  ap_fixed<32,1> _tmp35 = (oMi_rotation_4_3_3 * limi_rotation_5_3_2);
  ap_fixed<32,1> oMi_rotation_5_3_2 = (_tmp34 + _tmp35);
  ap_fixed<32,2> oMi_rotation_5_3_3 = oMi_rotation_4_3_2;
  ap_fixed<32,1> _tmp36 = (oMi_rotation_4_1_1 * _const7);
  ap_fixed<32,1> _tmp37 = (oMi_rotation_4_1_2 * _const8);
  ap_fixed<32,1> _tmp38 = (_tmp36 + _tmp37);
  ap_fixed<32,1> oMi_translation_5_1 = (_tmp38 + oMi_translation_4_1);
  ap_fixed<32,1> _tmp39 = (oMi_rotation_4_2_1 * _const9);
  ap_fixed<32,1> _tmp40 = (oMi_rotation_4_2_2 * _const10);
  ap_fixed<32,1> _tmp41 = (_tmp39 + _tmp40);
  ap_fixed<32,1> oMi_translation_5_2 = (_tmp41 + oMi_translation_4_2);
  ap_fixed<32,1> _tmp42 = (oMi_rotation_4_3_1 * _const11);
  ap_fixed<32,1> _tmp43 = (oMi_rotation_4_3_2 * _const12);
  ap_fixed<32,1> _tmp44 = (_tmp42 + _tmp43);
  ap_fixed<32,2> oMi_translation_5_3 = (_tmp44 + oMi_translation_4_3);
  ap_fixed<32,1> rotation_matrix_6_1_1 = cos_qpos6;
  ap_fixed<32,1> rotation_matrix_6_1_2 = -(sin_qpos6);
  ap_fixed<32,1> rotation_matrix_6_2_1 = sin_qpos6;
  ap_fixed<32,1> rotation_matrix_6_2_2 = cos_qpos6;
  ap_fixed<32,1> limi_rotation_6_1_1 = rotation_matrix_6_1_1;
  ap_fixed<32,1> limi_rotation_6_1_2 = rotation_matrix_6_1_2;
  ap_fixed<32,1> limi_rotation_6_3_1 = rotation_matrix_6_2_1;
  ap_fixed<32,1> limi_rotation_6_3_2 = rotation_matrix_6_2_2;
  ap_fixed<32,1> _tmp45 = (oMi_rotation_5_1_1 * limi_rotation_6_1_1);
  ap_fixed<32,1> _tmp46 = (oMi_rotation_5_1_3 * limi_rotation_6_3_1);
  ap_fixed<32,1> oMi_rotation_6_1_1 = (_tmp45 + _tmp46);
  ap_fixed<32,1> _tmp47 = (oMi_rotation_5_1_1 * limi_rotation_6_1_2);
  ap_fixed<32,1> _tmp48 = (oMi_rotation_5_1_3 * limi_rotation_6_3_2);
  ap_fixed<32,1> oMi_rotation_6_1_2 = (_tmp47 + _tmp48);
  ap_fixed<32,1> oMi_rotation_6_1_3 = -(oMi_rotation_5_1_2);
  ap_fixed<32,1> _tmp49 = (oMi_rotation_5_2_1 * limi_rotation_6_1_1);
  ap_fixed<32,1> _tmp50 = (oMi_rotation_5_2_3 * limi_rotation_6_3_1);
  ap_fixed<32,1> oMi_rotation_6_2_1 = (_tmp49 + _tmp50);
  ap_fixed<32,1> _tmp51 = (oMi_rotation_5_2_1 * limi_rotation_6_1_2);
  ap_fixed<32,1> _tmp52 = (oMi_rotation_5_2_3 * limi_rotation_6_3_2);
  ap_fixed<32,1> oMi_rotation_6_2_2 = (_tmp51 + _tmp52);
  ap_fixed<32,1> oMi_rotation_6_2_3 = -(oMi_rotation_5_2_2);
  ap_fixed<32,1> _tmp53 = (oMi_rotation_5_3_1 * limi_rotation_6_1_1);
  ap_fixed<32,1> _tmp54 = (oMi_rotation_5_3_3 * limi_rotation_6_3_1);
  ap_fixed<32,1> oMi_rotation_6_3_1 = (_tmp53 + _tmp54);
  ap_fixed<32,1> _tmp55 = (oMi_rotation_5_3_1 * limi_rotation_6_1_2);
  ap_fixed<32,2> _tmp56 = (oMi_rotation_5_3_3 * limi_rotation_6_3_2);
  ap_fixed<32,2> oMi_rotation_6_3_2 = (_tmp55 + _tmp56);
  ap_fixed<32,1> oMi_rotation_6_3_3 = -(oMi_rotation_5_3_2);
  ap_fixed<32,1> oMi_translation_6_1 = oMi_translation_5_1;
  ap_fixed<32,1> oMi_translation_6_2 = oMi_translation_5_2;
  ap_fixed<32,2> oMi_translation_6_3 = oMi_translation_5_3;
  ap_fixed<32,3> _tmp57 = (limi_rotation_6_1_1 * _const13);
  ap_fixed<32,1> _tmp58 = (limi_rotation_6_1_2 * _const14);
  ap_fixed<32,3> temp1_6_1_1 = (_tmp57 + _tmp58);
  ap_fixed<32,1> _tmp59 = (limi_rotation_6_1_1 * _const15);
  ap_fixed<32,1> _tmp60 = (limi_rotation_6_1_2 * _const16);
  ap_fixed<32,1> temp1_6_1_2 = (_tmp59 + _tmp60);
  ap_fixed<32,1> _tmp61 = (limi_rotation_6_3_1 * _const17);
  ap_fixed<32,1> _tmp62 = (limi_rotation_6_3_2 * _const18);
  ap_fixed<32,1> temp1_6_3_1 = (_tmp61 + _tmp62);
  ap_fixed<32,1> _tmp63 = (limi_rotation_6_3_1 * _const19);
  ap_fixed<32,2> _tmp64 = (limi_rotation_6_3_2 * _const20);
  ap_fixed<32,2> temp1_6_3_2 = (_tmp63 + _tmp64);
  ap_fixed<32,1> limi_rotation_transpose_6_1_1 = limi_rotation_6_1_1;
  ap_fixed<32,1> limi_rotation_transpose_6_1_3 = limi_rotation_6_3_1;
  ap_fixed<32,1> limi_rotation_transpose_6_2_1 = limi_rotation_6_1_2;
  ap_fixed<32,1> limi_rotation_transpose_6_2_3 = limi_rotation_6_3_2;
  ap_fixed<32,3> _tmp65 = (temp1_6_1_1 * limi_rotation_transpose_6_1_1);
  ap_fixed<32,1> _tmp66 = (temp1_6_1_2 * limi_rotation_transpose_6_2_1);
  ap_fixed<32,3> Ao_6_1_1 = (_tmp65 + _tmp66);
  ap_fixed<32,1> _tmp67 = (temp1_6_1_1 * limi_rotation_transpose_6_1_3);
  ap_fixed<32,1> _tmp68 = (temp1_6_1_2 * limi_rotation_transpose_6_2_3);
  ap_fixed<32,1> Ao_6_1_3 = (_tmp67 + _tmp68);
  ap_fixed<32,1> _tmp69 = (temp1_6_3_1 * limi_rotation_transpose_6_1_1);
  ap_fixed<32,1> _tmp70 = (temp1_6_3_2 * limi_rotation_transpose_6_2_1);
  ap_fixed<32,1> Ao_6_3_1 = (_tmp69 + _tmp70);
  ap_fixed<32,1> _tmp71 = (temp1_6_3_1 * limi_rotation_transpose_6_1_3);
  ap_fixed<32,2> _tmp72 = (temp1_6_3_2 * limi_rotation_transpose_6_2_3);
  ap_fixed<32,2> Ao_6_3_3 = (_tmp71 + _tmp72);
  ap_fixed<32,1> temp2_6_1_1 = (limi_rotation_6_1_2 * _const21);
  ap_fixed<32,1> _tmp73 = (limi_rotation_6_1_1 * _const22);
  ap_fixed<32,1> _tmp74 = (limi_rotation_6_1_2 * _const23);
  ap_fixed<32,1> temp2_6_1_2 = (_tmp73 + _tmp74);
  ap_fixed<32,1> temp2_6_3_1 = (limi_rotation_6_3_2 * _const24);
  ap_fixed<32,1> _tmp75 = (limi_rotation_6_3_1 * _const25);
  ap_fixed<32,1> _tmp76 = (limi_rotation_6_3_2 * _const26);
  ap_fixed<32,1> temp2_6_3_2 = (_tmp75 + _tmp76);
  ap_fixed<32,1> _tmp77 = (temp2_6_1_1 * limi_rotation_transpose_6_1_1);
  ap_fixed<32,1> _tmp78 = (temp2_6_1_2 * limi_rotation_transpose_6_2_1);
  ap_fixed<32,1> Bo_temp_6_1_1 = (_tmp77 + _tmp78);
  ap_fixed<32,1> _tmp79 = (temp2_6_1_1 * limi_rotation_transpose_6_1_3);
  ap_fixed<32,1> _tmp80 = (temp2_6_1_2 * limi_rotation_transpose_6_2_3);
  ap_fixed<32,1> Bo_temp_6_1_3 = (_tmp79 + _tmp80);
  ap_fixed<32,1> _tmp81 = (_const27 * limi_rotation_transpose_6_1_1);
  ap_fixed<32,1> _tmp82 = (_const28 * limi_rotation_transpose_6_2_1);
  ap_fixed<32,1> Bo_temp_6_2_1 = (_tmp81 + _tmp82);
  ap_fixed<32,1> _tmp83 = (_const29 * limi_rotation_transpose_6_1_3);
  ap_fixed<32,1> _tmp84 = (_const30 * limi_rotation_transpose_6_2_3);
  ap_fixed<32,1> Bo_temp_6_2_3 = (_tmp83 + _tmp84);
  ap_fixed<32,1> _tmp85 = (temp2_6_3_1 * limi_rotation_transpose_6_1_1);
  ap_fixed<32,1> _tmp86 = (temp2_6_3_2 * limi_rotation_transpose_6_2_1);
  ap_fixed<32,1> Bo_temp_6_3_1 = (_tmp85 + _tmp86);
  ap_fixed<32,1> _tmp87 = (temp2_6_3_1 * limi_rotation_transpose_6_1_3);
  ap_fixed<32,1> _tmp88 = (temp2_6_3_2 * limi_rotation_transpose_6_2_3);
  ap_fixed<32,1> Bo_temp_6_3_3 = (_tmp87 + _tmp88);
  ap_fixed<32,1> _tmp89 = (limi_rotation_6_1_1 * _const31);
  ap_fixed<32,1> _tmp90 = (limi_rotation_6_1_2 * _const32);
  ap_fixed<32,1> temp3_6_1_1 = (_tmp89 + _tmp90);
  ap_fixed<32,1> _tmp91 = (limi_rotation_6_1_1 * _const33);
  ap_fixed<32,1> _tmp92 = (limi_rotation_6_1_2 * _const34);
  ap_fixed<32,1> temp3_6_1_2 = (_tmp91 + _tmp92);
  ap_fixed<32,1> _tmp93 = (limi_rotation_6_3_1 * _const35);
  ap_fixed<32,1> _tmp94 = (limi_rotation_6_3_2 * _const36);
  ap_fixed<32,1> temp3_6_3_1 = (_tmp93 + _tmp94);
  ap_fixed<32,1> _tmp95 = (limi_rotation_6_3_1 * _const37);
  ap_fixed<32,1> _tmp96 = (limi_rotation_6_3_2 * _const38);
  ap_fixed<32,1> temp3_6_3_2 = (_tmp95 + _tmp96);
  ap_fixed<32,1> _tmp97 = (temp3_6_1_1 * limi_rotation_transpose_6_1_1);
  ap_fixed<32,1> _tmp98 = (temp3_6_1_2 * limi_rotation_transpose_6_2_1);
  ap_fixed<32,1> Do_temp_6_1_1 = (_tmp97 + _tmp98);
  ap_fixed<32,1> _tmp99 = (temp3_6_1_1 * limi_rotation_transpose_6_1_3);
  ap_fixed<32,1> _tmp100 = (temp3_6_1_2 * limi_rotation_transpose_6_2_3);
  ap_fixed<32,1> Do_temp_6_1_3 = (_tmp99 + _tmp100);
  ap_fixed<32,1> _tmp101 = (temp3_6_3_1 * limi_rotation_transpose_6_1_1);
  ap_fixed<32,1> _tmp102 = (temp3_6_3_2 * limi_rotation_transpose_6_2_1);
  ap_fixed<32,1> Do_temp_6_3_1 = (_tmp101 + _tmp102);
  ap_fixed<32,1> _tmp103 = (temp3_6_3_1 * limi_rotation_transpose_6_1_3);
  ap_fixed<32,1> _tmp104 = (temp3_6_3_2 * limi_rotation_transpose_6_2_3);
  ap_fixed<32,1> Do_temp_6_3_3 = (_tmp103 + _tmp104);
  ap_fixed<32,1> Do_temp2_6_1_1 = Do_temp_6_1_1;
  ap_fixed<32,1> Do_temp2_6_1_3 = Do_temp_6_1_3;
  ap_fixed<32,1> Do_temp2_6_3_1 = Do_temp_6_3_1;
  ap_fixed<32,1> Do_temp2_6_3_3 = Do_temp_6_3_3;
  ap_fixed<32,1> Co_6_1_1 = Bo_temp_6_1_1;
  ap_fixed<32,1> Co_6_1_3 = Bo_temp_6_1_3;
  ap_fixed<32,1> Co_6_2_1 = Bo_temp_6_2_1;
  ap_fixed<32,1> Co_6_2_3 = Bo_temp_6_2_3;
  ap_fixed<32,1> Co_6_3_1 = Bo_temp_6_3_1;
  ap_fixed<32,1> Co_6_3_3 = Bo_temp_6_3_3;
  ap_fixed<32,1> Bo_6_1_1 = Co_6_1_1;
  ap_fixed<32,1> Bo_6_1_2 = Co_6_2_1;
  ap_fixed<32,1> Bo_6_1_3 = Co_6_3_1;
  ap_fixed<32,1> Bo_6_3_1 = Co_6_1_3;
  ap_fixed<32,1> Bo_6_3_2 = Co_6_2_3;
  ap_fixed<32,1> Bo_6_3_3 = Co_6_3_3;
  ap_fixed<32,1> Do_6_1_1 = Do_temp2_6_1_1;
  ap_fixed<32,1> Do_6_1_3 = Do_temp2_6_1_3;
  ap_fixed<32,1> Do_6_3_1 = Do_temp2_6_3_1;
  ap_fixed<32,1> Do_6_3_3 = Do_temp2_6_3_3;
  ap_fixed<32,3> Ia_5_1_1 = (Ao_6_1_1 + _const39);
  ap_fixed<32,1> Ia_5_1_3 = (Ao_6_1_3 + _const40);
  ap_fixed<32,1> Ia_5_3_1 = (Ao_6_3_1 + _const41);
  ap_fixed<32,3> Ia_5_3_3 = (Ao_6_3_3 + _const42);
  ap_fixed<32,1> Ia_5_4_1 = (Bo_6_1_1 + _const43);
  ap_fixed<32,1> Ia_5_4_2 = (Bo_6_1_2 - _const44);
  ap_fixed<32,1> Ia_5_4_3 = (Bo_6_1_3 - _const45);
  ap_fixed<32,1> Ia_5_6_1 = (Bo_6_3_1 + _const46);
  ap_fixed<32,1> Ia_5_6_2 = (Bo_6_3_2 + _const47);
  ap_fixed<32,1> Ia_5_6_3 = (Bo_6_3_3 + _const48);
  ap_fixed<32,1> Ia_5_1_4 = (Co_6_1_1 + _const49);
  ap_fixed<32,1> Ia_5_1_6 = (Co_6_1_3 - _const50);
  ap_fixed<32,1> Ia_5_2_4 = (Co_6_2_1 + _const51);
  ap_fixed<32,1> Ia_5_2_6 = (Co_6_2_3 - _const52);
  ap_fixed<32,1> Ia_5_3_4 = (Co_6_3_1 + _const53);
  ap_fixed<32,1> Ia_5_3_6 = (Co_6_3_3 + _const54);
  ap_fixed<32,1> Ia_5_4_4 = (Do_6_1_1 + _const55);
  ap_fixed<32,1> Ia_5_4_6 = (Do_6_1_3 - _const56);
  ap_fixed<32,1> Ia_5_6_4 = (Do_6_3_1 + _const57);
  ap_fixed<32,1> Ia_5_6_6 = (Do_6_3_3 + _const58);
  ap_fixed<32,1> U_5_1 = Ia_5_1_6;
  ap_fixed<32,1> U_5_2 = Ia_5_2_6;
  ap_fixed<32,1> U_5_3 = Ia_5_3_6;
  ap_fixed<32,1> U_5_4 = Ia_5_4_6;
  ap_fixed<32,1> U_5_6 = Ia_5_6_6;
  ap_fixed<32,6> Dinv_5_1 = (_const59 / U_5_6);
  ap_fixed<32,3> UDinv_5_1 = (U_5_1 * Dinv_5_1);
  ap_fixed<32,4> UDinv_5_2 = (U_5_2 * Dinv_5_1);
  ap_fixed<32,1> UDinv_5_3 = (U_5_3 * Dinv_5_1);
  ap_fixed<32,1> UDinv_5_4 = (U_5_4 * Dinv_5_1);
  ap_fixed<32,1> UDinv_5_5 = (_const60 * Dinv_5_1);
  ap_fixed<32,2> UDinv_5_6 = (U_5_6 * Dinv_5_1);
  ap_fixed<32,1> _tmp105 = (UDinv_5_1 * U_5_1);
  ap_fixed<32,3> Ia_new_5_1_1 = (Ia_5_1_1 - _tmp105);
  ap_fixed<32,3> _tmp106 = -(UDinv_5_1);
  ap_fixed<32,1> Ia_new_5_1_2 = (_tmp106 * U_5_2);
  ap_fixed<32,1> _tmp107 = (UDinv_5_1 * U_5_3);
  ap_fixed<32,1> Ia_new_5_1_3 = (Ia_5_1_3 - _tmp107);
  ap_fixed<32,1> _tmp108 = (UDinv_5_1 * U_5_4);
  ap_fixed<32,1> Ia_new_5_1_4 = (Ia_5_1_4 - _tmp108);
  ap_fixed<32,1> _tmp109 = (UDinv_5_1 * _const61);
  ap_fixed<32,1> Ia_new_5_1_5 = (_const62 - _tmp109);
  ap_fixed<32,1> _tmp110 = (UDinv_5_1 * U_5_6);
  ap_fixed<32,1> Ia_new_5_1_6 = (Ia_5_1_6 - _tmp110);
  ap_fixed<32,4> _tmp111 = -(UDinv_5_2);
  ap_fixed<32,1> Ia_new_5_2_1 = (_tmp111 * U_5_1);
  ap_fixed<32,1> _tmp112 = (UDinv_5_2 * U_5_2);
  ap_fixed<32,3> Ia_new_5_2_2 = (_const63 - _tmp112);
  ap_fixed<32,4> _tmp113 = -(UDinv_5_2);
  ap_fixed<32,1> Ia_new_5_2_3 = (_tmp113 * U_5_3);
  ap_fixed<32,1> _tmp114 = (UDinv_5_2 * U_5_4);
  ap_fixed<32,1> Ia_new_5_2_4 = (Ia_5_2_4 - _tmp114);
  ap_fixed<32,4> _tmp115 = -(UDinv_5_2);
  ap_fixed<32,1> Ia_new_5_2_5 = (_tmp115 * _const64);
  ap_fixed<32,1> _tmp116 = (UDinv_5_2 * U_5_6);
  ap_fixed<32,1> Ia_new_5_2_6 = (Ia_5_2_6 - _tmp116);
  ap_fixed<32,1> _tmp117 = (UDinv_5_3 * U_5_1);
  ap_fixed<32,1> Ia_new_5_3_1 = (Ia_5_3_1 - _tmp117);
  ap_fixed<32,1> _tmp118 = -(UDinv_5_3);
  ap_fixed<32,1> Ia_new_5_3_2 = (_tmp118 * U_5_2);
  ap_fixed<32,1> _tmp119 = (UDinv_5_3 * U_5_3);
  ap_fixed<32,3> Ia_new_5_3_3 = (Ia_5_3_3 - _tmp119);
  ap_fixed<32,1> _tmp120 = (UDinv_5_3 * U_5_4);
  ap_fixed<32,1> Ia_new_5_3_4 = (Ia_5_3_4 - _tmp120);
  ap_fixed<32,1> _tmp121 = (UDinv_5_3 * _const65);
  ap_fixed<32,1> Ia_new_5_3_5 = (_const66 - _tmp121);
  ap_fixed<32,1> _tmp122 = (UDinv_5_3 * U_5_6);
  ap_fixed<32,1> Ia_new_5_3_6 = (Ia_5_3_6 - _tmp122);
  ap_fixed<32,1> _tmp123 = (UDinv_5_4 * U_5_1);
  ap_fixed<32,1> Ia_new_5_4_1 = (Ia_5_4_1 - _tmp123);
  ap_fixed<32,1> _tmp124 = (UDinv_5_4 * U_5_2);
  ap_fixed<32,1> Ia_new_5_4_2 = (Ia_5_4_2 - _tmp124);
  ap_fixed<32,1> _tmp125 = (UDinv_5_4 * U_5_3);
  ap_fixed<32,1> Ia_new_5_4_3 = (Ia_5_4_3 - _tmp125);
  ap_fixed<32,1> _tmp126 = (UDinv_5_4 * U_5_4);
  ap_fixed<32,1> Ia_new_5_4_4 = (Ia_5_4_4 - _tmp126);
  ap_fixed<32,1> _tmp127 = (UDinv_5_4 * _const67);
  ap_fixed<32,1> Ia_new_5_4_5 = (_const68 - _tmp127);
  ap_fixed<32,1> _tmp128 = (UDinv_5_4 * U_5_6);
  ap_fixed<32,1> Ia_new_5_4_6 = (Ia_5_4_6 - _tmp128);
  ap_fixed<32,1> _tmp129 = (UDinv_5_5 * U_5_1);
  ap_fixed<32,1> Ia_new_5_5_1 = (_const69 - _tmp129);
  ap_fixed<32,1> _tmp130 = (UDinv_5_5 * U_5_2);
  ap_fixed<32,1> Ia_new_5_5_2 = (_const70 - _tmp130);
  ap_fixed<32,1> _tmp131 = (UDinv_5_5 * U_5_3);
  ap_fixed<32,1> Ia_new_5_5_3 = (_const71 - _tmp131);
  ap_fixed<32,1> _tmp132 = (UDinv_5_5 * U_5_4);
  ap_fixed<32,1> Ia_new_5_5_4 = (_const72 - _tmp132);
  ap_fixed<32,1> _tmp133 = (UDinv_5_5 * _const73);
  ap_fixed<32,1> Ia_new_5_5_5 = (_const74 - _tmp133);
  ap_fixed<32,1> _tmp134 = (UDinv_5_5 * U_5_6);
  ap_fixed<32,1> Ia_new_5_5_6 = (_const75 - _tmp134);
  ap_fixed<32,1> _tmp135 = (UDinv_5_6 * U_5_1);
  ap_fixed<32,1> Ia_new_5_6_1 = (Ia_5_6_1 - _tmp135);
  ap_fixed<32,1> _tmp136 = (UDinv_5_6 * U_5_2);
  ap_fixed<32,1> Ia_new_5_6_2 = (Ia_5_6_2 - _tmp136);
  ap_fixed<32,1> _tmp137 = (UDinv_5_6 * U_5_3);
  ap_fixed<32,1> Ia_new_5_6_3 = (Ia_5_6_3 - _tmp137);
  ap_fixed<32,1> _tmp138 = (UDinv_5_6 * U_5_4);
  ap_fixed<32,1> Ia_new_5_6_4 = (Ia_5_6_4 - _tmp138);
  ap_fixed<32,1> _tmp139 = (UDinv_5_6 * _const76);
  ap_fixed<32,1> Ia_new_5_6_5 = (_const77 - _tmp139);
  ap_fixed<32,1> _tmp140 = (UDinv_5_6 * U_5_6);
  ap_fixed<32,1> Ia_new_5_6_6 = (Ia_5_6_6 - _tmp140);
  ap_fixed<32,3> Ai_5_1_1 = Ia_new_5_1_1;
  ap_fixed<32,1> Ai_5_1_2 = Ia_new_5_1_2;
  ap_fixed<32,1> Ai_5_1_3 = Ia_new_5_1_3;
  ap_fixed<32,1> Ai_5_2_1 = Ia_new_5_2_1;
  ap_fixed<32,3> Ai_5_2_2 = Ia_new_5_2_2;
  ap_fixed<32,1> Ai_5_2_3 = Ia_new_5_2_3;
  ap_fixed<32,1> Ai_5_3_1 = Ia_new_5_3_1;
  ap_fixed<32,1> Ai_5_3_2 = Ia_new_5_3_2;
  ap_fixed<32,3> Ai_5_3_3 = Ia_new_5_3_3;
  ap_fixed<32,1> Bi_5_1_1 = Ia_new_5_1_4;
  ap_fixed<32,1> Bi_5_1_2 = Ia_new_5_1_5;
  ap_fixed<32,1> Bi_5_1_3 = Ia_new_5_1_6;
  ap_fixed<32,1> Bi_5_2_1 = Ia_new_5_2_4;
  ap_fixed<32,1> Bi_5_2_2 = Ia_new_5_2_5;
  ap_fixed<32,1> Bi_5_2_3 = Ia_new_5_2_6;
  ap_fixed<32,1> Bi_5_3_1 = Ia_new_5_3_4;
  ap_fixed<32,1> Bi_5_3_2 = Ia_new_5_3_5;
  ap_fixed<32,1> Bi_5_3_3 = Ia_new_5_3_6;
  ap_fixed<32,1> Ci_5_1_1 = Ia_new_5_4_1;
  ap_fixed<32,1> Ci_5_1_2 = Ia_new_5_4_2;
  ap_fixed<32,1> Ci_5_1_3 = Ia_new_5_4_3;
  ap_fixed<32,1> Ci_5_2_1 = Ia_new_5_5_1;
  ap_fixed<32,1> Ci_5_2_2 = Ia_new_5_5_2;
  ap_fixed<32,1> Ci_5_2_3 = Ia_new_5_5_3;
  ap_fixed<32,1> Ci_5_3_1 = Ia_new_5_6_1;
  ap_fixed<32,1> Ci_5_3_2 = Ia_new_5_6_2;
  ap_fixed<32,1> Ci_5_3_3 = Ia_new_5_6_3;
  ap_fixed<32,1> Di_5_1_1 = Ia_new_5_4_4;
  ap_fixed<32,1> Di_5_1_2 = Ia_new_5_4_5;
  ap_fixed<32,1> Di_5_1_3 = Ia_new_5_4_6;
  ap_fixed<32,1> Di_5_2_1 = Ia_new_5_5_4;
  ap_fixed<32,1> Di_5_2_2 = Ia_new_5_5_5;
  ap_fixed<32,1> Di_5_2_3 = Ia_new_5_5_6;
  ap_fixed<32,1> Di_5_3_1 = Ia_new_5_6_4;
  ap_fixed<32,1> Di_5_3_2 = Ia_new_5_6_5;
  ap_fixed<32,1> Di_5_3_3 = Ia_new_5_6_6;
  ap_fixed<32,3> _tmp141 = (limi_rotation_5_1_1 * Ai_5_1_1);
  ap_fixed<32,1> _tmp142 = (limi_rotation_5_1_2 * Ai_5_2_1);
  ap_fixed<32,3> temp1_5_1_1 = (_tmp141 + _tmp142);
  ap_fixed<32,1> _tmp143 = (limi_rotation_5_1_1 * Ai_5_1_2);
  ap_fixed<32,1> _tmp144 = (limi_rotation_5_1_2 * Ai_5_2_2);
  ap_fixed<32,1> temp1_5_1_2 = (_tmp143 + _tmp144);
  ap_fixed<32,1> _tmp145 = (limi_rotation_5_1_1 * Ai_5_1_3);
  ap_fixed<32,1> _tmp146 = (limi_rotation_5_1_2 * Ai_5_2_3);
  ap_fixed<32,1> temp1_5_1_3 = (_tmp145 + _tmp146);
  ap_fixed<32,1> temp1_5_2_1 = Ai_5_3_1;
  ap_fixed<32,1> temp1_5_2_2 = Ai_5_3_2;
  ap_fixed<32,3> temp1_5_2_3 = Ai_5_3_3;
  ap_fixed<32,2> _tmp147 = (limi_rotation_5_3_1 * Ai_5_1_1);
  ap_fixed<32,1> _tmp148 = (limi_rotation_5_3_2 * Ai_5_2_1);
  ap_fixed<32,2> temp1_5_3_1 = (_tmp147 + _tmp148);
  ap_fixed<32,1> _tmp149 = (limi_rotation_5_3_1 * Ai_5_1_2);
  ap_fixed<32,3> _tmp150 = (limi_rotation_5_3_2 * Ai_5_2_2);
  ap_fixed<32,3> temp1_5_3_2 = (_tmp149 + _tmp150);
  ap_fixed<32,1> _tmp151 = (limi_rotation_5_3_1 * Ai_5_1_3);
  ap_fixed<32,1> _tmp152 = (limi_rotation_5_3_2 * Ai_5_2_3);
  ap_fixed<32,1> temp1_5_3_3 = (_tmp151 + _tmp152);
  ap_fixed<32,1> limi_rotation_transpose_5_1_1 = limi_rotation_5_1_1;
  ap_fixed<32,1> limi_rotation_transpose_5_1_3 = limi_rotation_5_3_1;
  ap_fixed<32,1> limi_rotation_transpose_5_2_1 = limi_rotation_5_1_2;
  ap_fixed<32,1> limi_rotation_transpose_5_2_3 = limi_rotation_5_3_2;
  ap_fixed<32,3> _tmp153 = (temp1_5_1_1 * limi_rotation_transpose_5_1_1);
  ap_fixed<32,1> _tmp154 = (temp1_5_1_2 * limi_rotation_transpose_5_2_1);
  ap_fixed<32,3> Ao_5_1_1 = (_tmp153 + _tmp154);
  ap_fixed<32,1> Ao_5_1_2 = temp1_5_1_3;
  ap_fixed<32,2> _tmp155 = (temp1_5_1_1 * limi_rotation_transpose_5_1_3);
  ap_fixed<32,1> _tmp156 = (temp1_5_1_2 * limi_rotation_transpose_5_2_3);
  ap_fixed<32,1> Ao_5_1_3 = (_tmp155 + _tmp156);
  ap_fixed<32,1> _tmp157 = (temp1_5_2_1 * limi_rotation_transpose_5_1_1);
  ap_fixed<32,1> _tmp158 = (temp1_5_2_2 * limi_rotation_transpose_5_2_1);
  ap_fixed<32,1> Ao_5_2_1 = (_tmp157 + _tmp158);
  ap_fixed<32,3> Ao_5_2_2 = temp1_5_2_3;
  ap_fixed<32,1> _tmp159 = (temp1_5_2_1 * limi_rotation_transpose_5_1_3);
  ap_fixed<32,1> _tmp160 = (temp1_5_2_2 * limi_rotation_transpose_5_2_3);
  ap_fixed<32,1> Ao_5_2_3 = (_tmp159 + _tmp160);
  ap_fixed<32,2> _tmp161 = (temp1_5_3_1 * limi_rotation_transpose_5_1_1);
  ap_fixed<32,1> _tmp162 = (temp1_5_3_2 * limi_rotation_transpose_5_2_1);
  ap_fixed<32,1> Ao_5_3_1 = (_tmp161 + _tmp162);
  ap_fixed<32,1> Ao_5_3_2 = temp1_5_3_3;
  ap_fixed<32,1> _tmp163 = (temp1_5_3_1 * limi_rotation_transpose_5_1_3);
  ap_fixed<32,3> _tmp164 = (temp1_5_3_2 * limi_rotation_transpose_5_2_3);
  ap_fixed<32,3> Ao_5_3_3 = (_tmp163 + _tmp164);
  ap_fixed<32,1> _tmp165 = (limi_rotation_5_1_1 * Bi_5_1_1);
  ap_fixed<32,1> _tmp166 = (limi_rotation_5_1_2 * Bi_5_2_1);
  ap_fixed<32,1> temp2_5_1_1 = (_tmp165 + _tmp166);
  ap_fixed<32,1> _tmp167 = (limi_rotation_5_1_1 * Bi_5_1_2);
  ap_fixed<32,1> _tmp168 = (limi_rotation_5_1_2 * Bi_5_2_2);
  ap_fixed<32,1> temp2_5_1_2 = (_tmp167 + _tmp168);
  ap_fixed<32,1> _tmp169 = (limi_rotation_5_1_1 * Bi_5_1_3);
  ap_fixed<32,1> _tmp170 = (limi_rotation_5_1_2 * Bi_5_2_3);
  ap_fixed<32,1> temp2_5_1_3 = (_tmp169 + _tmp170);
  ap_fixed<32,1> temp2_5_2_1 = Bi_5_3_1;
  ap_fixed<32,1> temp2_5_2_2 = Bi_5_3_2;
  ap_fixed<32,1> temp2_5_2_3 = Bi_5_3_3;
  ap_fixed<32,1> _tmp171 = (limi_rotation_5_3_1 * Bi_5_1_1);
  ap_fixed<32,1> _tmp172 = (limi_rotation_5_3_2 * Bi_5_2_1);
  ap_fixed<32,1> temp2_5_3_1 = (_tmp171 + _tmp172);
  ap_fixed<32,1> _tmp173 = (limi_rotation_5_3_1 * Bi_5_1_2);
  ap_fixed<32,1> _tmp174 = (limi_rotation_5_3_2 * Bi_5_2_2);
  ap_fixed<32,1> temp2_5_3_2 = (_tmp173 + _tmp174);
  ap_fixed<32,1> _tmp175 = (limi_rotation_5_3_1 * Bi_5_1_3);
  ap_fixed<32,1> _tmp176 = (limi_rotation_5_3_2 * Bi_5_2_3);
  ap_fixed<32,1> temp2_5_3_3 = (_tmp175 + _tmp176);
  ap_fixed<32,1> _tmp177 = (temp2_5_1_1 * limi_rotation_transpose_5_1_1);
  ap_fixed<32,1> _tmp178 = (temp2_5_1_2 * limi_rotation_transpose_5_2_1);
  ap_fixed<32,1> Bo_temp_5_1_1 = (_tmp177 + _tmp178);
  ap_fixed<32,1> Bo_temp_5_1_2 = temp2_5_1_3;
  ap_fixed<32,1> _tmp179 = (temp2_5_1_1 * limi_rotation_transpose_5_1_3);
  ap_fixed<32,1> _tmp180 = (temp2_5_1_2 * limi_rotation_transpose_5_2_3);
  ap_fixed<32,1> Bo_temp_5_1_3 = (_tmp179 + _tmp180);
  ap_fixed<32,1> _tmp181 = (temp2_5_2_1 * limi_rotation_transpose_5_1_1);
  ap_fixed<32,1> _tmp182 = (temp2_5_2_2 * limi_rotation_transpose_5_2_1);
  ap_fixed<32,1> Bo_temp_5_2_1 = (_tmp181 + _tmp182);
  ap_fixed<32,1> Bo_temp_5_2_2 = temp2_5_2_3;
  ap_fixed<32,1> _tmp183 = (temp2_5_2_1 * limi_rotation_transpose_5_1_3);
  ap_fixed<32,1> _tmp184 = (temp2_5_2_2 * limi_rotation_transpose_5_2_3);
  ap_fixed<32,1> Bo_temp_5_2_3 = (_tmp183 + _tmp184);
  ap_fixed<32,1> _tmp185 = (temp2_5_3_1 * limi_rotation_transpose_5_1_1);
  ap_fixed<32,1> _tmp186 = (temp2_5_3_2 * limi_rotation_transpose_5_2_1);
  ap_fixed<32,1> Bo_temp_5_3_1 = (_tmp185 + _tmp186);
  ap_fixed<32,1> Bo_temp_5_3_2 = temp2_5_3_3;
  ap_fixed<32,1> _tmp187 = (temp2_5_3_1 * limi_rotation_transpose_5_1_3);
  ap_fixed<32,1> _tmp188 = (temp2_5_3_2 * limi_rotation_transpose_5_2_3);
  ap_fixed<32,1> Bo_temp_5_3_3 = (_tmp187 + _tmp188);
  ap_fixed<32,1> _tmp189 = (limi_rotation_5_1_1 * Di_5_1_1);
  ap_fixed<32,1> _tmp190 = (limi_rotation_5_1_2 * Di_5_2_1);
  ap_fixed<32,1> temp3_5_1_1 = (_tmp189 + _tmp190);
  ap_fixed<32,1> _tmp191 = (limi_rotation_5_1_1 * Di_5_1_2);
  ap_fixed<32,1> _tmp192 = (limi_rotation_5_1_2 * Di_5_2_2);
  ap_fixed<32,1> temp3_5_1_2 = (_tmp191 + _tmp192);
  ap_fixed<32,1> _tmp193 = (limi_rotation_5_1_1 * Di_5_1_3);
  ap_fixed<32,1> _tmp194 = (limi_rotation_5_1_2 * Di_5_2_3);
  ap_fixed<32,1> temp3_5_1_3 = (_tmp193 + _tmp194);
  ap_fixed<32,1> temp3_5_2_1 = Di_5_3_1;
  ap_fixed<32,1> temp3_5_2_2 = Di_5_3_2;
  ap_fixed<32,1> temp3_5_2_3 = Di_5_3_3;
  ap_fixed<32,1> _tmp195 = (limi_rotation_5_3_1 * Di_5_1_1);
  ap_fixed<32,1> _tmp196 = (limi_rotation_5_3_2 * Di_5_2_1);
  ap_fixed<32,1> temp3_5_3_1 = (_tmp195 + _tmp196);
  ap_fixed<32,1> _tmp197 = (limi_rotation_5_3_1 * Di_5_1_2);
  ap_fixed<32,1> _tmp198 = (limi_rotation_5_3_2 * Di_5_2_2);
  ap_fixed<32,1> temp3_5_3_2 = (_tmp197 + _tmp198);
  ap_fixed<32,1> _tmp199 = (limi_rotation_5_3_1 * Di_5_1_3);
  ap_fixed<32,1> _tmp200 = (limi_rotation_5_3_2 * Di_5_2_3);
  ap_fixed<32,1> temp3_5_3_3 = (_tmp199 + _tmp200);
  ap_fixed<32,1> _tmp201 = (temp3_5_1_1 * limi_rotation_transpose_5_1_1);
  ap_fixed<32,1> _tmp202 = (temp3_5_1_2 * limi_rotation_transpose_5_2_1);
  ap_fixed<32,1> Do_temp_5_1_1 = (_tmp201 + _tmp202);
  ap_fixed<32,1> Do_temp_5_1_2 = temp3_5_1_3;
  ap_fixed<32,1> _tmp203 = (temp3_5_1_1 * limi_rotation_transpose_5_1_3);
  ap_fixed<32,1> _tmp204 = (temp3_5_1_2 * limi_rotation_transpose_5_2_3);
  ap_fixed<32,1> Do_temp_5_1_3 = (_tmp203 + _tmp204);
  ap_fixed<32,1> _tmp205 = (temp3_5_2_1 * limi_rotation_transpose_5_1_1);
  ap_fixed<32,1> _tmp206 = (temp3_5_2_2 * limi_rotation_transpose_5_2_1);
  ap_fixed<32,1> Do_temp_5_2_1 = (_tmp205 + _tmp206);
  ap_fixed<32,1> Do_temp_5_2_2 = temp3_5_2_3;
  ap_fixed<32,1> _tmp207 = (temp3_5_2_1 * limi_rotation_transpose_5_1_3);
  ap_fixed<32,1> _tmp208 = (temp3_5_2_2 * limi_rotation_transpose_5_2_3);
  ap_fixed<32,1> Do_temp_5_2_3 = (_tmp207 + _tmp208);
  ap_fixed<32,1> _tmp209 = (temp3_5_3_1 * limi_rotation_transpose_5_1_1);
  ap_fixed<32,1> _tmp210 = (temp3_5_3_2 * limi_rotation_transpose_5_2_1);
  ap_fixed<32,1> Do_temp_5_3_1 = (_tmp209 + _tmp210);
  ap_fixed<32,1> Do_temp_5_3_2 = temp3_5_3_3;
  ap_fixed<32,1> _tmp211 = (temp3_5_3_1 * limi_rotation_transpose_5_1_3);
  ap_fixed<32,1> _tmp212 = (temp3_5_3_2 * limi_rotation_transpose_5_2_3);
  ap_fixed<32,1> Do_temp_5_3_3 = (_tmp211 + _tmp212);
  ap_fixed<32,1> _tmp213 = (_const78 * Bo_temp_5_1_3);
  ap_fixed<32,1> Do_temp2_5_1_1 = (_tmp213 + Do_temp_5_1_1);
  ap_fixed<32,1> _tmp214 = (_const79 * Bo_temp_5_1_3);
  ap_fixed<32,1> Do_temp2_5_1_2 = (_tmp214 + Do_temp_5_1_2);
  ap_fixed<32,1> _tmp215 = (_const80 * Bo_temp_5_1_2);
  ap_fixed<32,1> _tmp216 = (_const81 * Bo_temp_5_1_1);
  ap_fixed<32,1> _tmp217 = (_tmp215 - _tmp216);
  ap_fixed<32,1> Do_temp2_5_1_3 = (_tmp217 + Do_temp_5_1_3);
  ap_fixed<32,1> _tmp218 = (_const82 * Bo_temp_5_2_3);
  ap_fixed<32,1> Do_temp2_5_2_1 = (_tmp218 + Do_temp_5_2_1);
  ap_fixed<32,1> _tmp219 = (_const83 * Bo_temp_5_2_3);
  ap_fixed<32,1> Do_temp2_5_2_2 = (_tmp219 + Do_temp_5_2_2);
  ap_fixed<32,1> _tmp220 = (_const84 * Bo_temp_5_2_2);
  ap_fixed<32,1> _tmp221 = (_const85 * Bo_temp_5_2_1);
  ap_fixed<32,1> _tmp222 = (_tmp220 - _tmp221);
  ap_fixed<32,1> Do_temp2_5_2_3 = (_tmp222 + Do_temp_5_2_3);
  ap_fixed<32,1> _tmp223 = (_const86 * Bo_temp_5_3_3);
  ap_fixed<32,1> Do_temp2_5_3_1 = (_tmp223 + Do_temp_5_3_1);
  ap_fixed<32,1> _tmp224 = (_const87 * Bo_temp_5_3_3);
  ap_fixed<32,1> Do_temp2_5_3_2 = (_tmp224 + Do_temp_5_3_2);
  ap_fixed<32,1> _tmp225 = (_const88 * Bo_temp_5_3_2);
  ap_fixed<32,1> _tmp226 = (_const89 * Bo_temp_5_3_1);
  ap_fixed<32,1> _tmp227 = (_tmp225 - _tmp226);
  ap_fixed<32,1> Do_temp2_5_3_3 = (_tmp227 + Do_temp_5_3_3);
  ap_fixed<32,1> _tmp228 = (_const90 * Ao_5_1_3);
  ap_fixed<32,1> Co_5_1_1 = (_tmp228 + Bo_temp_5_1_1);
  ap_fixed<32,1> _tmp229 = (_const91 * Ao_5_1_3);
  ap_fixed<32,1> Co_5_2_1 = (_tmp229 + Bo_temp_5_1_2);
  ap_fixed<32,1> _tmp230 = (_const92 * Ao_5_1_2);
  ap_fixed<32,2> _tmp231 = (_const93 * Ao_5_1_1);
  ap_fixed<32,2> _tmp232 = (_tmp230 - _tmp231);
  ap_fixed<32,2> Co_5_3_1 = (_tmp232 + Bo_temp_5_1_3);
  ap_fixed<32,1> _tmp233 = (_const94 * Ao_5_2_3);
  ap_fixed<32,1> Co_5_1_2 = (_tmp233 + Bo_temp_5_2_1);
  ap_fixed<32,1> _tmp234 = (_const95 * Ao_5_2_3);
  ap_fixed<32,1> Co_5_2_2 = (_tmp234 + Bo_temp_5_2_2);
  ap_fixed<32,1> _tmp235 = (_const96 * Ao_5_2_2);
  ap_fixed<32,1> _tmp236 = (_const97 * Ao_5_2_1);
  ap_fixed<32,1> _tmp237 = (_tmp235 - _tmp236);
  ap_fixed<32,1> Co_5_3_2 = (_tmp237 + Bo_temp_5_2_3);
  ap_fixed<32,2> _tmp238 = (_const98 * Ao_5_3_3);
  ap_fixed<32,2> Co_5_1_3 = (_tmp238 + Bo_temp_5_3_1);
  ap_fixed<32,1> _tmp239 = (_const99 * Ao_5_3_3);
  ap_fixed<32,1> Co_5_2_3 = (_tmp239 + Bo_temp_5_3_2);
  ap_fixed<32,1> _tmp240 = (_const100 * Ao_5_3_2);
  ap_fixed<32,1> _tmp241 = (_const101 * Ao_5_3_1);
  ap_fixed<32,1> _tmp242 = (_tmp240 - _tmp241);
  ap_fixed<32,1> Co_5_3_3 = (_tmp242 + Bo_temp_5_3_3);
  ap_fixed<32,1> Bo_5_1_1 = Co_5_1_1;
  ap_fixed<32,1> Bo_5_1_2 = Co_5_2_1;
  ap_fixed<32,2> Bo_5_1_3 = Co_5_3_1;
  ap_fixed<32,1> Bo_5_2_1 = Co_5_1_2;
  ap_fixed<32,1> Bo_5_2_2 = Co_5_2_2;
  ap_fixed<32,1> Bo_5_2_3 = Co_5_3_2;
  ap_fixed<32,2> Bo_5_3_1 = Co_5_1_3;
  ap_fixed<32,1> Bo_5_3_2 = Co_5_2_3;
  ap_fixed<32,1> Bo_5_3_3 = Co_5_3_3;
  ap_fixed<32,1> _tmp243 = (_const102 * Bo_5_1_3);
  ap_fixed<32,1> Do_5_1_1 = (_tmp243 + Do_temp2_5_1_1);
  ap_fixed<32,1> _tmp244 = (_const103 * Bo_5_1_3);
  ap_fixed<32,1> Do_5_2_1 = (_tmp244 + Do_temp2_5_1_2);
  ap_fixed<32,1> _tmp245 = (_const104 * Bo_5_1_2);
  ap_fixed<32,1> _tmp246 = (_const105 * Bo_5_1_1);
  ap_fixed<32,1> _tmp247 = (_tmp245 + _tmp246);
  ap_fixed<32,1> Do_5_3_1 = (_tmp247 + Do_temp2_5_1_3);
  ap_fixed<32,1> _tmp248 = (_const106 * Bo_5_2_3);
  ap_fixed<32,1> Do_5_1_2 = (_tmp248 + Do_temp2_5_2_1);
  ap_fixed<32,1> _tmp249 = (_const107 * Bo_5_2_3);
  ap_fixed<32,1> Do_5_2_2 = (_tmp249 + Do_temp2_5_2_2);
  ap_fixed<32,1> _tmp250 = (_const108 * Bo_5_2_2);
  ap_fixed<32,1> _tmp251 = (_const109 * Bo_5_2_1);
  ap_fixed<32,1> _tmp252 = (_tmp250 + _tmp251);
  ap_fixed<32,1> Do_5_3_2 = (_tmp252 + Do_temp2_5_2_3);
  ap_fixed<32,1> _tmp253 = (_const110 * Bo_5_3_3);
  ap_fixed<32,1> Do_5_1_3 = (_tmp253 + Do_temp2_5_3_1);
  ap_fixed<32,1> _tmp254 = (_const111 * Bo_5_3_3);
  ap_fixed<32,1> Do_5_2_3 = (_tmp254 + Do_temp2_5_3_2);
  ap_fixed<32,1> _tmp255 = (_const112 * Bo_5_3_2);
  ap_fixed<32,1> _tmp256 = (_const113 * Bo_5_3_1);
  ap_fixed<32,1> _tmp257 = (_tmp255 + _tmp256);
  ap_fixed<32,1> Do_5_3_3 = (_tmp257 + Do_temp2_5_3_3);
  ap_fixed<32,4> Ia_4_1_1 = (Ao_5_1_1 + _const114);
  ap_fixed<32,1> Ia_4_1_2 = (Ao_5_1_2 + _const115);
  ap_fixed<32,1> Ia_4_1_3 = (Ao_5_1_3 + _const116);
  ap_fixed<32,1> Ia_4_2_1 = (Ao_5_2_1 + _const117);
  ap_fixed<32,4> Ia_4_2_2 = (Ao_5_2_2 + _const118);
  ap_fixed<32,1> Ia_4_2_3 = (Ao_5_2_3 + _const119);
  ap_fixed<32,1> Ia_4_3_1 = (Ao_5_3_1 + _const120);
  ap_fixed<32,1> Ia_4_3_2 = (Ao_5_3_2 + _const121);
  ap_fixed<32,4> Ia_4_3_3 = (Ao_5_3_3 + _const122);
  ap_fixed<32,1> Ia_4_4_1 = (Co_5_1_1 + _const123);
  ap_fixed<32,1> Ia_4_4_2 = (Co_5_1_2 - _const124);
  ap_fixed<32,2> Ia_4_4_3 = (Co_5_1_3 + _const125);
  ap_fixed<32,1> Ia_4_5_1 = (Co_5_2_1 + _const126);
  ap_fixed<32,1> Ia_4_5_2 = (Co_5_2_2 + _const127);
  ap_fixed<32,1> Ia_4_5_3 = (Co_5_2_3 + _const128);
  ap_fixed<32,2> Ia_4_6_1 = (Co_5_3_1 - _const129);
  ap_fixed<32,1> Ia_4_6_2 = (Co_5_3_2 - _const130);
  ap_fixed<32,1> Ia_4_6_3 = (Co_5_3_3 + _const131);
  ap_fixed<32,1> Ia_4_1_4 = (Bo_5_1_1 + _const132);
  ap_fixed<32,1> Ia_4_1_5 = (Bo_5_1_2 + _const133);
  ap_fixed<32,2> Ia_4_1_6 = (Bo_5_1_3 - _const134);
  ap_fixed<32,1> Ia_4_2_4 = (Bo_5_2_1 - _const135);
  ap_fixed<32,1> Ia_4_2_5 = (Bo_5_2_2 + _const136);
  ap_fixed<32,1> Ia_4_2_6 = (Bo_5_2_3 - _const137);
  ap_fixed<32,2> Ia_4_3_4 = (Bo_5_3_1 + _const138);
  ap_fixed<32,1> Ia_4_3_5 = (Bo_5_3_2 + _const139);
  ap_fixed<32,1> Ia_4_3_6 = (Bo_5_3_3 + _const140);
  ap_fixed<32,1> Ia_4_4_4 = (Do_5_1_1 + _const141);
  ap_fixed<32,1> Ia_4_4_5 = (Do_5_1_2 + _const142);
  ap_fixed<32,1> Ia_4_4_6 = (Do_5_1_3 + _const143);
  ap_fixed<32,1> Ia_4_5_4 = (Do_5_2_1 + _const144);
  ap_fixed<32,1> Ia_4_5_5 = (Do_5_2_2 + _const145);
  ap_fixed<32,1> Ia_4_5_6 = (Do_5_2_3 - _const146);
  ap_fixed<32,1> Ia_4_6_4 = (Do_5_3_1 + _const147);
  ap_fixed<32,1> Ia_4_6_5 = (Do_5_3_2 - _const148);
  ap_fixed<32,1> Ia_4_6_6 = (Do_5_3_3 + _const149);
  ap_fixed<32,2> U_4_1 = Ia_4_1_6;
  ap_fixed<32,1> U_4_2 = Ia_4_2_6;
  ap_fixed<32,1> U_4_3 = Ia_4_3_6;
  ap_fixed<32,1> U_4_4 = Ia_4_4_6;
  ap_fixed<32,1> U_4_5 = Ia_4_5_6;
  ap_fixed<16,1> U_4_6 = Ia_4_6_6;
  ap_fixed<16,2> Dinv_4_1 = (ap_fixed<16,2>) ((_const150 / U_4_6));
  ap_fixed<16,3> UDinv_4_1 = (ap_fixed<16,3>) ((U_4_1 * Dinv_4_1));
  ap_fixed<16,1> UDinv_4_2 = (ap_fixed<16,1>) ((U_4_2 * Dinv_4_1));
  ap_fixed<16,1> UDinv_4_3 = (ap_fixed<16,1>) ((U_4_3 * Dinv_4_1));
  ap_fixed<16,1> UDinv_4_4 = (ap_fixed<16,1>) ((U_4_4 * Dinv_4_1));
  ap_fixed<16,1> UDinv_4_5 = (ap_fixed<16,1>) ((U_4_5 * Dinv_4_1));
  ap_fixed<16,2> UDinv_4_6 = (U_4_6 * Dinv_4_1);
  ap_fixed<16,4> _tmp258 = (ap_fixed<16,4>) ((UDinv_4_1 * U_4_1));
  ap_fixed<16,3> Ia_new_4_1_1 = (ap_fixed<16,3>) ((Ia_4_1_1 - _tmp258));
  ap_fixed<16,2> _tmp259 = (ap_fixed<16,2>) ((UDinv_4_1 * U_4_2));
  ap_fixed<16,2> Ia_new_4_1_2 = (ap_fixed<16,2>) ((Ia_4_1_2 - _tmp259));
  ap_fixed<16,2> _tmp260 = (ap_fixed<16,2>) ((UDinv_4_1 * U_4_3));
  ap_fixed<16,2> Ia_new_4_1_3 = (ap_fixed<16,2>) ((Ia_4_1_3 - _tmp260));
  ap_fixed<16,1> _tmp261 = (ap_fixed<16,1>) ((UDinv_4_1 * U_4_4));
  ap_fixed<16,1> Ia_new_4_1_4 = (ap_fixed<16,1>) ((Ia_4_1_4 - _tmp261));
  ap_fixed<16,1> _tmp262 = (ap_fixed<16,1>) ((UDinv_4_1 * U_4_5));
  ap_fixed<16,1> Ia_new_4_1_5 = (ap_fixed<16,1>) ((Ia_4_1_5 - _tmp262));
  ap_fixed<16,3> _tmp263 = (UDinv_4_1 * U_4_6);
  ap_fixed<16,1> Ia_new_4_1_6 = (ap_fixed<16,1>) ((Ia_4_1_6 - _tmp263));
  ap_fixed<16,2> _tmp264 = (ap_fixed<16,2>) ((UDinv_4_2 * U_4_1));
  ap_fixed<16,2> Ia_new_4_2_1 = (ap_fixed<16,2>) ((Ia_4_2_1 - _tmp264));
  ap_fixed<16,1> _tmp265 = (ap_fixed<16,1>) ((UDinv_4_2 * U_4_2));
  ap_fixed<16,4> Ia_new_4_2_2 = (ap_fixed<16,4>) ((Ia_4_2_2 - _tmp265));
  ap_fixed<16,1> _tmp266 = (ap_fixed<16,1>) ((UDinv_4_2 * U_4_3));
  ap_fixed<16,1> Ia_new_4_2_3 = (ap_fixed<16,1>) ((Ia_4_2_3 - _tmp266));
  ap_fixed<16,1> _tmp267 = (ap_fixed<16,1>) ((UDinv_4_2 * U_4_4));
  ap_fixed<16,1> Ia_new_4_2_4 = (ap_fixed<16,1>) ((Ia_4_2_4 - _tmp267));
  ap_fixed<16,1> _tmp268 = (ap_fixed<16,1>) ((UDinv_4_2 * U_4_5));
  ap_fixed<16,1> Ia_new_4_2_5 = (ap_fixed<16,1>) ((Ia_4_2_5 - _tmp268));
  ap_fixed<16,1> _tmp269 = (UDinv_4_2 * U_4_6);
  ap_fixed<16,1> Ia_new_4_2_6 = (ap_fixed<16,1>) ((Ia_4_2_6 - _tmp269));
  ap_fixed<16,2> _tmp270 = (ap_fixed<16,2>) ((UDinv_4_3 * U_4_1));
  ap_fixed<16,2> Ia_new_4_3_1 = (ap_fixed<16,2>) ((Ia_4_3_1 - _tmp270));
  ap_fixed<16,1> _tmp271 = (ap_fixed<16,1>) ((UDinv_4_3 * U_4_2));
  ap_fixed<16,1> Ia_new_4_3_2 = (ap_fixed<16,1>) ((Ia_4_3_2 - _tmp271));
  ap_fixed<16,1> _tmp272 = (ap_fixed<16,1>) ((UDinv_4_3 * U_4_3));
  ap_fixed<16,4> Ia_new_4_3_3 = (ap_fixed<16,4>) ((Ia_4_3_3 - _tmp272));
  ap_fixed<16,1> _tmp273 = (ap_fixed<16,1>) ((UDinv_4_3 * U_4_4));
  ap_fixed<16,2> Ia_new_4_3_4 = (ap_fixed<16,2>) ((Ia_4_3_4 - _tmp273));
  ap_fixed<16,1> _tmp274 = (ap_fixed<16,1>) ((UDinv_4_3 * U_4_5));
  ap_fixed<16,1> Ia_new_4_3_5 = (ap_fixed<16,1>) ((Ia_4_3_5 - _tmp274));
  ap_fixed<16,1> _tmp275 = (UDinv_4_3 * U_4_6);
  ap_fixed<16,1> Ia_new_4_3_6 = (ap_fixed<16,1>) ((Ia_4_3_6 - _tmp275));
  ap_fixed<16,1> _tmp276 = (ap_fixed<16,1>) ((UDinv_4_4 * U_4_1));
  ap_fixed<16,1> Ia_new_4_4_1 = (ap_fixed<16,1>) ((Ia_4_4_1 - _tmp276));
  ap_fixed<16,1> _tmp277 = (ap_fixed<16,1>) ((UDinv_4_4 * U_4_2));
  ap_fixed<16,1> Ia_new_4_4_2 = (ap_fixed<16,1>) ((Ia_4_4_2 - _tmp277));
  ap_fixed<16,1> _tmp278 = (ap_fixed<16,1>) ((UDinv_4_4 * U_4_3));
  ap_fixed<16,2> Ia_new_4_4_3 = (ap_fixed<16,2>) ((Ia_4_4_3 - _tmp278));
  ap_fixed<16,1> _tmp279 = (ap_fixed<16,1>) ((UDinv_4_4 * U_4_4));
  ap_fixed<16,1> Ia_new_4_4_4 = (ap_fixed<16,1>) ((Ia_4_4_4 - _tmp279));
  ap_fixed<16,1> _tmp280 = (ap_fixed<16,1>) ((UDinv_4_4 * U_4_5));
  ap_fixed<16,1> Ia_new_4_4_5 = (ap_fixed<16,1>) ((Ia_4_4_5 - _tmp280));
  ap_fixed<16,1> _tmp281 = (UDinv_4_4 * U_4_6);
  ap_fixed<16,1> Ia_new_4_4_6 = (ap_fixed<16,1>) ((Ia_4_4_6 - _tmp281));
  ap_fixed<16,1> _tmp282 = (ap_fixed<16,1>) ((UDinv_4_5 * U_4_1));
  ap_fixed<16,1> Ia_new_4_5_1 = (ap_fixed<16,1>) ((Ia_4_5_1 - _tmp282));
  ap_fixed<16,1> _tmp283 = (ap_fixed<16,1>) ((UDinv_4_5 * U_4_2));
  ap_fixed<16,1> Ia_new_4_5_2 = (ap_fixed<16,1>) ((Ia_4_5_2 - _tmp283));
  ap_fixed<16,1> _tmp284 = (ap_fixed<16,1>) ((UDinv_4_5 * U_4_3));
  ap_fixed<16,1> Ia_new_4_5_3 = (ap_fixed<16,1>) ((Ia_4_5_3 - _tmp284));
  ap_fixed<16,1> _tmp285 = (ap_fixed<16,1>) ((UDinv_4_5 * U_4_4));
  ap_fixed<16,1> Ia_new_4_5_4 = (ap_fixed<16,1>) ((Ia_4_5_4 - _tmp285));
  ap_fixed<16,1> _tmp286 = (ap_fixed<16,1>) ((UDinv_4_5 * U_4_5));
  ap_fixed<16,1> Ia_new_4_5_5 = (ap_fixed<16,1>) ((Ia_4_5_5 - _tmp286));
  ap_fixed<16,1> _tmp287 = (UDinv_4_5 * U_4_6);
  ap_fixed<16,1> Ia_new_4_5_6 = (ap_fixed<16,1>) ((Ia_4_5_6 - _tmp287));
  ap_fixed<16,3> _tmp288 = (ap_fixed<16,3>) ((UDinv_4_6 * U_4_1));
  ap_fixed<16,1> Ia_new_4_6_1 = (ap_fixed<16,1>) ((Ia_4_6_1 - _tmp288));
  ap_fixed<16,1> _tmp289 = (ap_fixed<16,1>) ((UDinv_4_6 * U_4_2));
  ap_fixed<16,1> Ia_new_4_6_2 = (ap_fixed<16,1>) ((Ia_4_6_2 - _tmp289));
  ap_fixed<16,1> _tmp290 = (ap_fixed<16,1>) ((UDinv_4_6 * U_4_3));
  ap_fixed<16,1> Ia_new_4_6_3 = (ap_fixed<16,1>) ((Ia_4_6_3 - _tmp290));
  ap_fixed<16,1> _tmp291 = (ap_fixed<16,1>) ((UDinv_4_6 * U_4_4));
  ap_fixed<16,1> Ia_new_4_6_4 = (ap_fixed<16,1>) ((Ia_4_6_4 - _tmp291));
  ap_fixed<16,1> _tmp292 = (ap_fixed<16,1>) ((UDinv_4_6 * U_4_5));
  ap_fixed<16,1> Ia_new_4_6_5 = (ap_fixed<16,1>) ((Ia_4_6_5 - _tmp292));
  ap_fixed<16,1> _tmp293 = (UDinv_4_6 * U_4_6);
  ap_fixed<16,1> Ia_new_4_6_6 = (ap_fixed<16,1>) ((Ia_4_6_6 - _tmp293));
  ap_fixed<16,3> Ai_4_1_1 = Ia_new_4_1_1;
  ap_fixed<16,2> Ai_4_1_2 = Ia_new_4_1_2;
  ap_fixed<16,2> Ai_4_1_3 = Ia_new_4_1_3;
  ap_fixed<16,2> Ai_4_2_1 = Ia_new_4_2_1;
  ap_fixed<16,4> Ai_4_2_2 = Ia_new_4_2_2;
  ap_fixed<16,1> Ai_4_2_3 = Ia_new_4_2_3;
  ap_fixed<16,2> Ai_4_3_1 = Ia_new_4_3_1;
  ap_fixed<16,1> Ai_4_3_2 = Ia_new_4_3_2;
  ap_fixed<16,4> Ai_4_3_3 = Ia_new_4_3_3;
  ap_fixed<16,1> Bi_4_1_1 = Ia_new_4_1_4;
  ap_fixed<16,1> Bi_4_1_2 = Ia_new_4_1_5;
  ap_fixed<16,1> Bi_4_1_3 = Ia_new_4_1_6;
  ap_fixed<16,1> Bi_4_2_1 = Ia_new_4_2_4;
  ap_fixed<16,1> Bi_4_2_2 = Ia_new_4_2_5;
  ap_fixed<16,1> Bi_4_2_3 = Ia_new_4_2_6;
  ap_fixed<16,2> Bi_4_3_1 = Ia_new_4_3_4;
  ap_fixed<16,1> Bi_4_3_2 = Ia_new_4_3_5;
  ap_fixed<16,1> Bi_4_3_3 = Ia_new_4_3_6;
  ap_fixed<32,1> Ci_4_1_1 = Ia_new_4_4_1;
  ap_fixed<32,1> Ci_4_1_2 = Ia_new_4_4_2;
  ap_fixed<32,2> Ci_4_1_3 = Ia_new_4_4_3;
  ap_fixed<32,1> Ci_4_2_1 = Ia_new_4_5_1;
  ap_fixed<32,1> Ci_4_2_2 = Ia_new_4_5_2;
  ap_fixed<32,1> Ci_4_2_3 = Ia_new_4_5_3;
  ap_fixed<32,1> Ci_4_3_1 = Ia_new_4_6_1;
  ap_fixed<32,1> Ci_4_3_2 = Ia_new_4_6_2;
  ap_fixed<32,1> Ci_4_3_3 = Ia_new_4_6_3;
  ap_fixed<16,1> Di_4_1_1 = Ia_new_4_4_4;
  ap_fixed<16,1> Di_4_1_2 = Ia_new_4_4_5;
  ap_fixed<16,1> Di_4_1_3 = Ia_new_4_4_6;
  ap_fixed<16,1> Di_4_2_1 = Ia_new_4_5_4;
  ap_fixed<16,1> Di_4_2_2 = Ia_new_4_5_5;
  ap_fixed<16,1> Di_4_2_3 = Ia_new_4_5_6;
  ap_fixed<16,1> Di_4_3_1 = Ia_new_4_6_4;
  ap_fixed<16,1> Di_4_3_2 = Ia_new_4_6_5;
  ap_fixed<16,1> Di_4_3_3 = Ia_new_4_6_6;
  ap_fixed<16,3> _tmp294 = (ap_fixed<16,3>) ((limi_rotation_4_1_1 * Ai_4_1_1));
  ap_fixed<16,1> _tmp295 = (ap_fixed<16,1>) ((limi_rotation_4_1_2 * Ai_4_2_1));
  ap_fixed<16,4> temp1_4_1_1 = (_tmp294 + _tmp295);
  ap_fixed<16,2> _tmp296 = (ap_fixed<16,2>) ((limi_rotation_4_1_1 * Ai_4_1_2));
  ap_fixed<16,2> _tmp297 = (ap_fixed<16,2>) ((limi_rotation_4_1_2 * Ai_4_2_2));
  ap_fixed<16,3> temp1_4_1_2 = (_tmp296 + _tmp297);
  ap_fixed<16,2> _tmp298 = (ap_fixed<16,2>) ((limi_rotation_4_1_1 * Ai_4_1_3));
  ap_fixed<16,1> _tmp299 = (ap_fixed<16,1>) ((limi_rotation_4_1_2 * Ai_4_2_3));
  ap_fixed<16,2> temp1_4_1_3 = (_tmp298 + _tmp299);
  ap_fixed<16,2> temp1_4_2_1 = -(Ai_4_3_1);
  ap_fixed<16,1> temp1_4_2_2 = -(Ai_4_3_2);
  ap_fixed<16,4> temp1_4_2_3 = -(Ai_4_3_3);
  ap_fixed<16,2> _tmp300 = (ap_fixed<16,2>) ((limi_rotation_4_3_1 * Ai_4_1_1));
  ap_fixed<16,2> _tmp301 = (ap_fixed<16,2>) ((limi_rotation_4_3_2 * Ai_4_2_1));
  ap_fixed<16,2> temp1_4_3_1 = (_tmp300 + _tmp301);
  ap_fixed<16,1> _tmp302 = (ap_fixed<16,1>) ((limi_rotation_4_3_1 * Ai_4_1_2));
  ap_fixed<16,4> _tmp303 = (ap_fixed<16,4>) ((limi_rotation_4_3_2 * Ai_4_2_2));
  ap_fixed<16,4> temp1_4_3_2 = (_tmp302 + _tmp303);
  ap_fixed<16,1> _tmp304 = (ap_fixed<16,1>) ((limi_rotation_4_3_1 * Ai_4_1_3));
  ap_fixed<16,1> _tmp305 = (ap_fixed<16,1>) ((limi_rotation_4_3_2 * Ai_4_2_3));
  ap_fixed<16,1> temp1_4_3_3 = (_tmp304 + _tmp305);
  ap_fixed<16,1> limi_rotation_transpose_4_1_1 = limi_rotation_4_1_1;
  ap_fixed<16,1> limi_rotation_transpose_4_1_3 = limi_rotation_4_3_1;
  ap_fixed<16,1> limi_rotation_transpose_4_2_1 = limi_rotation_4_1_2;
  ap_fixed<16,1> limi_rotation_transpose_4_2_3 = limi_rotation_4_3_2;
  ap_fixed<16,4> _tmp306 = (temp1_4_1_1 * limi_rotation_transpose_4_1_1);
  ap_fixed<16,2> _tmp307 = (temp1_4_1_2 * limi_rotation_transpose_4_2_1);
  ap_fixed<16,4> Ao_4_1_1 = (_tmp306 + _tmp307);
  ap_fixed<16,2> Ao_4_1_2 = -(temp1_4_1_3);
  ap_fixed<16,2> _tmp308 = (temp1_4_1_1 * limi_rotation_transpose_4_1_3);
  ap_fixed<16,3> _tmp309 = (temp1_4_1_2 * limi_rotation_transpose_4_2_3);
  ap_fixed<16,3> Ao_4_1_3 = (_tmp308 + _tmp309);
  ap_fixed<16,2> _tmp310 = (temp1_4_2_1 * limi_rotation_transpose_4_1_1);
  ap_fixed<16,1> _tmp311 = (temp1_4_2_2 * limi_rotation_transpose_4_2_1);
  ap_fixed<16,2> Ao_4_2_1 = (_tmp310 + _tmp311);
  ap_fixed<16,4> Ao_4_2_2 = -(temp1_4_2_3);
  ap_fixed<16,1> _tmp312 = (temp1_4_2_1 * limi_rotation_transpose_4_1_3);
  ap_fixed<16,1> _tmp313 = (temp1_4_2_2 * limi_rotation_transpose_4_2_3);
  ap_fixed<16,1> Ao_4_2_3 = (_tmp312 + _tmp313);
  ap_fixed<16,2> _tmp314 = (temp1_4_3_1 * limi_rotation_transpose_4_1_1);
  ap_fixed<16,2> _tmp315 = (temp1_4_3_2 * limi_rotation_transpose_4_2_1);
  ap_fixed<16,3> Ao_4_3_1 = (_tmp314 + _tmp315);
  ap_fixed<16,1> Ao_4_3_2 = -(temp1_4_3_3);
  ap_fixed<16,1> _tmp316 = (temp1_4_3_1 * limi_rotation_transpose_4_1_3);
  ap_fixed<16,4> _tmp317 = (temp1_4_3_2 * limi_rotation_transpose_4_2_3);
  ap_fixed<16,4> Ao_4_3_3 = (_tmp316 + _tmp317);
  ap_fixed<16,1> _tmp318 = (ap_fixed<16,1>) ((limi_rotation_4_1_1 * Bi_4_1_1));
  ap_fixed<16,1> _tmp319 = (ap_fixed<16,1>) ((limi_rotation_4_1_2 * Bi_4_2_1));
  ap_fixed<16,1> temp2_4_1_1 = (_tmp318 + _tmp319);
  ap_fixed<16,1> _tmp320 = (ap_fixed<16,1>) ((limi_rotation_4_1_1 * Bi_4_1_2));
  ap_fixed<16,1> _tmp321 = (ap_fixed<16,1>) ((limi_rotation_4_1_2 * Bi_4_2_2));
  ap_fixed<16,1> temp2_4_1_2 = (_tmp320 + _tmp321);
  ap_fixed<16,1> _tmp322 = (ap_fixed<16,1>) ((limi_rotation_4_1_1 * Bi_4_1_3));
  ap_fixed<16,1> _tmp323 = (ap_fixed<16,1>) ((limi_rotation_4_1_2 * Bi_4_2_3));
  ap_fixed<16,1> temp2_4_1_3 = (_tmp322 + _tmp323);
  ap_fixed<16,2> temp2_4_2_1 = -(Bi_4_3_1);
  ap_fixed<16,1> temp2_4_2_2 = -(Bi_4_3_2);
  ap_fixed<16,1> temp2_4_2_3 = -(Bi_4_3_3);
  ap_fixed<16,1> _tmp324 = (ap_fixed<16,1>) ((limi_rotation_4_3_1 * Bi_4_1_1));
  ap_fixed<16,1> _tmp325 = (ap_fixed<16,1>) ((limi_rotation_4_3_2 * Bi_4_2_1));
  ap_fixed<16,1> temp2_4_3_1 = (_tmp324 + _tmp325);
  ap_fixed<16,1> _tmp326 = (ap_fixed<16,1>) ((limi_rotation_4_3_1 * Bi_4_1_2));
  ap_fixed<16,1> _tmp327 = (ap_fixed<16,1>) ((limi_rotation_4_3_2 * Bi_4_2_2));
  ap_fixed<16,1> temp2_4_3_2 = (_tmp326 + _tmp327);
  ap_fixed<16,1> _tmp328 = (ap_fixed<16,1>) ((limi_rotation_4_3_1 * Bi_4_1_3));
  ap_fixed<16,1> _tmp329 = (ap_fixed<16,1>) ((limi_rotation_4_3_2 * Bi_4_2_3));
  ap_fixed<16,1> temp2_4_3_3 = (_tmp328 + _tmp329);
  ap_fixed<16,1> _tmp330 = (temp2_4_1_1 * limi_rotation_transpose_4_1_1);
  ap_fixed<16,1> _tmp331 = (temp2_4_1_2 * limi_rotation_transpose_4_2_1);
  ap_fixed<16,1> Bo_temp_4_1_1 = (_tmp330 + _tmp331);
  ap_fixed<16,1> Bo_temp_4_1_2 = -(temp2_4_1_3);
  ap_fixed<16,1> _tmp332 = (temp2_4_1_1 * limi_rotation_transpose_4_1_3);
  ap_fixed<16,1> _tmp333 = (temp2_4_1_2 * limi_rotation_transpose_4_2_3);
  ap_fixed<16,1> Bo_temp_4_1_3 = (_tmp332 + _tmp333);
  ap_fixed<16,2> _tmp334 = (temp2_4_2_1 * limi_rotation_transpose_4_1_1);
  ap_fixed<16,1> _tmp335 = (temp2_4_2_2 * limi_rotation_transpose_4_2_1);
  ap_fixed<16,2> Bo_temp_4_2_1 = (_tmp334 + _tmp335);
  ap_fixed<16,1> Bo_temp_4_2_2 = -(temp2_4_2_3);
  ap_fixed<16,1> _tmp336 = (temp2_4_2_1 * limi_rotation_transpose_4_1_3);
  ap_fixed<16,1> _tmp337 = (temp2_4_2_2 * limi_rotation_transpose_4_2_3);
  ap_fixed<16,2> Bo_temp_4_2_3 = (_tmp336 + _tmp337);
  ap_fixed<16,1> _tmp338 = (temp2_4_3_1 * limi_rotation_transpose_4_1_1);
  ap_fixed<16,1> _tmp339 = (temp2_4_3_2 * limi_rotation_transpose_4_2_1);
  ap_fixed<16,1> Bo_temp_4_3_1 = (_tmp338 + _tmp339);
  ap_fixed<16,1> Bo_temp_4_3_2 = -(temp2_4_3_3);
  ap_fixed<16,1> _tmp340 = (temp2_4_3_1 * limi_rotation_transpose_4_1_3);
  ap_fixed<16,1> _tmp341 = (temp2_4_3_2 * limi_rotation_transpose_4_2_3);
  ap_fixed<16,1> Bo_temp_4_3_3 = (_tmp340 + _tmp341);
  ap_fixed<16,1> _tmp342 = (ap_fixed<16,1>) ((limi_rotation_4_1_1 * Di_4_1_1));
  ap_fixed<16,1> _tmp343 = (ap_fixed<16,1>) ((limi_rotation_4_1_2 * Di_4_2_1));
  ap_fixed<16,1> temp3_4_1_1 = (_tmp342 + _tmp343);
  ap_fixed<16,1> _tmp344 = (ap_fixed<16,1>) ((limi_rotation_4_1_1 * Di_4_1_2));
  ap_fixed<16,1> _tmp345 = (ap_fixed<16,1>) ((limi_rotation_4_1_2 * Di_4_2_2));
  ap_fixed<16,1> temp3_4_1_2 = (_tmp344 + _tmp345);
  ap_fixed<16,1> _tmp346 = (ap_fixed<16,1>) ((limi_rotation_4_1_1 * Di_4_1_3));
  ap_fixed<16,1> _tmp347 = (ap_fixed<16,1>) ((limi_rotation_4_1_2 * Di_4_2_3));
  ap_fixed<16,1> temp3_4_1_3 = (_tmp346 + _tmp347);
  ap_fixed<16,1> temp3_4_2_1 = -(Di_4_3_1);
  ap_fixed<16,1> temp3_4_2_2 = -(Di_4_3_2);
  ap_fixed<16,1> temp3_4_2_3 = -(Di_4_3_3);
  ap_fixed<16,1> _tmp348 = (ap_fixed<16,1>) ((limi_rotation_4_3_1 * Di_4_1_1));
  ap_fixed<16,1> _tmp349 = (ap_fixed<16,1>) ((limi_rotation_4_3_2 * Di_4_2_1));
  ap_fixed<16,1> temp3_4_3_1 = (_tmp348 + _tmp349);
  ap_fixed<16,1> _tmp350 = (ap_fixed<16,1>) ((limi_rotation_4_3_1 * Di_4_1_2));
  ap_fixed<16,1> _tmp351 = (ap_fixed<16,1>) ((limi_rotation_4_3_2 * Di_4_2_2));
  ap_fixed<16,1> temp3_4_3_2 = (_tmp350 + _tmp351);
  ap_fixed<16,1> _tmp352 = (ap_fixed<16,1>) ((limi_rotation_4_3_1 * Di_4_1_3));
  ap_fixed<16,1> _tmp353 = (ap_fixed<16,1>) ((limi_rotation_4_3_2 * Di_4_2_3));
  ap_fixed<16,1> temp3_4_3_3 = (_tmp352 + _tmp353);
  ap_fixed<16,1> _tmp354 = (temp3_4_1_1 * limi_rotation_transpose_4_1_1);
  ap_fixed<16,1> _tmp355 = (temp3_4_1_2 * limi_rotation_transpose_4_2_1);
  ap_fixed<16,1> Do_temp_4_1_1 = (_tmp354 + _tmp355);
  ap_fixed<16,1> Do_temp_4_1_2 = -(temp3_4_1_3);
  ap_fixed<16,1> _tmp356 = (temp3_4_1_1 * limi_rotation_transpose_4_1_3);
  ap_fixed<16,1> _tmp357 = (temp3_4_1_2 * limi_rotation_transpose_4_2_3);
  ap_fixed<16,1> Do_temp_4_1_3 = (_tmp356 + _tmp357);
  ap_fixed<16,1> _tmp358 = (temp3_4_2_1 * limi_rotation_transpose_4_1_1);
  ap_fixed<16,1> _tmp359 = (temp3_4_2_2 * limi_rotation_transpose_4_2_1);
  ap_fixed<16,1> Do_temp_4_2_1 = (_tmp358 + _tmp359);
  ap_fixed<16,1> Do_temp_4_2_2 = -(temp3_4_2_3);
  ap_fixed<16,1> _tmp360 = (temp3_4_2_1 * limi_rotation_transpose_4_1_3);
  ap_fixed<16,1> _tmp361 = (temp3_4_2_2 * limi_rotation_transpose_4_2_3);
  ap_fixed<16,1> Do_temp_4_2_3 = (_tmp360 + _tmp361);
  ap_fixed<16,1> _tmp362 = (temp3_4_3_1 * limi_rotation_transpose_4_1_1);
  ap_fixed<16,1> _tmp363 = (temp3_4_3_2 * limi_rotation_transpose_4_2_1);
  ap_fixed<16,1> Do_temp_4_3_1 = (_tmp362 + _tmp363);
  ap_fixed<16,1> Do_temp_4_3_2 = -(temp3_4_3_3);
  ap_fixed<16,1> _tmp364 = (temp3_4_3_1 * limi_rotation_transpose_4_1_3);
  ap_fixed<16,1> _tmp365 = (temp3_4_3_2 * limi_rotation_transpose_4_2_3);
  ap_fixed<16,1> Do_temp_4_3_3 = (_tmp364 + _tmp365);
  ap_fixed<16,1> _tmp366 = (ap_fixed<16,1>) ((_const151 * Bo_temp_4_1_3));
  ap_fixed<16,1> _tmp367 = (ap_fixed<16,1>) ((_const152 * Bo_temp_4_1_2));
  ap_fixed<16,1> _tmp368 = (_tmp366 - _tmp367);
  ap_fixed<16,1> Do_temp2_4_1_1 = (_tmp368 + Do_temp_4_1_1);
  ap_fixed<16,1> _tmp369 = (ap_fixed<16,1>) ((_const153 * Bo_temp_4_1_1));
  ap_fixed<16,1> _tmp370 = (ap_fixed<16,1>) ((_const154 * Bo_temp_4_1_3));
  ap_fixed<16,1> _tmp371 = (_tmp369 - _tmp370);
  ap_fixed<16,1> Do_temp2_4_2_1 = (_tmp371 + Do_temp_4_2_1);
  ap_fixed<16,1> _tmp372 = (ap_fixed<16,1>) ((_const155 * Bo_temp_4_1_2));
  ap_fixed<16,1> _tmp373 = (ap_fixed<16,1>) ((_const156 * Bo_temp_4_1_1));
  ap_fixed<16,1> _tmp374 = (_tmp372 - _tmp373);
  ap_fixed<16,1> Do_temp2_4_3_1 = (_tmp374 + Do_temp_4_3_1);
  ap_fixed<16,1> _tmp375 = (ap_fixed<16,1>) ((_const157 * Bo_temp_4_2_3));
  ap_fixed<16,1> _tmp376 = (ap_fixed<16,1>) ((_const158 * Bo_temp_4_2_2));
  ap_fixed<16,1> _tmp377 = (_tmp375 - _tmp376);
  ap_fixed<16,1> Do_temp2_4_1_2 = (_tmp377 + Do_temp_4_1_2);
  ap_fixed<16,1> _tmp378 = (ap_fixed<16,1>) ((_const159 * Bo_temp_4_2_1));
  ap_fixed<16,1> _tmp379 = (ap_fixed<16,1>) ((_const160 * Bo_temp_4_2_3));
  ap_fixed<16,1> _tmp380 = (_tmp378 - _tmp379);
  ap_fixed<16,1> Do_temp2_4_2_2 = (_tmp380 + Do_temp_4_2_2);
  ap_fixed<16,1> _tmp381 = (ap_fixed<16,1>) ((_const161 * Bo_temp_4_2_2));
  ap_fixed<16,1> _tmp382 = (ap_fixed<16,1>) ((_const162 * Bo_temp_4_2_1));
  ap_fixed<16,1> _tmp383 = (_tmp381 - _tmp382);
  ap_fixed<16,1> Do_temp2_4_3_2 = (_tmp383 + Do_temp_4_3_2);
  ap_fixed<16,1> _tmp384 = (ap_fixed<16,1>) ((_const163 * Bo_temp_4_3_3));
  ap_fixed<16,1> _tmp385 = (ap_fixed<16,1>) ((_const164 * Bo_temp_4_3_2));
  ap_fixed<16,1> _tmp386 = (_tmp384 - _tmp385);
  ap_fixed<16,1> Do_temp2_4_1_3 = (_tmp386 + Do_temp_4_1_3);
  ap_fixed<16,1> _tmp387 = (ap_fixed<16,1>) ((_const165 * Bo_temp_4_3_1));
  ap_fixed<16,1> _tmp388 = (ap_fixed<16,1>) ((_const166 * Bo_temp_4_3_3));
  ap_fixed<16,1> _tmp389 = (_tmp387 - _tmp388);
  ap_fixed<16,1> Do_temp2_4_2_3 = (_tmp389 + Do_temp_4_2_3);
  ap_fixed<16,1> _tmp390 = (ap_fixed<16,1>) ((_const167 * Bo_temp_4_3_2));
  ap_fixed<16,1> _tmp391 = (ap_fixed<16,1>) ((_const168 * Bo_temp_4_3_1));
  ap_fixed<16,1> _tmp392 = (_tmp390 - _tmp391);
  ap_fixed<16,1> Do_temp2_4_3_3 = (_tmp392 + Do_temp_4_3_3);
  ap_fixed<16,1> _tmp393 = (ap_fixed<16,1>) ((_const169 * Ao_4_1_3));
  ap_fixed<16,1> _tmp394 = (ap_fixed<16,1>) ((_const170 * Ao_4_1_2));
  ap_fixed<16,1> _tmp395 = (_tmp393 - _tmp394);
  ap_fixed<16,1> Co_4_1_1 = (_tmp395 + Bo_temp_4_1_1);
  ap_fixed<16,1> _tmp396 = (ap_fixed<16,1>) ((_const171 * Ao_4_1_1));
  ap_fixed<16,1> _tmp397 = (ap_fixed<16,1>) ((_const172 * Ao_4_1_3));
  ap_fixed<16,1> _tmp398 = (_tmp396 - _tmp397);
  ap_fixed<16,1> Co_4_1_2 = (_tmp398 + Bo_temp_4_1_2);
  ap_fixed<16,1> _tmp399 = (ap_fixed<16,1>) ((_const173 * Ao_4_1_2));
  ap_fixed<16,1> _tmp400 = (ap_fixed<16,1>) ((_const174 * Ao_4_1_1));
  ap_fixed<16,1> _tmp401 = (_tmp399 - _tmp400);
  ap_fixed<16,1> Co_4_1_3 = (_tmp401 + Bo_temp_4_1_3);
  ap_fixed<16,1> _tmp402 = (ap_fixed<16,1>) ((_const175 * Ao_4_2_3));
  ap_fixed<16,1> _tmp403 = (ap_fixed<16,1>) ((_const176 * Ao_4_2_2));
  ap_fixed<16,1> _tmp404 = (_tmp402 - _tmp403);
  ap_fixed<16,2> Co_4_2_1 = (_tmp404 + Bo_temp_4_2_1);
  ap_fixed<16,1> _tmp405 = (ap_fixed<16,1>) ((_const177 * Ao_4_2_1));
  ap_fixed<16,1> _tmp406 = (ap_fixed<16,1>) ((_const178 * Ao_4_2_3));
  ap_fixed<16,1> _tmp407 = (_tmp405 - _tmp406);
  ap_fixed<16,1> Co_4_2_2 = (_tmp407 + Bo_temp_4_2_2);
  ap_fixed<16,1> _tmp408 = (ap_fixed<16,1>) ((_const179 * Ao_4_2_2));
  ap_fixed<16,1> _tmp409 = (ap_fixed<16,1>) ((_const180 * Ao_4_2_1));
  ap_fixed<16,1> _tmp410 = (_tmp408 - _tmp409);
  ap_fixed<16,1> Co_4_2_3 = (_tmp410 + Bo_temp_4_2_3);
  ap_fixed<16,1> _tmp411 = (ap_fixed<16,1>) ((_const181 * Ao_4_3_3));
  ap_fixed<16,1> _tmp412 = (ap_fixed<16,1>) ((_const182 * Ao_4_3_2));
  ap_fixed<16,1> _tmp413 = (_tmp411 - _tmp412);
  ap_fixed<16,1> Co_4_3_1 = (_tmp413 + Bo_temp_4_3_1);
  ap_fixed<16,1> _tmp414 = (ap_fixed<16,1>) ((_const183 * Ao_4_3_1));
  ap_fixed<16,1> _tmp415 = (ap_fixed<16,1>) ((_const184 * Ao_4_3_3));
  ap_fixed<16,1> _tmp416 = (_tmp414 - _tmp415);
  ap_fixed<16,2> Co_4_3_2 = (_tmp416 + Bo_temp_4_3_2);
  ap_fixed<16,1> _tmp417 = (ap_fixed<16,1>) ((_const185 * Ao_4_3_2));
  ap_fixed<16,1> _tmp418 = (ap_fixed<16,1>) ((_const186 * Ao_4_3_1));
  ap_fixed<16,1> _tmp419 = (_tmp417 - _tmp418);
  ap_fixed<16,1> Co_4_3_3 = (_tmp419 + Bo_temp_4_3_3);
  ap_fixed<16,1> Bo_4_1_1 = Co_4_1_1;
  ap_fixed<16,2> Bo_4_1_2 = Co_4_2_1;
  ap_fixed<16,1> Bo_4_1_3 = Co_4_3_1;
  ap_fixed<16,1> Bo_4_2_1 = Co_4_1_2;
  ap_fixed<16,1> Bo_4_2_2 = Co_4_2_2;
  ap_fixed<16,2> Bo_4_2_3 = Co_4_3_2;
  ap_fixed<16,1> Bo_4_3_1 = Co_4_1_3;
  ap_fixed<16,1> Bo_4_3_2 = Co_4_2_3;
  ap_fixed<16,1> Bo_4_3_3 = Co_4_3_3;
  ap_fixed<16,1> _tmp420 = (ap_fixed<16,1>) ((_const187 * Bo_4_1_3));
  ap_fixed<16,1> _tmp421 = (ap_fixed<16,1>) ((_const188 * Bo_4_1_2));
  ap_fixed<16,1> _tmp422 = (_tmp420 + _tmp421);
  ap_fixed<16,1> Do_4_1_1 = (_tmp422 + Do_temp2_4_1_1);
  ap_fixed<16,1> _tmp423 = (ap_fixed<16,1>) ((_const189 * Bo_4_1_1));
  ap_fixed<16,1> _tmp424 = (ap_fixed<16,1>) ((_const190 * Bo_4_1_3));
  ap_fixed<16,1> _tmp425 = (_tmp423 + _tmp424);
  ap_fixed<16,1> Do_4_1_2 = (_tmp425 + Do_temp2_4_1_2);
  ap_fixed<16,1> _tmp426 = (ap_fixed<16,1>) ((_const191 * Bo_4_1_2));
  ap_fixed<16,1> _tmp427 = (ap_fixed<16,1>) ((_const192 * Bo_4_1_1));
  ap_fixed<16,1> _tmp428 = (_tmp426 + _tmp427);
  ap_fixed<16,1> Do_4_1_3 = (_tmp428 + Do_temp2_4_1_3);
  ap_fixed<16,1> _tmp429 = (ap_fixed<16,1>) ((_const193 * Bo_4_2_3));
  ap_fixed<16,1> _tmp430 = (ap_fixed<16,1>) ((_const194 * Bo_4_2_2));
  ap_fixed<16,1> _tmp431 = (_tmp429 + _tmp430);
  ap_fixed<16,1> Do_4_2_1 = (_tmp431 + Do_temp2_4_2_1);
  ap_fixed<16,1> _tmp432 = (ap_fixed<16,1>) ((_const195 * Bo_4_2_1));
  ap_fixed<16,1> _tmp433 = (ap_fixed<16,1>) ((_const196 * Bo_4_2_3));
  ap_fixed<16,1> _tmp434 = (_tmp432 + _tmp433);
  ap_fixed<16,1> Do_4_2_2 = (_tmp434 + Do_temp2_4_2_2);
  ap_fixed<16,1> _tmp435 = (ap_fixed<16,1>) ((_const197 * Bo_4_2_2));
  ap_fixed<16,1> _tmp436 = (ap_fixed<16,1>) ((_const198 * Bo_4_2_1));
  ap_fixed<16,1> _tmp437 = (_tmp435 + _tmp436);
  ap_fixed<16,1> Do_4_2_3 = (_tmp437 + Do_temp2_4_2_3);
  ap_fixed<16,1> _tmp438 = (ap_fixed<16,1>) ((_const199 * Bo_4_3_3));
  ap_fixed<16,1> _tmp439 = (ap_fixed<16,1>) ((_const200 * Bo_4_3_2));
  ap_fixed<16,1> _tmp440 = (_tmp438 + _tmp439);
  ap_fixed<16,1> Do_4_3_1 = (_tmp440 + Do_temp2_4_3_1);
  ap_fixed<16,1> _tmp441 = (ap_fixed<16,1>) ((_const201 * Bo_4_3_1));
  ap_fixed<16,1> _tmp442 = (ap_fixed<16,1>) ((_const202 * Bo_4_3_3));
  ap_fixed<16,1> _tmp443 = (_tmp441 + _tmp442);
  ap_fixed<16,1> Do_4_3_2 = (_tmp443 + Do_temp2_4_3_2);
  ap_fixed<16,1> _tmp444 = (ap_fixed<16,1>) ((_const203 * Bo_4_3_2));
  ap_fixed<16,1> _tmp445 = (ap_fixed<16,1>) ((_const204 * Bo_4_3_1));
  ap_fixed<16,1> _tmp446 = (_tmp444 + _tmp445);
  ap_fixed<16,1> Do_4_3_3 = (_tmp446 + Do_temp2_4_3_3);
  ap_fixed<16,5> Ia_3_1_1 = (ap_fixed<16,5>) ((Ao_4_1_1 + _const205));
  ap_fixed<16,2> Ia_3_1_2 = (ap_fixed<16,2>) ((Ao_4_1_2 + _const206));
  ap_fixed<16,3> Ia_3_1_3 = (ap_fixed<16,3>) ((Ao_4_1_3 + _const207));
  ap_fixed<16,2> Ia_3_2_1 = (ap_fixed<16,2>) ((Ao_4_2_1 + _const208));
  ap_fixed<16,5> Ia_3_2_2 = (ap_fixed<16,5>) ((Ao_4_2_2 + _const209));
  ap_fixed<16,1> Ia_3_2_3 = (ap_fixed<16,1>) ((Ao_4_2_3 + _const210));
  ap_fixed<16,3> Ia_3_3_1 = (ap_fixed<16,3>) ((Ao_4_3_1 + _const211));
  ap_fixed<16,1> Ia_3_3_2 = (ap_fixed<16,1>) ((Ao_4_3_2 + _const212));
  ap_fixed<16,5> Ia_3_3_3 = (ap_fixed<16,5>) ((Ao_4_3_3 + _const213));
  ap_fixed<16,1> Ia_3_4_1 = (ap_fixed<16,1>) ((Co_4_1_1 + _const214));
  ap_fixed<16,2> Ia_3_4_2 = (ap_fixed<16,2>) ((Co_4_1_2 + _const215));
  ap_fixed<16,1> Ia_3_4_3 = (ap_fixed<16,1>) ((Co_4_1_3 + _const216));
  ap_fixed<16,2> Ia_3_5_1 = (ap_fixed<16,2>) ((Co_4_2_1 - _const217));
  ap_fixed<16,1> Ia_3_5_2 = (ap_fixed<16,1>) ((Co_4_2_2 + _const218));
  ap_fixed<16,1> Ia_3_5_3 = (ap_fixed<16,1>) ((Co_4_2_3 - _const219));
  ap_fixed<16,1> Ia_3_6_1 = (ap_fixed<16,1>) ((Co_4_3_1 - _const220));
  ap_fixed<16,1> Ia_3_6_2 = (ap_fixed<16,1>) ((Co_4_3_2 + _const221));
  ap_fixed<16,1> Ia_3_6_3 = (ap_fixed<16,1>) ((Co_4_3_3 + _const222));
  ap_fixed<16,1> Ia_3_1_4 = (ap_fixed<16,1>) ((Bo_4_1_1 + _const223));
  ap_fixed<16,2> Ia_3_1_5 = (ap_fixed<16,2>) ((Bo_4_1_2 - _const224));
  ap_fixed<16,1> Ia_3_1_6 = (ap_fixed<16,1>) ((Bo_4_1_3 - _const225));
  ap_fixed<16,2> Ia_3_2_4 = (ap_fixed<16,2>) ((Bo_4_2_1 + _const226));
  ap_fixed<16,1> Ia_3_2_5 = (ap_fixed<16,1>) ((Bo_4_2_2 + _const227));
  ap_fixed<16,1> Ia_3_2_6 = (ap_fixed<16,1>) ((Bo_4_2_3 + _const228));
  ap_fixed<16,1> Ia_3_3_4 = (ap_fixed<16,1>) ((Bo_4_3_1 + _const229));
  ap_fixed<16,1> Ia_3_3_5 = (ap_fixed<16,1>) ((Bo_4_3_2 - _const230));
  ap_fixed<16,1> Ia_3_3_6 = (ap_fixed<16,1>) ((Bo_4_3_3 + _const231));
  ap_fixed<16,1> Ia_3_4_4 = (ap_fixed<16,1>) ((Do_4_1_1 + _const232));
  ap_fixed<16,1> Ia_3_4_5 = (ap_fixed<16,1>) ((Do_4_1_2 - _const233));
  ap_fixed<16,1> Ia_3_4_6 = (ap_fixed<16,1>) ((Do_4_1_3 - _const234));
  ap_fixed<16,1> Ia_3_5_4 = (ap_fixed<16,1>) ((Do_4_2_1 - _const235));
  ap_fixed<16,1> Ia_3_5_5 = (ap_fixed<16,1>) ((Do_4_2_2 + _const236));
  ap_fixed<16,1> Ia_3_5_6 = (ap_fixed<16,1>) ((Do_4_2_3 - _const237));
  ap_fixed<16,1> Ia_3_6_4 = (ap_fixed<16,1>) ((Do_4_3_1 - _const238));
  ap_fixed<16,1> Ia_3_6_5 = (ap_fixed<16,1>) ((Do_4_3_2 - _const239));
  ap_fixed<16,1> Ia_3_6_6 = (ap_fixed<16,1>) ((Do_4_3_3 + _const240));
  ap_fixed<16,1> U_3_1 = Ia_3_1_6;
  ap_fixed<16,1> U_3_2 = Ia_3_2_6;
  ap_fixed<16,1> U_3_3 = Ia_3_3_6;
  ap_fixed<16,1> U_3_4 = Ia_3_4_6;
  ap_fixed<16,1> U_3_5 = Ia_3_5_6;
  ap_fixed<16,1> U_3_6 = Ia_3_6_6;
  ap_fixed<16,6> Dinv_3_1 = (ap_fixed<16,6>) ((_const241 / U_3_6));
  ap_fixed<16,5> UDinv_3_1 = (U_3_1 * Dinv_3_1);
  ap_fixed<16,6> UDinv_3_2 = (U_3_2 * Dinv_3_1);
  ap_fixed<16,4> UDinv_3_3 = (U_3_3 * Dinv_3_1);
  ap_fixed<16,4> UDinv_3_4 = (U_3_4 * Dinv_3_1);
  ap_fixed<16,3> UDinv_3_5 = (U_3_5 * Dinv_3_1);
  ap_fixed<16,4> UDinv_3_6 = (U_3_6 * Dinv_3_1);
  ap_fixed<16,4> _tmp447 = (UDinv_3_1 * U_3_1);
  ap_fixed<16,5> Ia_new_3_1_1 = (Ia_3_1_1 - _tmp447);
  ap_fixed<16,5> _tmp448 = (UDinv_3_1 * U_3_2);
  ap_fixed<16,5> Ia_new_3_1_2 = (Ia_3_1_2 - _tmp448);
  ap_fixed<16,3> _tmp449 = (UDinv_3_1 * U_3_3);
  ap_fixed<16,4> Ia_new_3_1_3 = (Ia_3_1_3 - _tmp449);
  ap_fixed<16,4> _tmp450 = (UDinv_3_1 * U_3_4);
  ap_fixed<16,4> Ia_new_3_1_4 = (Ia_3_1_4 - _tmp450);
  ap_fixed<16,2> _tmp451 = (UDinv_3_1 * U_3_5);
  ap_fixed<16,3> Ia_new_3_1_5 = (Ia_3_1_5 - _tmp451);
  ap_fixed<16,3> _tmp452 = (UDinv_3_1 * U_3_6);
  ap_fixed<16,3> Ia_new_3_1_6 = (Ia_3_1_6 - _tmp452);
  ap_fixed<16,5> _tmp453 = (UDinv_3_2 * U_3_1);
  ap_fixed<16,5> Ia_new_3_2_1 = (Ia_3_2_1 - _tmp453);
  ap_fixed<16,5> _tmp454 = (UDinv_3_2 * U_3_2);
  ap_fixed<16,5> Ia_new_3_2_2 = (Ia_3_2_2 - _tmp454);
  ap_fixed<16,3> _tmp455 = (UDinv_3_2 * U_3_3);
  ap_fixed<16,4> Ia_new_3_2_3 = (Ia_3_2_3 - _tmp455);
  ap_fixed<16,4> _tmp456 = (UDinv_3_2 * U_3_4);
  ap_fixed<16,5> Ia_new_3_2_4 = (Ia_3_2_4 - _tmp456);
  ap_fixed<16,3> _tmp457 = (UDinv_3_2 * U_3_5);
  ap_fixed<16,3> Ia_new_3_2_5 = (Ia_3_2_5 - _tmp457);
  ap_fixed<16,4> _tmp458 = (UDinv_3_2 * U_3_6);
  ap_fixed<16,4> Ia_new_3_2_6 = (Ia_3_2_6 - _tmp458);
  ap_fixed<16,3> _tmp459 = (UDinv_3_3 * U_3_1);
  ap_fixed<16,4> Ia_new_3_3_1 = (Ia_3_3_1 - _tmp459);
  ap_fixed<16,3> _tmp460 = (UDinv_3_3 * U_3_2);
  ap_fixed<16,4> Ia_new_3_3_2 = (Ia_3_3_2 - _tmp460);
  ap_fixed<16,2> _tmp461 = (UDinv_3_3 * U_3_3);
  ap_fixed<16,5> Ia_new_3_3_3 = (Ia_3_3_3 - _tmp461);
  ap_fixed<16,2> _tmp462 = (UDinv_3_3 * U_3_4);
  ap_fixed<16,3> Ia_new_3_3_4 = (Ia_3_3_4 - _tmp462);
  ap_fixed<16,1> _tmp463 = (UDinv_3_3 * U_3_5);
  ap_fixed<16,2> Ia_new_3_3_5 = (Ia_3_3_5 - _tmp463);
  ap_fixed<16,2> _tmp464 = (UDinv_3_3 * U_3_6);
  ap_fixed<16,2> Ia_new_3_3_6 = (Ia_3_3_6 - _tmp464);
  ap_fixed<16,4> _tmp465 = (UDinv_3_4 * U_3_1);
  ap_fixed<16,4> Ia_new_3_4_1 = (Ia_3_4_1 - _tmp465);
  ap_fixed<16,4> _tmp466 = (UDinv_3_4 * U_3_2);
  ap_fixed<16,5> Ia_new_3_4_2 = (Ia_3_4_2 - _tmp466);
  ap_fixed<16,2> _tmp467 = (UDinv_3_4 * U_3_3);
  ap_fixed<16,3> Ia_new_3_4_3 = (Ia_3_4_3 - _tmp467);
  ap_fixed<16,3> _tmp468 = (UDinv_3_4 * U_3_4);
  ap_fixed<16,3> Ia_new_3_4_4 = (Ia_3_4_4 - _tmp468);
  ap_fixed<16,2> _tmp469 = (UDinv_3_4 * U_3_5);
  ap_fixed<16,2> Ia_new_3_4_5 = (Ia_3_4_5 - _tmp469);
  ap_fixed<16,3> _tmp470 = (UDinv_3_4 * U_3_6);
  ap_fixed<16,3> Ia_new_3_4_6 = (Ia_3_4_6 - _tmp470);
  ap_fixed<16,2> _tmp471 = (UDinv_3_5 * U_3_1);
  ap_fixed<16,3> Ia_new_3_5_1 = (Ia_3_5_1 - _tmp471);
  ap_fixed<16,3> _tmp472 = (UDinv_3_5 * U_3_2);
  ap_fixed<16,3> Ia_new_3_5_2 = (Ia_3_5_2 - _tmp472);
  ap_fixed<16,1> _tmp473 = (UDinv_3_5 * U_3_3);
  ap_fixed<16,2> Ia_new_3_5_3 = (Ia_3_5_3 - _tmp473);
  ap_fixed<16,2> _tmp474 = (UDinv_3_5 * U_3_4);
  ap_fixed<16,2> Ia_new_3_5_4 = (Ia_3_5_4 - _tmp474);
  ap_fixed<16,1> _tmp475 = (UDinv_3_5 * U_3_5);
  ap_fixed<16,1> Ia_new_3_5_5 = (Ia_3_5_5 - _tmp475);
  ap_fixed<16,1> _tmp476 = (UDinv_3_5 * U_3_6);
  ap_fixed<16,1> Ia_new_3_5_6 = (Ia_3_5_6 - _tmp476);
  ap_fixed<16,3> _tmp477 = (UDinv_3_6 * U_3_1);
  ap_fixed<16,3> Ia_new_3_6_1 = (Ia_3_6_1 - _tmp477);
  ap_fixed<16,4> _tmp478 = (UDinv_3_6 * U_3_2);
  ap_fixed<16,4> Ia_new_3_6_2 = (Ia_3_6_2 - _tmp478);
  ap_fixed<16,2> _tmp479 = (UDinv_3_6 * U_3_3);
  ap_fixed<16,2> Ia_new_3_6_3 = (Ia_3_6_3 - _tmp479);
  ap_fixed<16,3> _tmp480 = (UDinv_3_6 * U_3_4);
  ap_fixed<16,3> Ia_new_3_6_4 = (Ia_3_6_4 - _tmp480);
  ap_fixed<16,1> _tmp481 = (UDinv_3_6 * U_3_5);
  ap_fixed<16,1> Ia_new_3_6_5 = (Ia_3_6_5 - _tmp481);
  ap_fixed<16,2> _tmp482 = (UDinv_3_6 * U_3_6);
  ap_fixed<16,2> Ia_new_3_6_6 = (Ia_3_6_6 - _tmp482);
  ap_fixed<16,5> Ai_3_1_1 = Ia_new_3_1_1;
  ap_fixed<16,5> Ai_3_1_2 = Ia_new_3_1_2;
  ap_fixed<16,4> Ai_3_1_3 = Ia_new_3_1_3;
  ap_fixed<16,5> Ai_3_2_1 = Ia_new_3_2_1;
  ap_fixed<16,5> Ai_3_2_2 = Ia_new_3_2_2;
  ap_fixed<16,4> Ai_3_2_3 = Ia_new_3_2_3;
  ap_fixed<16,4> Ai_3_3_1 = Ia_new_3_3_1;
  ap_fixed<16,4> Ai_3_3_2 = Ia_new_3_3_2;
  ap_fixed<16,5> Ai_3_3_3 = Ia_new_3_3_3;
  ap_fixed<16,4> Bi_3_1_1 = Ia_new_3_1_4;
  ap_fixed<16,3> Bi_3_1_2 = Ia_new_3_1_5;
  ap_fixed<16,3> Bi_3_1_3 = Ia_new_3_1_6;
  ap_fixed<16,5> Bi_3_2_1 = Ia_new_3_2_4;
  ap_fixed<16,3> Bi_3_2_2 = Ia_new_3_2_5;
  ap_fixed<16,4> Bi_3_2_3 = Ia_new_3_2_6;
  ap_fixed<16,3> Bi_3_3_1 = Ia_new_3_3_4;
  ap_fixed<16,2> Bi_3_3_2 = Ia_new_3_3_5;
  ap_fixed<16,2> Bi_3_3_3 = Ia_new_3_3_6;
  ap_fixed<32,4> Ci_3_1_1 = Ia_new_3_4_1;
  ap_fixed<32,5> Ci_3_1_2 = Ia_new_3_4_2;
  ap_fixed<32,3> Ci_3_1_3 = Ia_new_3_4_3;
  ap_fixed<32,3> Ci_3_2_1 = Ia_new_3_5_1;
  ap_fixed<32,3> Ci_3_2_2 = Ia_new_3_5_2;
  ap_fixed<32,2> Ci_3_2_3 = Ia_new_3_5_3;
  ap_fixed<32,3> Ci_3_3_1 = Ia_new_3_6_1;
  ap_fixed<32,4> Ci_3_3_2 = Ia_new_3_6_2;
  ap_fixed<32,2> Ci_3_3_3 = Ia_new_3_6_3;
  ap_fixed<16,3> Di_3_1_1 = Ia_new_3_4_4;
  ap_fixed<16,2> Di_3_1_2 = Ia_new_3_4_5;
  ap_fixed<16,3> Di_3_1_3 = Ia_new_3_4_6;
  ap_fixed<16,2> Di_3_2_1 = Ia_new_3_5_4;
  ap_fixed<16,1> Di_3_2_2 = Ia_new_3_5_5;
  ap_fixed<16,1> Di_3_2_3 = Ia_new_3_5_6;
  ap_fixed<16,3> Di_3_3_1 = Ia_new_3_6_4;
  ap_fixed<16,1> Di_3_3_2 = Ia_new_3_6_5;
  ap_fixed<16,2> Di_3_3_3 = Ia_new_3_6_6;
  ap_fixed<16,5> _tmp483 = (ap_fixed<16,5>) ((limi_rotation_3_1_1 * Ai_3_1_1));
  ap_fixed<16,3> _tmp484 = (ap_fixed<16,3>) ((limi_rotation_3_1_2 * Ai_3_2_1));
  ap_fixed<16,5> temp1_3_1_1 = (_tmp483 + _tmp484);
  ap_fixed<16,5> _tmp485 = (ap_fixed<16,5>) ((limi_rotation_3_1_1 * Ai_3_1_2));
  ap_fixed<16,3> _tmp486 = (ap_fixed<16,3>) ((limi_rotation_3_1_2 * Ai_3_2_2));
  ap_fixed<16,5> temp1_3_1_2 = (_tmp485 + _tmp486);
  ap_fixed<16,4> _tmp487 = (ap_fixed<16,4>) ((limi_rotation_3_1_1 * Ai_3_1_3));
  ap_fixed<16,2> _tmp488 = (ap_fixed<16,2>) ((limi_rotation_3_1_2 * Ai_3_2_3));
  ap_fixed<16,4> temp1_3_1_3 = (_tmp487 + _tmp488);
  ap_fixed<16,4> temp1_3_2_1 = -(Ai_3_3_1);
  ap_fixed<16,4> temp1_3_2_2 = -(Ai_3_3_2);
  ap_fixed<16,5> temp1_3_2_3 = -(Ai_3_3_3);
  ap_fixed<16,3> _tmp489 = (ap_fixed<16,3>) ((limi_rotation_3_3_1 * Ai_3_1_1));
  ap_fixed<16,5> _tmp490 = (ap_fixed<16,5>) ((limi_rotation_3_3_2 * Ai_3_2_1));
  ap_fixed<16,5> temp1_3_3_1 = (_tmp489 + _tmp490);
  ap_fixed<16,3> _tmp491 = (ap_fixed<16,3>) ((limi_rotation_3_3_1 * Ai_3_1_2));
  ap_fixed<16,5> _tmp492 = (ap_fixed<16,5>) ((limi_rotation_3_3_2 * Ai_3_2_2));
  ap_fixed<16,5> temp1_3_3_2 = (_tmp491 + _tmp492);
  ap_fixed<16,2> _tmp493 = (ap_fixed<16,2>) ((limi_rotation_3_3_1 * Ai_3_1_3));
  ap_fixed<16,4> _tmp494 = (ap_fixed<16,4>) ((limi_rotation_3_3_2 * Ai_3_2_3));
  ap_fixed<16,4> temp1_3_3_3 = (_tmp493 + _tmp494);
  ap_fixed<16,1> limi_rotation_transpose_3_1_1 = limi_rotation_3_1_1;
  ap_fixed<16,1> limi_rotation_transpose_3_1_3 = limi_rotation_3_3_1;
  ap_fixed<16,1> limi_rotation_transpose_3_2_1 = limi_rotation_3_1_2;
  ap_fixed<16,1> limi_rotation_transpose_3_2_3 = limi_rotation_3_3_2;
  ap_fixed<16,5> _tmp495 = (temp1_3_1_1 * limi_rotation_transpose_3_1_1);
  ap_fixed<16,4> _tmp496 = (temp1_3_1_2 * limi_rotation_transpose_3_2_1);
  ap_fixed<16,5> Ao_3_1_1 = (_tmp495 + _tmp496);
  ap_fixed<32,4> Ao_3_1_2 = -(temp1_3_1_3);
  ap_fixed<16,3> _tmp497 = (temp1_3_1_1 * limi_rotation_transpose_3_1_3);
  ap_fixed<16,5> _tmp498 = (temp1_3_1_2 * limi_rotation_transpose_3_2_3);
  ap_fixed<16,5> Ao_3_1_3 = (_tmp497 + _tmp498);
  ap_fixed<16,4> _tmp499 = (temp1_3_2_1 * limi_rotation_transpose_3_1_1);
  ap_fixed<16,2> _tmp500 = (temp1_3_2_2 * limi_rotation_transpose_3_2_1);
  ap_fixed<16,4> Ao_3_2_1 = (_tmp499 + _tmp500);
  ap_fixed<32,5> Ao_3_2_2 = -(temp1_3_2_3);
  ap_fixed<16,2> _tmp501 = (temp1_3_2_1 * limi_rotation_transpose_3_1_3);
  ap_fixed<16,4> _tmp502 = (temp1_3_2_2 * limi_rotation_transpose_3_2_3);
  ap_fixed<16,4> Ao_3_2_3 = (_tmp501 + _tmp502);
  ap_fixed<16,5> _tmp503 = (temp1_3_3_1 * limi_rotation_transpose_3_1_1);
  ap_fixed<16,3> _tmp504 = (temp1_3_3_2 * limi_rotation_transpose_3_2_1);
  ap_fixed<16,5> Ao_3_3_1 = (_tmp503 + _tmp504);
  ap_fixed<32,4> Ao_3_3_2 = -(temp1_3_3_3);
  ap_fixed<16,3> _tmp505 = (temp1_3_3_1 * limi_rotation_transpose_3_1_3);
  ap_fixed<16,5> _tmp506 = (temp1_3_3_2 * limi_rotation_transpose_3_2_3);
  ap_fixed<16,5> Ao_3_3_3 = (_tmp505 + _tmp506);
  ap_fixed<16,4> _tmp507 = (ap_fixed<16,4>) ((limi_rotation_3_1_1 * Bi_3_1_1));
  ap_fixed<16,3> _tmp508 = (ap_fixed<16,3>) ((limi_rotation_3_1_2 * Bi_3_2_1));
  ap_fixed<16,4> temp2_3_1_1 = (_tmp507 + _tmp508);
  ap_fixed<16,3> _tmp509 = (ap_fixed<16,3>) ((limi_rotation_3_1_1 * Bi_3_1_2));
  ap_fixed<16,1> _tmp510 = (ap_fixed<16,1>) ((limi_rotation_3_1_2 * Bi_3_2_2));
  ap_fixed<16,3> temp2_3_1_2 = (_tmp509 + _tmp510);
  ap_fixed<16,3> _tmp511 = (ap_fixed<16,3>) ((limi_rotation_3_1_1 * Bi_3_1_3));
  ap_fixed<16,2> _tmp512 = (ap_fixed<16,2>) ((limi_rotation_3_1_2 * Bi_3_2_3));
  ap_fixed<16,3> temp2_3_1_3 = (_tmp511 + _tmp512);
  ap_fixed<16,3> temp2_3_2_1 = -(Bi_3_3_1);
  ap_fixed<16,2> temp2_3_2_2 = -(Bi_3_3_2);
  ap_fixed<16,2> temp2_3_2_3 = -(Bi_3_3_3);
  ap_fixed<16,2> _tmp513 = (ap_fixed<16,2>) ((limi_rotation_3_3_1 * Bi_3_1_1));
  ap_fixed<16,5> _tmp514 = (ap_fixed<16,5>) ((limi_rotation_3_3_2 * Bi_3_2_1));
  ap_fixed<16,5> temp2_3_3_1 = (_tmp513 + _tmp514);
  ap_fixed<16,1> _tmp515 = (ap_fixed<16,1>) ((limi_rotation_3_3_1 * Bi_3_1_2));
  ap_fixed<16,3> _tmp516 = (ap_fixed<16,3>) ((limi_rotation_3_3_2 * Bi_3_2_2));
  ap_fixed<16,3> temp2_3_3_2 = (_tmp515 + _tmp516);
  ap_fixed<16,1> _tmp517 = (ap_fixed<16,1>) ((limi_rotation_3_3_1 * Bi_3_1_3));
  ap_fixed<16,4> _tmp518 = (ap_fixed<16,4>) ((limi_rotation_3_3_2 * Bi_3_2_3));
  ap_fixed<16,4> temp2_3_3_3 = (_tmp517 + _tmp518);
  ap_fixed<16,4> _tmp519 = (temp2_3_1_1 * limi_rotation_transpose_3_1_1);
  ap_fixed<16,2> _tmp520 = (temp2_3_1_2 * limi_rotation_transpose_3_2_1);
  ap_fixed<16,4> Bo_temp_3_1_1 = (_tmp519 + _tmp520);
  ap_fixed<16,3> Bo_temp_3_1_2 = -(temp2_3_1_3);
  ap_fixed<16,2> _tmp521 = (temp2_3_1_1 * limi_rotation_transpose_3_1_3);
  ap_fixed<16,3> _tmp522 = (temp2_3_1_2 * limi_rotation_transpose_3_2_3);
  ap_fixed<16,4> Bo_temp_3_1_3 = (_tmp521 + _tmp522);
  ap_fixed<16,3> _tmp523 = (temp2_3_2_1 * limi_rotation_transpose_3_1_1);
  ap_fixed<16,1> _tmp524 = (temp2_3_2_2 * limi_rotation_transpose_3_2_1);
  ap_fixed<16,3> Bo_temp_3_2_1 = (_tmp523 + _tmp524);
  ap_fixed<16,2> Bo_temp_3_2_2 = -(temp2_3_2_3);
  ap_fixed<16,1> _tmp525 = (temp2_3_2_1 * limi_rotation_transpose_3_1_3);
  ap_fixed<16,2> _tmp526 = (temp2_3_2_2 * limi_rotation_transpose_3_2_3);
  ap_fixed<16,2> Bo_temp_3_2_3 = (_tmp525 + _tmp526);
  ap_fixed<16,5> _tmp527 = (temp2_3_3_1 * limi_rotation_transpose_3_1_1);
  ap_fixed<16,2> _tmp528 = (temp2_3_3_2 * limi_rotation_transpose_3_2_1);
  ap_fixed<16,5> Bo_temp_3_3_1 = (_tmp527 + _tmp528);
  ap_fixed<16,4> Bo_temp_3_3_2 = -(temp2_3_3_3);
  ap_fixed<16,3> _tmp529 = (temp2_3_3_1 * limi_rotation_transpose_3_1_3);
  ap_fixed<16,3> _tmp530 = (temp2_3_3_2 * limi_rotation_transpose_3_2_3);
  ap_fixed<16,4> Bo_temp_3_3_3 = (_tmp529 + _tmp530);
  ap_fixed<16,3> _tmp531 = (ap_fixed<16,3>) ((limi_rotation_3_1_1 * Di_3_1_1));
  ap_fixed<16,1> _tmp532 = (ap_fixed<16,1>) ((limi_rotation_3_1_2 * Di_3_2_1));
  ap_fixed<16,3> temp3_3_1_1 = (_tmp531 + _tmp532);
  ap_fixed<16,2> _tmp533 = (ap_fixed<16,2>) ((limi_rotation_3_1_1 * Di_3_1_2));
  ap_fixed<16,1> _tmp534 = (ap_fixed<16,1>) ((limi_rotation_3_1_2 * Di_3_2_2));
  ap_fixed<16,2> temp3_3_1_2 = (_tmp533 + _tmp534);
  ap_fixed<16,3> _tmp535 = (ap_fixed<16,3>) ((limi_rotation_3_1_1 * Di_3_1_3));
  ap_fixed<16,1> _tmp536 = (ap_fixed<16,1>) ((limi_rotation_3_1_2 * Di_3_2_3));
  ap_fixed<16,3> temp3_3_1_3 = (_tmp535 + _tmp536);
  ap_fixed<16,3> temp3_3_2_1 = -(Di_3_3_1);
  ap_fixed<16,1> temp3_3_2_2 = -(Di_3_3_2);
  ap_fixed<16,2> temp3_3_2_3 = -(Di_3_3_3);
  ap_fixed<16,1> _tmp537 = (ap_fixed<16,1>) ((limi_rotation_3_3_1 * Di_3_1_1));
  ap_fixed<16,2> _tmp538 = (ap_fixed<16,2>) ((limi_rotation_3_3_2 * Di_3_2_1));
  ap_fixed<16,3> temp3_3_3_1 = (_tmp537 + _tmp538);
  ap_fixed<16,1> _tmp539 = (ap_fixed<16,1>) ((limi_rotation_3_3_1 * Di_3_1_2));
  ap_fixed<16,1> _tmp540 = (ap_fixed<16,1>) ((limi_rotation_3_3_2 * Di_3_2_2));
  ap_fixed<16,2> temp3_3_3_2 = (_tmp539 + _tmp540);
  ap_fixed<16,1> _tmp541 = (ap_fixed<16,1>) ((limi_rotation_3_3_1 * Di_3_1_3));
  ap_fixed<16,1> _tmp542 = (ap_fixed<16,1>) ((limi_rotation_3_3_2 * Di_3_2_3));
  ap_fixed<16,2> temp3_3_3_3 = (_tmp541 + _tmp542);
  ap_fixed<16,3> _tmp543 = (temp3_3_1_1 * limi_rotation_transpose_3_1_1);
  ap_fixed<16,1> _tmp544 = (temp3_3_1_2 * limi_rotation_transpose_3_2_1);
  ap_fixed<16,3> Do_temp_3_1_1 = (_tmp543 + _tmp544);
  ap_fixed<16,3> Do_temp_3_1_2 = -(temp3_3_1_3);
  ap_fixed<16,2> Do_temp_3_1_3 = (temp3_3_1_2 * limi_rotation_transpose_3_2_3);
  ap_fixed<16,3> _tmp545 = (temp3_3_2_1 * limi_rotation_transpose_3_1_1);
  ap_fixed<16,1> _tmp546 = (temp3_3_2_2 * limi_rotation_transpose_3_2_1);
  ap_fixed<16,3> Do_temp_3_2_1 = (_tmp545 + _tmp546);
  ap_fixed<16,2> Do_temp_3_2_2 = -(temp3_3_2_3);
  ap_fixed<16,1> Do_temp_3_2_3 = (temp3_3_2_2 * limi_rotation_transpose_3_2_3);
  ap_fixed<16,2> _tmp547 = (temp3_3_3_1 * limi_rotation_transpose_3_1_1);
  ap_fixed<16,1> _tmp548 = (temp3_3_3_2 * limi_rotation_transpose_3_2_1);
  ap_fixed<16,3> Do_temp_3_3_1 = (_tmp547 + _tmp548);
  ap_fixed<16,2> Do_temp_3_3_2 = -(temp3_3_3_3);
  ap_fixed<16,2> Do_temp_3_3_3 = (temp3_3_3_2 * limi_rotation_transpose_3_2_3);
  ap_fixed<16,2> _tmp549 = (ap_fixed<16,2>) ((_const242 * Bo_temp_3_1_3));
  ap_fixed<16,4> Do_temp2_3_1_1 = (_tmp549 + Do_temp_3_1_1);
  ap_fixed<16,3> Do_temp2_3_2_1 = Do_temp_3_2_1;
  ap_fixed<16,2> _tmp550 = (ap_fixed<16,2>) ((_const243 * Bo_temp_3_1_1));
  ap_fixed<16,3> Do_temp2_3_3_1 = (_tmp550 + Do_temp_3_3_1);
  ap_fixed<16,1> _tmp551 = (ap_fixed<16,1>) ((_const244 * Bo_temp_3_2_3));
  ap_fixed<16,3> Do_temp2_3_1_2 = (_tmp551 + Do_temp_3_1_2);
  ap_fixed<16,2> Do_temp2_3_2_2 = Do_temp_3_2_2;
  ap_fixed<16,1> _tmp552 = (ap_fixed<16,1>) ((_const245 * Bo_temp_3_2_1));
  ap_fixed<16,2> Do_temp2_3_3_2 = (_tmp552 + Do_temp_3_3_2);
  ap_fixed<16,2> _tmp553 = (ap_fixed<16,2>) ((_const246 * Bo_temp_3_3_3));
  ap_fixed<16,3> Do_temp2_3_1_3 = (_tmp553 + Do_temp_3_1_3);
  ap_fixed<16,1> Do_temp2_3_2_3 = Do_temp_3_2_3;
  ap_fixed<16,3> _tmp554 = (ap_fixed<16,3>) ((_const247 * Bo_temp_3_3_1));
  ap_fixed<16,4> Do_temp2_3_3_3 = (_tmp554 + Do_temp_3_3_3);
  ap_fixed<16,4> _tmp555 = (ap_fixed<16,4>) ((_const248 * Ao_3_1_3));
  ap_fixed<16,5> Co_3_1_1 = (_tmp555 + Bo_temp_3_1_1);
  ap_fixed<16,3> Co_3_1_2 = Bo_temp_3_1_2;
  ap_fixed<16,4> _tmp556 = (ap_fixed<16,4>) ((_const249 * Ao_3_1_1));
  ap_fixed<16,4> Co_3_1_3 = (_tmp556 + Bo_temp_3_1_3);
  ap_fixed<16,2> _tmp557 = (ap_fixed<16,2>) ((_const250 * Ao_3_2_3));
  ap_fixed<16,4> Co_3_2_1 = (_tmp557 + Bo_temp_3_2_1);
  ap_fixed<16,2> Co_3_2_2 = Bo_temp_3_2_2;
  ap_fixed<16,2> _tmp558 = (ap_fixed<16,2>) ((_const251 * Ao_3_2_1));
  ap_fixed<16,3> Co_3_2_3 = (_tmp558 + Bo_temp_3_2_3);
  ap_fixed<16,4> _tmp559 = (ap_fixed<16,4>) ((_const252 * Ao_3_3_3));
  ap_fixed<16,5> Co_3_3_1 = (_tmp559 + Bo_temp_3_3_1);
  ap_fixed<16,4> Co_3_3_2 = Bo_temp_3_3_2;
  ap_fixed<16,4> _tmp560 = (ap_fixed<16,4>) ((_const253 * Ao_3_3_1));
  ap_fixed<16,5> Co_3_3_3 = (_tmp560 + Bo_temp_3_3_3);
  ap_fixed<16,5> Bo_3_1_1 = Co_3_1_1;
  ap_fixed<32,4> Bo_3_1_2 = Co_3_2_1;
  ap_fixed<16,5> Bo_3_1_3 = Co_3_3_1;
  ap_fixed<16,3> Bo_3_2_1 = Co_3_1_2;
  ap_fixed<32,2> Bo_3_2_2 = Co_3_2_2;
  ap_fixed<16,4> Bo_3_2_3 = Co_3_3_2;
  ap_fixed<16,4> Bo_3_3_1 = Co_3_1_3;
  ap_fixed<32,3> Bo_3_3_2 = Co_3_2_3;
  ap_fixed<16,5> Bo_3_3_3 = Co_3_3_3;
  ap_fixed<16,4> _tmp561 = (ap_fixed<16,4>) ((_const254 * Bo_3_1_3));
  ap_fixed<32,4> Do_3_1_1 = (_tmp561 + Do_temp2_3_1_1);
  ap_fixed<32,3> Do_3_1_2 = Do_temp2_3_1_2;
  ap_fixed<16,3> _tmp562 = (ap_fixed<16,3>) ((_const255 * Bo_3_1_1));
  ap_fixed<32,4> Do_3_1_3 = (_tmp562 + Do_temp2_3_1_3);
  ap_fixed<16,2> _tmp563 = (ap_fixed<16,2>) ((_const256 * Bo_3_2_3));
  ap_fixed<32,3> Do_3_2_1 = (_tmp563 + Do_temp2_3_2_1);
  ap_fixed<32,2> Do_3_2_2 = Do_temp2_3_2_2;
  ap_fixed<16,2> _tmp564 = (ap_fixed<16,2>) ((_const257 * Bo_3_2_1));
  ap_fixed<32,2> Do_3_2_3 = (_tmp564 + Do_temp2_3_2_3);
  ap_fixed<16,3> _tmp565 = (ap_fixed<16,3>) ((_const258 * Bo_3_3_3));
  ap_fixed<32,4> Do_3_3_1 = (_tmp565 + Do_temp2_3_3_1);
  ap_fixed<32,2> Do_3_3_2 = Do_temp2_3_3_2;
  ap_fixed<16,3> _tmp566 = (ap_fixed<16,3>) ((_const259 * Bo_3_3_1));
  ap_fixed<32,4> Do_3_3_3 = (_tmp566 + Do_temp2_3_3_3);
  ap_fixed<16,4> Ia_2_1_1 = (ap_fixed<16,4>) ((Ao_5_1_1 + _const260));
  ap_fixed<16,1> Ia_2_1_2 = (ap_fixed<16,1>) ((Ao_5_1_2 + _const261));
  ap_fixed<16,1> Ia_2_1_3 = (ap_fixed<16,1>) ((Ao_5_1_3 + _const262));
  ap_fixed<16,1> Ia_2_2_1 = (ap_fixed<16,1>) ((Ao_5_2_1 + _const263));
  ap_fixed<16,3> Ia_2_2_2 = (ap_fixed<16,3>) ((Ao_5_2_2 + _const264));
  ap_fixed<16,1> Ia_2_2_3 = (ap_fixed<16,1>) ((Ao_5_2_3 + _const265));
  ap_fixed<16,1> Ia_2_3_1 = (ap_fixed<16,1>) ((Ao_5_3_1 + _const266));
  ap_fixed<16,1> Ia_2_3_2 = (ap_fixed<16,1>) ((Ao_5_3_2 + _const267));
  ap_fixed<16,3> Ia_2_3_3 = (ap_fixed<16,3>) ((Ao_5_3_3 + _const268));
  ap_fixed<16,1> Ia_2_4_1 = (ap_fixed<16,1>) ((Co_5_1_1 + _const269));
  ap_fixed<16,1> Ia_2_4_2 = (ap_fixed<16,1>) ((Co_5_1_2 - _const270));
  ap_fixed<16,2> Ia_2_4_3 = (ap_fixed<16,2>) ((Co_5_1_3 - _const271));
  ap_fixed<16,1> Ia_2_5_1 = (ap_fixed<16,1>) ((Co_5_2_1 + _const272));
  ap_fixed<16,1> Ia_2_5_2 = (ap_fixed<16,1>) ((Co_5_2_2 + _const273));
  ap_fixed<16,1> Ia_2_5_3 = (ap_fixed<16,1>) ((Co_5_2_3 + _const274));
  ap_fixed<16,2> Ia_2_6_1 = (ap_fixed<16,2>) ((Co_5_3_1 + _const275));
  ap_fixed<16,1> Ia_2_6_2 = (ap_fixed<16,1>) ((Co_5_3_2 - _const276));
  ap_fixed<16,1> Ia_2_6_3 = (ap_fixed<16,1>) ((Co_5_3_3 + _const277));
  ap_fixed<16,1> Ia_2_1_4 = (ap_fixed<16,1>) ((Bo_5_1_1 + _const278));
  ap_fixed<16,1> Ia_2_1_5 = (ap_fixed<16,1>) ((Bo_5_1_2 + _const279));
  ap_fixed<16,2> Ia_2_1_6 = (ap_fixed<16,2>) ((Bo_5_1_3 + _const280));
  ap_fixed<16,1> Ia_2_2_4 = (ap_fixed<16,1>) ((Bo_5_2_1 - _const281));
  ap_fixed<16,1> Ia_2_2_5 = (ap_fixed<16,1>) ((Bo_5_2_2 + _const282));
  ap_fixed<16,1> Ia_2_2_6 = (ap_fixed<16,1>) ((Bo_5_2_3 - _const283));
  ap_fixed<16,2> Ia_2_3_4 = (ap_fixed<16,2>) ((Bo_5_3_1 - _const284));
  ap_fixed<16,1> Ia_2_3_5 = (ap_fixed<16,1>) ((Bo_5_3_2 + _const285));
  ap_fixed<16,1> Ia_2_3_6 = (ap_fixed<16,1>) ((Bo_5_3_3 + _const286));
  ap_fixed<16,1> Ia_2_4_4 = (ap_fixed<16,1>) ((Do_5_1_1 + _const287));
  ap_fixed<16,1> Ia_2_4_5 = (ap_fixed<16,1>) ((Do_5_1_2 - _const288));
  ap_fixed<16,1> Ia_2_4_6 = (ap_fixed<16,1>) ((Do_5_1_3 + _const289));
  ap_fixed<16,1> Ia_2_5_4 = (ap_fixed<16,1>) ((Do_5_2_1 - _const290));
  ap_fixed<16,1> Ia_2_5_5 = (ap_fixed<16,1>) ((Do_5_2_2 + _const291));
  ap_fixed<16,1> Ia_2_5_6 = (ap_fixed<16,1>) ((Do_5_2_3 + _const292));
  ap_fixed<16,1> Ia_2_6_4 = (ap_fixed<16,1>) ((Do_5_3_1 + _const293));
  ap_fixed<16,1> Ia_2_6_5 = (ap_fixed<16,1>) ((Do_5_3_2 + _const294));
  ap_fixed<16,1> Ia_2_6_6 = (ap_fixed<16,1>) ((Do_5_3_3 + _const295));
  ap_fixed<16,2> U_2_1 = Ia_2_1_6;
  ap_fixed<16,1> U_2_2 = Ia_2_2_6;
  ap_fixed<16,1> U_2_3 = Ia_2_3_6;
  ap_fixed<16,1> U_2_4 = Ia_2_4_6;
  ap_fixed<16,1> U_2_5 = Ia_2_6_5;
  ap_fixed<16,1> U_2_6 = Ia_2_6_6;
  ap_fixed<16,3> Dinv_2_1 = (ap_fixed<16,3>) ((_const296 / U_2_6));
  ap_fixed<16,3> UDinv_2_1 = (U_2_1 * Dinv_2_1);
  ap_fixed<16,1> UDinv_2_2 = (U_2_2 * Dinv_2_1);
  ap_fixed<16,1> UDinv_2_3 = (U_2_3 * Dinv_2_1);
  ap_fixed<16,1> UDinv_2_4 = (U_2_4 * Dinv_2_1);
  ap_fixed<16,1> UDinv_2_5 = (U_2_5 * Dinv_2_1);
  ap_fixed<16,2> UDinv_2_6 = (U_2_6 * Dinv_2_1);
  ap_fixed<16,3> _tmp567 = (UDinv_2_1 * U_2_1);
  ap_fixed<16,3> Ia_new_2_1_1 = (Ia_2_1_1 - _tmp567);
  ap_fixed<16,1> _tmp568 = (UDinv_2_1 * U_2_2);
  ap_fixed<16,2> Ia_new_2_1_2 = (Ia_2_1_2 - _tmp568);
  ap_fixed<16,1> _tmp569 = (UDinv_2_1 * U_2_3);
  ap_fixed<16,1> Ia_new_2_1_3 = (Ia_2_1_3 - _tmp569);
  ap_fixed<16,1> _tmp570 = (UDinv_2_1 * U_2_4);
  ap_fixed<16,1> Ia_new_2_1_4 = (Ia_2_1_4 - _tmp570);
  ap_fixed<16,1> _tmp571 = (UDinv_2_1 * U_2_5);
  ap_fixed<16,1> Ia_new_2_1_5 = (Ia_2_1_5 - _tmp571);
  ap_fixed<16,2> _tmp572 = (UDinv_2_1 * U_2_6);
  ap_fixed<16,1> Ia_new_2_1_6 = (Ia_2_1_6 - _tmp572);
  ap_fixed<16,1> _tmp573 = (UDinv_2_2 * U_2_1);
  ap_fixed<16,2> Ia_new_2_2_1 = (Ia_2_2_1 - _tmp573);
  ap_fixed<16,1> _tmp574 = (UDinv_2_2 * U_2_2);
  ap_fixed<16,3> Ia_new_2_2_2 = (Ia_2_2_2 - _tmp574);
  ap_fixed<16,1> _tmp575 = (UDinv_2_2 * U_2_3);
  ap_fixed<16,1> Ia_new_2_2_3 = (Ia_2_2_3 - _tmp575);
  ap_fixed<16,1> _tmp576 = (UDinv_2_2 * U_2_4);
  ap_fixed<16,1> Ia_new_2_2_4 = (Ia_2_2_4 - _tmp576);
  ap_fixed<16,1> _tmp577 = (UDinv_2_2 * U_2_5);
  ap_fixed<16,1> Ia_new_2_2_5 = (Ia_2_2_5 - _tmp577);
  ap_fixed<16,1> _tmp578 = (UDinv_2_2 * U_2_6);
  ap_fixed<16,1> Ia_new_2_2_6 = (Ia_2_2_6 - _tmp578);
  ap_fixed<16,1> _tmp579 = (UDinv_2_3 * U_2_1);
  ap_fixed<16,1> Ia_new_2_3_1 = (Ia_2_3_1 - _tmp579);
  ap_fixed<16,1> _tmp580 = (UDinv_2_3 * U_2_2);
  ap_fixed<16,1> Ia_new_2_3_2 = (Ia_2_3_2 - _tmp580);
  ap_fixed<16,1> _tmp581 = (UDinv_2_3 * U_2_3);
  ap_fixed<16,3> Ia_new_2_3_3 = (Ia_2_3_3 - _tmp581);
  ap_fixed<16,1> _tmp582 = (UDinv_2_3 * U_2_4);
  ap_fixed<16,2> Ia_new_2_3_4 = (Ia_2_3_4 - _tmp582);
  ap_fixed<16,1> _tmp583 = (UDinv_2_3 * U_2_5);
  ap_fixed<16,1> Ia_new_2_3_5 = (Ia_2_3_5 - _tmp583);
  ap_fixed<16,1> _tmp584 = (UDinv_2_3 * U_2_6);
  ap_fixed<16,1> Ia_new_2_3_6 = (Ia_2_3_6 - _tmp584);
  ap_fixed<16,1> _tmp585 = (UDinv_2_4 * U_2_1);
  ap_fixed<16,1> Ia_new_2_4_1 = (Ia_2_4_1 - _tmp585);
  ap_fixed<16,1> _tmp586 = (UDinv_2_4 * U_2_2);
  ap_fixed<16,1> Ia_new_2_4_2 = (Ia_2_4_2 - _tmp586);
  ap_fixed<16,1> _tmp587 = (UDinv_2_4 * U_2_3);
  ap_fixed<16,2> Ia_new_2_4_3 = (Ia_2_4_3 - _tmp587);
  ap_fixed<16,1> _tmp588 = (UDinv_2_4 * U_2_4);
  ap_fixed<16,1> Ia_new_2_4_4 = (Ia_2_4_4 - _tmp588);
  ap_fixed<16,1> _tmp589 = (UDinv_2_4 * U_2_5);
  ap_fixed<16,1> Ia_new_2_4_5 = (Ia_2_4_5 - _tmp589);
  ap_fixed<16,1> _tmp590 = (UDinv_2_4 * U_2_6);
  ap_fixed<16,1> Ia_new_2_4_6 = (Ia_2_4_6 - _tmp590);
  ap_fixed<16,1> _tmp591 = (UDinv_2_5 * U_2_1);
  ap_fixed<16,1> Ia_new_2_5_1 = (Ia_2_5_1 - _tmp591);
  ap_fixed<16,1> _tmp592 = (UDinv_2_5 * U_2_2);
  ap_fixed<16,1> Ia_new_2_5_2 = (Ia_2_5_2 - _tmp592);
  ap_fixed<16,1> _tmp593 = (UDinv_2_5 * U_2_3);
  ap_fixed<16,1> Ia_new_2_5_3 = (Ia_2_5_3 - _tmp593);
  ap_fixed<16,1> _tmp594 = (UDinv_2_5 * U_2_4);
  ap_fixed<16,1> Ia_new_2_5_4 = (Ia_2_5_4 - _tmp594);
  ap_fixed<16,1> _tmp595 = (UDinv_2_5 * U_2_5);
  ap_fixed<16,1> Ia_new_2_5_5 = (Ia_2_5_5 - _tmp595);
  ap_fixed<16,1> _tmp596 = (UDinv_2_5 * U_2_6);
  ap_fixed<16,1> Ia_new_2_5_6 = (Ia_2_5_6 - _tmp596);
  ap_fixed<16,2> _tmp597 = (UDinv_2_6 * U_2_1);
  ap_fixed<16,1> Ia_new_2_6_1 = (Ia_2_6_1 - _tmp597);
  ap_fixed<16,1> _tmp598 = (UDinv_2_6 * U_2_2);
  ap_fixed<16,1> Ia_new_2_6_2 = (Ia_2_6_2 - _tmp598);
  ap_fixed<16,1> _tmp599 = (UDinv_2_6 * U_2_3);
  ap_fixed<16,1> Ia_new_2_6_3 = (Ia_2_6_3 - _tmp599);
  ap_fixed<16,1> _tmp600 = (UDinv_2_6 * U_2_4);
  ap_fixed<16,1> Ia_new_2_6_4 = (Ia_2_6_4 - _tmp600);
  ap_fixed<16,1> _tmp601 = (UDinv_2_6 * U_2_5);
  ap_fixed<16,1> Ia_new_2_6_5 = (Ia_2_6_5 - _tmp601);
  ap_fixed<16,1> _tmp602 = (UDinv_2_6 * U_2_6);
  ap_fixed<16,1> Ia_new_2_6_6 = (Ia_2_6_6 - _tmp602);
  ap_fixed<16,3> Ai_2_1_1 = Ia_new_2_1_1;
  ap_fixed<16,2> Ai_2_1_2 = Ia_new_2_1_2;
  ap_fixed<16,1> Ai_2_1_3 = Ia_new_2_1_3;
  ap_fixed<16,2> Ai_2_2_1 = Ia_new_2_2_1;
  ap_fixed<16,3> Ai_2_2_2 = Ia_new_2_2_2;
  ap_fixed<16,1> Ai_2_2_3 = Ia_new_2_2_3;
  ap_fixed<16,1> Ai_2_3_1 = Ia_new_2_3_1;
  ap_fixed<16,1> Ai_2_3_2 = Ia_new_2_3_2;
  ap_fixed<16,3> Ai_2_3_3 = Ia_new_2_3_3;
  ap_fixed<16,1> Bi_2_1_1 = Ia_new_2_1_4;
  ap_fixed<16,1> Bi_2_1_2 = Ia_new_2_1_5;
  ap_fixed<16,1> Bi_2_1_3 = Ia_new_2_1_6;
  ap_fixed<16,1> Bi_2_2_1 = Ia_new_2_2_4;
  ap_fixed<16,1> Bi_2_2_2 = Ia_new_2_2_5;
  ap_fixed<16,1> Bi_2_2_3 = Ia_new_2_2_6;
  ap_fixed<16,2> Bi_2_3_1 = Ia_new_2_3_4;
  ap_fixed<16,1> Bi_2_3_2 = Ia_new_2_3_5;
  ap_fixed<16,1> Bi_2_3_3 = Ia_new_2_3_6;
  ap_fixed<32,1> Ci_2_1_1 = Ia_new_2_4_1;
  ap_fixed<32,1> Ci_2_1_2 = Ia_new_2_4_2;
  ap_fixed<32,2> Ci_2_1_3 = Ia_new_2_4_3;
  ap_fixed<32,1> Ci_2_2_1 = Ia_new_2_5_1;
  ap_fixed<32,1> Ci_2_2_2 = Ia_new_2_5_2;
  ap_fixed<32,1> Ci_2_2_3 = Ia_new_2_5_3;
  ap_fixed<32,1> Ci_2_3_1 = Ia_new_2_6_1;
  ap_fixed<32,1> Ci_2_3_2 = Ia_new_2_6_2;
  ap_fixed<32,1> Ci_2_3_3 = Ia_new_2_6_3;
  ap_fixed<16,1> Di_2_1_1 = Ia_new_2_4_4;
  ap_fixed<16,1> Di_2_1_2 = Ia_new_2_4_5;
  ap_fixed<16,1> Di_2_1_3 = Ia_new_2_4_6;
  ap_fixed<16,1> Di_2_2_1 = Ia_new_2_5_4;
  ap_fixed<16,1> Di_2_2_2 = Ia_new_2_5_5;
  ap_fixed<16,1> Di_2_2_3 = Ia_new_2_5_6;
  ap_fixed<16,1> Di_2_3_1 = Ia_new_2_6_4;
  ap_fixed<16,1> Di_2_3_2 = Ia_new_2_6_5;
  ap_fixed<16,1> Di_2_3_3 = Ia_new_2_6_6;
  ap_fixed<16,3> _tmp603 = (ap_fixed<16,3>) ((limi_rotation_2_1_1 * Ai_2_1_1));
  ap_fixed<16,1> _tmp604 = (ap_fixed<16,1>) ((limi_rotation_2_1_2 * Ai_2_2_1));
  ap_fixed<16,3> temp1_2_1_1 = (_tmp603 + _tmp604);
  ap_fixed<16,2> _tmp605 = (ap_fixed<16,2>) ((limi_rotation_2_1_1 * Ai_2_1_2));
  ap_fixed<16,1> _tmp606 = (ap_fixed<16,1>) ((limi_rotation_2_1_2 * Ai_2_2_2));
  ap_fixed<16,3> temp1_2_1_2 = (_tmp605 + _tmp606);
  ap_fixed<16,1> _tmp607 = (ap_fixed<16,1>) ((limi_rotation_2_1_1 * Ai_2_1_3));
  ap_fixed<16,1> _tmp608 = (ap_fixed<16,1>) ((limi_rotation_2_1_2 * Ai_2_2_3));
  ap_fixed<16,1> temp1_2_1_3 = (_tmp607 + _tmp608);
  ap_fixed<16,1> temp1_2_2_1 = Ai_2_3_1;
  ap_fixed<16,1> temp1_2_2_2 = Ai_2_3_2;
  ap_fixed<16,3> temp1_2_2_3 = Ai_2_3_3;
  ap_fixed<16,1> _tmp609 = (ap_fixed<16,1>) ((limi_rotation_2_3_1 * Ai_2_1_1));
  ap_fixed<16,2> _tmp610 = (ap_fixed<16,2>) ((limi_rotation_2_3_2 * Ai_2_2_1));
  ap_fixed<16,2> temp1_2_3_1 = (_tmp609 + _tmp610);
  ap_fixed<16,1> _tmp611 = (ap_fixed<16,1>) ((limi_rotation_2_3_1 * Ai_2_1_2));
  ap_fixed<16,3> _tmp612 = (ap_fixed<16,3>) ((limi_rotation_2_3_2 * Ai_2_2_2));
  ap_fixed<16,3> temp1_2_3_2 = (_tmp611 + _tmp612);
  ap_fixed<16,1> _tmp613 = (ap_fixed<16,1>) ((limi_rotation_2_3_1 * Ai_2_1_3));
  ap_fixed<16,1> _tmp614 = (ap_fixed<16,1>) ((limi_rotation_2_3_2 * Ai_2_2_3));
  ap_fixed<16,1> temp1_2_3_3 = (_tmp613 + _tmp614);
  ap_fixed<16,1> limi_rotation_transpose_2_1_1 = limi_rotation_2_1_1;
  ap_fixed<16,1> limi_rotation_transpose_2_1_3 = limi_rotation_2_3_1;
  ap_fixed<16,1> limi_rotation_transpose_2_2_1 = limi_rotation_2_1_2;
  ap_fixed<16,1> limi_rotation_transpose_2_2_3 = limi_rotation_2_3_2;
  ap_fixed<16,3> _tmp615 = (temp1_2_1_1 * limi_rotation_transpose_2_1_1);
  ap_fixed<16,1> _tmp616 = (temp1_2_1_2 * limi_rotation_transpose_2_2_1);
  ap_fixed<16,3> Ao_2_1_1 = (_tmp615 + _tmp616);
  ap_fixed<16,1> Ao_2_1_2 = temp1_2_1_3;
  ap_fixed<16,1> _tmp617 = (temp1_2_1_1 * limi_rotation_transpose_2_1_3);
  ap_fixed<16,3> _tmp618 = (temp1_2_1_2 * limi_rotation_transpose_2_2_3);
  ap_fixed<16,3> Ao_2_1_3 = (_tmp617 + _tmp618);
  ap_fixed<16,1> _tmp619 = (temp1_2_2_1 * limi_rotation_transpose_2_1_1);
  ap_fixed<16,1> _tmp620 = (temp1_2_2_2 * limi_rotation_transpose_2_2_1);
  ap_fixed<16,1> Ao_2_2_1 = (_tmp619 + _tmp620);
  ap_fixed<16,3> Ao_2_2_2 = temp1_2_2_3;
  ap_fixed<16,1> _tmp621 = (temp1_2_2_1 * limi_rotation_transpose_2_1_3);
  ap_fixed<16,1> _tmp622 = (temp1_2_2_2 * limi_rotation_transpose_2_2_3);
  ap_fixed<16,1> Ao_2_2_3 = (_tmp621 + _tmp622);
  ap_fixed<16,2> _tmp623 = (temp1_2_3_1 * limi_rotation_transpose_2_1_1);
  ap_fixed<16,1> _tmp624 = (temp1_2_3_2 * limi_rotation_transpose_2_2_1);
  ap_fixed<16,3> Ao_2_3_1 = (_tmp623 + _tmp624);
  ap_fixed<16,1> Ao_2_3_2 = temp1_2_3_3;
  ap_fixed<16,1> _tmp625 = (temp1_2_3_1 * limi_rotation_transpose_2_1_3);
  ap_fixed<16,3> _tmp626 = (temp1_2_3_2 * limi_rotation_transpose_2_2_3);
  ap_fixed<16,3> Ao_2_3_3 = (_tmp625 + _tmp626);
  ap_fixed<16,1> _tmp627 = (ap_fixed<16,1>) ((limi_rotation_2_1_1 * Bi_2_1_1));
  ap_fixed<16,1> _tmp628 = (ap_fixed<16,1>) ((limi_rotation_2_1_2 * Bi_2_2_1));
  ap_fixed<16,1> temp2_2_1_1 = (_tmp627 + _tmp628);
  ap_fixed<16,1> _tmp629 = (ap_fixed<16,1>) ((limi_rotation_2_1_1 * Bi_2_1_2));
  ap_fixed<16,1> _tmp630 = (ap_fixed<16,1>) ((limi_rotation_2_1_2 * Bi_2_2_2));
  ap_fixed<16,1> temp2_2_1_2 = (_tmp629 + _tmp630);
  ap_fixed<16,1> _tmp631 = (ap_fixed<16,1>) ((limi_rotation_2_1_1 * Bi_2_1_3));
  ap_fixed<16,1> _tmp632 = (ap_fixed<16,1>) ((limi_rotation_2_1_2 * Bi_2_2_3));
  ap_fixed<16,1> temp2_2_1_3 = (_tmp631 + _tmp632);
  ap_fixed<16,2> temp2_2_2_1 = Bi_2_3_1;
  ap_fixed<16,1> temp2_2_2_2 = Bi_2_3_2;
  ap_fixed<16,1> temp2_2_2_3 = Bi_2_3_3;
  ap_fixed<16,1> _tmp633 = (ap_fixed<16,1>) ((limi_rotation_2_3_1 * Bi_2_1_1));
  ap_fixed<16,1> _tmp634 = (ap_fixed<16,1>) ((limi_rotation_2_3_2 * Bi_2_2_1));
  ap_fixed<16,1> temp2_2_3_1 = (_tmp633 + _tmp634);
  ap_fixed<16,1> _tmp635 = (ap_fixed<16,1>) ((limi_rotation_2_3_1 * Bi_2_1_2));
  ap_fixed<16,1> _tmp636 = (ap_fixed<16,1>) ((limi_rotation_2_3_2 * Bi_2_2_2));
  ap_fixed<16,1> temp2_2_3_2 = (_tmp635 + _tmp636);
  ap_fixed<16,1> _tmp637 = (ap_fixed<16,1>) ((limi_rotation_2_3_1 * Bi_2_1_3));
  ap_fixed<16,1> _tmp638 = (ap_fixed<16,1>) ((limi_rotation_2_3_2 * Bi_2_2_3));
  ap_fixed<16,1> temp2_2_3_3 = (_tmp637 + _tmp638);
  ap_fixed<16,1> _tmp639 = (temp2_2_1_1 * limi_rotation_transpose_2_1_1);
  ap_fixed<16,1> _tmp640 = (temp2_2_1_2 * limi_rotation_transpose_2_2_1);
  ap_fixed<16,1> Bo_temp_2_1_1 = (_tmp639 + _tmp640);
  ap_fixed<16,1> Bo_temp_2_1_2 = temp2_2_1_3;
  ap_fixed<16,1> _tmp641 = (temp2_2_1_1 * limi_rotation_transpose_2_1_3);
  ap_fixed<16,1> _tmp642 = (temp2_2_1_2 * limi_rotation_transpose_2_2_3);
  ap_fixed<16,1> Bo_temp_2_1_3 = (_tmp641 + _tmp642);
  ap_fixed<16,2> _tmp643 = (temp2_2_2_1 * limi_rotation_transpose_2_1_1);
  ap_fixed<16,1> _tmp644 = (temp2_2_2_2 * limi_rotation_transpose_2_2_1);
  ap_fixed<16,2> Bo_temp_2_2_1 = (_tmp643 + _tmp644);
  ap_fixed<16,1> Bo_temp_2_2_2 = temp2_2_2_3;
  ap_fixed<16,1> _tmp645 = (temp2_2_2_1 * limi_rotation_transpose_2_1_3);
  ap_fixed<16,1> _tmp646 = (temp2_2_2_2 * limi_rotation_transpose_2_2_3);
  ap_fixed<16,1> Bo_temp_2_2_3 = (_tmp645 + _tmp646);
  ap_fixed<16,1> _tmp647 = (temp2_2_3_1 * limi_rotation_transpose_2_1_1);
  ap_fixed<16,1> _tmp648 = (temp2_2_3_2 * limi_rotation_transpose_2_2_1);
  ap_fixed<16,1> Bo_temp_2_3_1 = (_tmp647 + _tmp648);
  ap_fixed<16,1> Bo_temp_2_3_2 = temp2_2_3_3;
  ap_fixed<16,1> _tmp649 = (temp2_2_3_1 * limi_rotation_transpose_2_1_3);
  ap_fixed<16,1> _tmp650 = (temp2_2_3_2 * limi_rotation_transpose_2_2_3);
  ap_fixed<16,1> Bo_temp_2_3_3 = (_tmp649 + _tmp650);
  ap_fixed<16,1> _tmp651 = (ap_fixed<16,1>) ((limi_rotation_2_1_1 * Di_2_1_1));
  ap_fixed<16,1> _tmp652 = (ap_fixed<16,1>) ((limi_rotation_2_1_2 * Di_2_2_1));
  ap_fixed<16,1> temp3_2_1_1 = (_tmp651 + _tmp652);
  ap_fixed<16,1> _tmp653 = (ap_fixed<16,1>) ((limi_rotation_2_1_1 * Di_2_1_2));
  ap_fixed<16,1> _tmp654 = (ap_fixed<16,1>) ((limi_rotation_2_1_2 * Di_2_2_2));
  ap_fixed<16,1> temp3_2_1_2 = (_tmp653 + _tmp654);
  ap_fixed<16,1> _tmp655 = (ap_fixed<16,1>) ((limi_rotation_2_1_1 * Di_2_1_3));
  ap_fixed<16,1> _tmp656 = (ap_fixed<16,1>) ((limi_rotation_2_1_2 * Di_2_2_3));
  ap_fixed<16,1> temp3_2_1_3 = (_tmp655 + _tmp656);
  ap_fixed<16,1> temp3_2_2_1 = Di_2_3_1;
  ap_fixed<16,1> temp3_2_2_2 = Di_2_3_2;
  ap_fixed<16,1> temp3_2_2_3 = Di_2_3_3;
  ap_fixed<16,1> _tmp657 = (ap_fixed<16,1>) ((limi_rotation_2_3_1 * Di_2_1_1));
  ap_fixed<16,1> _tmp658 = (ap_fixed<16,1>) ((limi_rotation_2_3_2 * Di_2_2_1));
  ap_fixed<16,1> temp3_2_3_1 = (_tmp657 + _tmp658);
  ap_fixed<16,1> _tmp659 = (ap_fixed<16,1>) ((limi_rotation_2_3_1 * Di_2_1_2));
  ap_fixed<16,1> _tmp660 = (ap_fixed<16,1>) ((limi_rotation_2_3_2 * Di_2_2_2));
  ap_fixed<16,1> temp3_2_3_2 = (_tmp659 + _tmp660);
  ap_fixed<16,1> _tmp661 = (ap_fixed<16,1>) ((limi_rotation_2_3_1 * Di_2_1_3));
  ap_fixed<16,1> _tmp662 = (ap_fixed<16,1>) ((limi_rotation_2_3_2 * Di_2_2_3));
  ap_fixed<16,1> temp3_2_3_3 = (_tmp661 + _tmp662);
  ap_fixed<16,1> _tmp663 = (temp3_2_1_1 * limi_rotation_transpose_2_1_1);
  ap_fixed<16,1> _tmp664 = (temp3_2_1_2 * limi_rotation_transpose_2_2_1);
  ap_fixed<16,1> Do_temp_2_1_1 = (_tmp663 + _tmp664);
  ap_fixed<16,1> Do_temp_2_1_2 = temp3_2_1_3;
  ap_fixed<16,1> _tmp665 = (temp3_2_1_1 * limi_rotation_transpose_2_1_3);
  ap_fixed<16,1> _tmp666 = (temp3_2_1_2 * limi_rotation_transpose_2_2_3);
  ap_fixed<16,1> Do_temp_2_1_3 = (_tmp665 + _tmp666);
  ap_fixed<16,1> _tmp667 = (temp3_2_2_1 * limi_rotation_transpose_2_1_1);
  ap_fixed<16,1> _tmp668 = (temp3_2_2_2 * limi_rotation_transpose_2_2_1);
  ap_fixed<16,1> Do_temp_2_2_1 = (_tmp667 + _tmp668);
  ap_fixed<16,1> Do_temp_2_2_2 = temp3_2_2_3;
  ap_fixed<16,1> _tmp669 = (temp3_2_2_1 * limi_rotation_transpose_2_1_3);
  ap_fixed<16,1> _tmp670 = (temp3_2_2_2 * limi_rotation_transpose_2_2_3);
  ap_fixed<16,1> Do_temp_2_2_3 = (_tmp669 + _tmp670);
  ap_fixed<16,1> _tmp671 = (temp3_2_3_1 * limi_rotation_transpose_2_1_1);
  ap_fixed<16,1> _tmp672 = (temp3_2_3_2 * limi_rotation_transpose_2_2_1);
  ap_fixed<16,1> Do_temp_2_3_1 = (_tmp671 + _tmp672);
  ap_fixed<16,1> Do_temp_2_3_2 = temp3_2_3_3;
  ap_fixed<16,1> _tmp673 = (temp3_2_3_1 * limi_rotation_transpose_2_1_3);
  ap_fixed<16,1> _tmp674 = (temp3_2_3_2 * limi_rotation_transpose_2_2_3);
  ap_fixed<16,1> Do_temp_2_3_3 = (_tmp673 + _tmp674);
  ap_fixed<16,1> Do_temp2_2_1_1 = Do_temp_2_1_1;
  ap_fixed<16,1> Do_temp2_2_2_1 = Do_temp_2_2_1;
  ap_fixed<16,1> Do_temp2_2_3_1 = Do_temp_2_3_1;
  ap_fixed<16,1> Do_temp2_2_1_2 = Do_temp_2_1_2;
  ap_fixed<16,1> Do_temp2_2_2_2 = Do_temp_2_2_2;
  ap_fixed<16,1> Do_temp2_2_3_2 = Do_temp_2_3_2;
  ap_fixed<16,1> Do_temp2_2_1_3 = Do_temp_2_1_3;
  ap_fixed<16,1> Do_temp2_2_2_3 = Do_temp_2_2_3;
  ap_fixed<16,1> Do_temp2_2_3_3 = Do_temp_2_3_3;
  ap_fixed<16,1> Co_2_1_1 = Bo_temp_2_1_1;
  ap_fixed<16,1> Co_2_1_2 = Bo_temp_2_1_2;
  ap_fixed<16,1> Co_2_1_3 = Bo_temp_2_1_3;
  ap_fixed<16,2> Co_2_2_1 = Bo_temp_2_2_1;
  ap_fixed<16,1> Co_2_2_2 = Bo_temp_2_2_2;
  ap_fixed<16,1> Co_2_2_3 = Bo_temp_2_2_3;
  ap_fixed<16,1> Co_2_3_1 = Bo_temp_2_3_1;
  ap_fixed<16,1> Co_2_3_2 = Bo_temp_2_3_2;
  ap_fixed<16,1> Co_2_3_3 = Bo_temp_2_3_3;
  ap_fixed<16,1> Bo_2_1_1 = Co_2_1_1;
  ap_fixed<16,2> Bo_2_1_2 = Co_2_2_1;
  ap_fixed<16,1> Bo_2_1_3 = Co_2_3_1;
  ap_fixed<16,1> Bo_2_2_1 = Co_2_1_2;
  ap_fixed<16,1> Bo_2_2_2 = Co_2_2_2;
  ap_fixed<16,1> Bo_2_2_3 = Co_2_3_2;
  ap_fixed<16,1> Bo_2_3_1 = Co_2_1_3;
  ap_fixed<16,1> Bo_2_3_2 = Co_2_2_3;
  ap_fixed<16,1> Bo_2_3_3 = Co_2_3_3;
  ap_fixed<16,1> Do_2_1_1 = Do_temp2_2_1_1;
  ap_fixed<16,1> Do_2_1_2 = Do_temp2_2_1_2;
  ap_fixed<16,1> Do_2_1_3 = Do_temp2_2_1_3;
  ap_fixed<16,1> Do_2_2_1 = Do_temp2_2_2_1;
  ap_fixed<16,1> Do_2_2_2 = Do_temp2_2_2_2;
  ap_fixed<16,1> Do_2_2_3 = Do_temp2_2_2_3;
  ap_fixed<16,1> Do_2_3_1 = Do_temp2_2_3_1;
  ap_fixed<16,1> Do_2_3_2 = Do_temp2_2_3_2;
  ap_fixed<16,1> Do_2_3_3 = Do_temp2_2_3_3;
  ap_fixed<32,4> Ia_1_1_1 = (Ao_2_1_1 + _const297);
  ap_fixed<32,1> Ia_1_1_2 = (Ao_2_1_2 + _const298);
  ap_fixed<32,3> Ia_1_1_3 = (Ao_2_1_3 + _const299);
  ap_fixed<32,1> Ia_1_2_1 = (Ao_2_2_1 + _const300);
  ap_fixed<32,4> Ia_1_2_2 = (Ao_2_2_2 + _const301);
  ap_fixed<32,1> Ia_1_2_3 = (Ao_2_2_3 + _const302);
  ap_fixed<32,3> Ia_1_3_1 = (Ao_2_3_1 + _const303);
  ap_fixed<32,1> Ia_1_3_2 = (Ao_2_3_2 + _const304);
  ap_fixed<32,4> Ia_1_3_3 = (Ao_2_3_3 + _const305);
  ap_fixed<32,1> Ia_1_4_1 = (Co_2_1_1 + _const306);
  ap_fixed<32,1> Ia_1_4_2 = (Co_2_1_2 - _const307);
  ap_fixed<32,1> Ia_1_4_3 = (Co_2_1_3 + _const308);
  ap_fixed<32,2> Ia_1_5_1 = (Co_2_2_1 + _const309);
  ap_fixed<32,1> Ia_1_5_2 = (Co_2_2_2 + _const310);
  ap_fixed<32,1> Ia_1_5_3 = (Co_2_2_3 + _const311);
  ap_fixed<32,1> Ia_1_6_1 = (Co_2_3_1 - _const312);
  ap_fixed<32,1> Ia_1_6_2 = (Co_2_3_2 - _const313);
  ap_fixed<32,1> Ia_1_6_3 = (Co_2_3_3 + _const314);
  ap_fixed<32,1> Ia_1_1_4 = (Bo_2_1_1 + _const315);
  ap_fixed<32,2> Ia_1_1_5 = (Bo_2_1_2 + _const316);
  ap_fixed<16,1> Ia_1_1_6 = (ap_fixed<16,1>) ((Bo_2_1_3 - _const317));
  ap_fixed<32,1> Ia_1_2_4 = (Bo_2_2_1 - _const318);
  ap_fixed<32,1> Ia_1_2_5 = (Bo_2_2_2 + _const319);
  ap_fixed<16,1> Ia_1_2_6 = (ap_fixed<16,1>) ((Bo_2_2_3 - _const320));
  ap_fixed<32,1> Ia_1_3_4 = (Bo_2_3_1 + _const321);
  ap_fixed<32,1> Ia_1_3_5 = (Bo_2_3_2 + _const322);
  ap_fixed<16,1> Ia_1_3_6 = (ap_fixed<16,1>) ((Bo_2_3_3 + _const323));
  ap_fixed<32,1> Ia_1_4_4 = (Do_2_1_1 + _const324);
  ap_fixed<32,1> Ia_1_4_5 = (Do_2_1_2 + _const325);
  ap_fixed<16,1> Ia_1_4_6 = (ap_fixed<16,1>) ((Do_2_1_3 + _const326));
  ap_fixed<32,1> Ia_1_5_4 = (Do_2_2_1 + _const327);
  ap_fixed<32,1> Ia_1_5_5 = (Do_2_2_2 + _const328);
  ap_fixed<16,1> Ia_1_5_6 = (ap_fixed<16,1>) ((Do_2_2_3 - _const329));
  ap_fixed<32,1> Ia_1_6_4 = (Do_2_3_1 + _const330);
  ap_fixed<32,1> Ia_1_6_5 = (Do_2_3_2 - _const331);
  ap_fixed<16,1> Ia_1_6_6 = (ap_fixed<16,1>) ((Do_2_3_3 + _const332));
  ap_fixed<32,1> U_1_1 = Ia_1_1_6;
  ap_fixed<32,1> U_1_2 = Ia_1_2_6;
  ap_fixed<32,1> U_1_3 = Ia_1_3_6;
  ap_fixed<32,1> U_1_4 = Ia_1_4_6;
  ap_fixed<32,1> U_1_5 = Ia_1_5_6;
  ap_fixed<16,1> U_1_6 = Ia_1_6_6;
  ap_fixed<16,5> Dinv_1_1 = (ap_fixed<16,5>) ((_const333 / U_1_6));
  /*
  typedef struct{
  ap_fixed<32,6> Dinv_5_1;
  ap_fixed<16,2> Dinv_4_1;
  ap_fixed<16,6> Dinv_3_1;
  ap_fixed<16,3> Dinv_2_1;
  ap_fixed<16,5> Dinv_1_1;
} Dinv_t;
  */
  return {Dinv_5_1, Dinv_4_1, Dinv_3_1, Dinv_2_1, Dinv_1_1};
} // [5.4845815669929765, 14.341975224048285] +/- 0.09929323796255528


pinocchio::ModelTpl<double> pinocchio_model_test;
pinocchio::DataTpl<exp_type> pinocchio_data_test;
std::ofstream myfile;

#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <iostream>

void test(Eigen::Matrix<double, 6, 1> qpos){
    Dinv_t first_res = firstPass(
        ap_fixed<32,1>(qpos[0]),
        ap_fixed<32,1>(qpos[1]),
        ap_fixed<32,1>(qpos[2]),
        ap_fixed<32,1>(qpos[3]),
        ap_fixed<32,1>(qpos[4]),
        ap_fixed<32,1>(qpos[5])
    );

    pinocchioVerbose::computeMinverseVerbose(pinocchio_model_test, pinocchio_data_test, qpos);
    auto sec_res = pinocchio_data_test.Minv;

    // open a new file for writing
    myfile.open("/Users/alp/research/mujoco_simulation/results.txt", std::ios::app);
    myfile << "qpos: " << qpos.transpose() << std::endl;
    myfile << "First pass: " << first_res.Dinv_1_1 << " " << first_res.Dinv_2_1 << " " << first_res.Dinv_3_1 << " " << first_res.Dinv_4_1 << " " << first_res.Dinv_5_1 << std::endl;
    myfile << "Second pass: " << sec_res << std::endl;

    pinocchio::computeMinverse(pinocchio_model_test, pinocchio_data_test, qpos);
    auto sec_res2 = pinocchio_data_test.Minv;
    myfile << "Third pass: " << sec_res2 << std::endl;
    myfile.close();

    //std::cout << "qpos: " << qpos.transpose() << std::endl;
    //std::cout << "First pass: " << first_res.Dinv_1_1 << " " << first_res.Dinv_2_1 << " " << first_res.Dinv_3_1 << " " << first_res.Dinv_4_1 << " " << first_res.Dinv_5_1 << std::endl;
    //std::cout << "Second pass: " << sec_res << std::endl;
}

int main(int argc, char* argv[]){
    const std::string urdf_filename = std::string("models/panda.urdf");
    pinocchio::urdf::buildModel(urdf_filename, pinocchio_model_test);
    pinocchio_data_test = pinocchio::DataTpl<double>(pinocchio_model_test);
    Eigen::Matrix<double, 6, 1> qpos;

    // The current bounds are [0.2, 0.3] for all joints
    double lower_bound = 0.2;
    double upper_bound = 0.3;

    double divide = 10;
    for(int i = 0; i < divide; i++){
      qpos[0] = lower_bound + i * (upper_bound - lower_bound) / divide;
      for(int i2 = 0; i2 < divide; i2++){
        qpos[1] = lower_bound + i2 * (upper_bound - lower_bound) / divide;
        for(int i3 = 0; i3 < divide; i3++){
          qpos[2] = lower_bound + i3 * (upper_bound - lower_bound) / divide;
          for(int i4 = 0; i4 < divide; i4++){
            qpos[3] = lower_bound + i4 * (upper_bound - lower_bound) / divide;
            for(int i5 = 0; i5 < divide; i5++){
              qpos[4] = lower_bound + i5 * (upper_bound - lower_bound) / divide;
              for(int i6 = 0; i6 < divide; i6++){
                qpos[5] = lower_bound + i6 * (upper_bound - lower_bound) / divide;
                // now calculate firstpass and Minverse and compare
                test(qpos);
              }
            }
          }
        }
      }
    }
}