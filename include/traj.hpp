#include <math.h>
#include <iostream>


bool new_traj = false;
double traj_timer;
// traj index must start from 1, otherwise calculate_goal will give incorrect results.
int traj_index = 1;
double GOAL_TOLERANCE = 0.1;


double position_array[][6] = {
{1.249604274614664, -0.9508077771749881, -0.5811030938993298, -2.1625551793648086, -0.523233455202005, 1.3769544897497452},
{1.259798525760419, -0.9305725306522354, -0.6017748490329401, -2.1441958987314336, -0.5297099628723478, 1.3869477256309397},
{1.270533935639798, -0.9101183004945353, -0.6227853322762075, -2.1252380252936742, -0.5354825532887962, 1.3967758669584136},
{1.2818409715464032, -0.8894417292532145, -0.64418741687551, -2.105679562748746, -0.5405336799243724, 1.4064357717755676},
{1.293754314244826, -0.8685377471248864, -0.6660401681385527, -2.0855173117563632, -0.5448438530256712, 1.4159243369092975},
{1.3063137754497218, -0.8473995485279636, -0.6884098194212573, -2.064746740542081, -0.5483913502947872, 1.4252383840084197},
{1.3195654185325745, -0.8260185825123697, -0.7113710003604523, -2.043361839443356, -0.5511518923421036, 1.434374519181296},
{1.3335629510380353, -0.8043845768734117, -0.7350082604867552, -2.0213549558931683, -0.5530982968214126, 1.4433289599084584},
{1.3483694782293094, -0.7824856180483304, -0.759417969911069, -1.9987166039575122, -0.5542001193772947, 1.4520973165276443},
{1.3640597412217261, -0.7603083233239687, -0.784710705503662, -1.9754352404904505, -0.554423299023792, 1.460674309283488},
{1.380723012853995, -0.737838165724894, -0.811014267137823, -1.951496996956186, -0.553729842615579, 1.46905339217872},
{1.3984668968725125, -0.7150600519177963, -0.8384775171779933, -1.926885351381629, -0.5520776135083979, 1.4772262393940676},
{1.4174223827006012, -0.6919593216724146, -0.8672753004779415, -1.9015807177883046, -0.5494203444057192, 1.4851820250123173},
{1.4377506661512829, -0.6685234560661824, -0.897614783120694, -1.8755599189903205, -0.5457080940621398, 1.492906385212104},
{1.4596524800832413, -0.6447449922381895, -0.929743640104647, -1.8487954897207555, -0.5408885513073459, 1.500379881518451},
{1.483381018418214, -0.6206265241854051, -0.9639605970182791, -1.8212547247714155, -0.5349099338389586, 1.5075756609101827},
{1.509260004969429, -0.5961893744245204, -1.000628796213766, -1.7928983303273012, -0.5277268838469135, 1.514455790452146},
{1.5377090139408036, -0.5714888446050984, -1.0401920451952198, -1.7636784354962676, -0.519312025105254, 1.5209653503679077},
{1.5692784841862706, -0.5466414450220929, -1.083192465205203, -1.7335355381281894, -0.5096782922797285, 1.527022657131229},
{1.6046957453128485, -0.5218740821520219, -1.1302833685071796, -1.7023936350966509, -0.49892179195810216, 1.5325027389827475},
{1.6449165826557446, -0.49761278708786044, -1.1822181479062188, -1.6701522693488302, -0.48730308616955814, 1.5372092548509873},
{1.6911518629538336, -0.47463695944421475, -1.2397628459611991, -1.636673692564555, -0.4753952165784068, 1.5408283664296318},
{1.7447664967880252, -0.4543139061033659, -1.3034111392397703, -1.6017642143008322, -0.46432181401237915, 1.5428629419790956},
{1.806808874809093, -0.4388179892603229, -1.372713732751503, -1.5651564413221224, -0.45601218998799137, 1.5425793223125417},
{1.8769378987465344, -0.43090922634199685, -1.4452853227297735, -1.5265212208709171, -0.4530817222980599, 1.5390909174227863},
{1.9524057151765641, -0.43267964917204804, -1.5166208396460594, -1.4855486407540355, -0.4577230307913645, 1.5317374782110902},
{2.028928913186696, -0.4439563065429627, -1.5821797647739861, -1.4420512574774205, -0.4701310559144016, 1.5205507267774176},
{2.1031866081550086, -0.4624643324884365, -1.6399456886769808, -1.3959467559228558, -0.4884759645916656, 1.5062047246744532},
{2.1739800684205117, -0.48558022355337094, -1.6904011270517891, -1.3471247060624147, -0.5104780381547118, 1.489487518024055},
{2.241573443440949, -0.511451313731471, -1.7350107023632815, -1.2953406818623598, -0.5345025187238568, 1.4709432808522134},
{2.3068413013710405, -0.5390567516062256, -1.7752637324597929, -1.2401670142768815, -0.55966057329606, 1.450829838365353},
};
double velocity_array[][6] = {
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.13403284821479167, 0.25902754499125524, -0.26555979495333315, 0.2382978565709138, -0.07654816444749796, 0.12567757677847033},
{0.20570025492832816, 0.3829114617744411, -0.39502136533410026, 0.35900006320102923, -0.09991326583496055, 0.18112740260839008},
{0.26293799619534497, 0.47006439694974644, -0.48918574138245463, 0.44938885371812337, -0.10511185050819993, 0.2162219173426813},
{0.31582313807620344, 0.5419596360347841, -0.5702491246392176, 0.5279184942594128, -0.10074190846563462, 0.24219121738838179},
{0.36586862741295134, 0.6021736384850593, -0.6421898339702063, 0.5972432394252258, -0.08885165024913223, 0.26113190403750275},
{0.4191841922210313, 0.6611443196862554, -0.7164708703108145, 0.6671624854020453, -0.07182626323449956, 0.2778759629085874},
{0.47190740810943443, 0.7128445113286067, -0.7869469452016462, 0.7311974507120136, -0.04957899139171021, 0.2900934888125031},
{0.5229980069667963, 0.7554988940904972, -0.8521507765851358, 0.7872304534338935, -0.02237660504305009, 0.29719824087578234},
{0.572750544385286, 0.7901976421079141, -0.9133045595341567, 0.8357842079092609, 0.008489073956481772, 0.30004277775191635},
{0.6141046222755657, 0.807631865777031, -0.959654756081278, 0.8665518767708329, 0.04183977684999608, 0.29544325736954513},
{0.638302979051139, 0.7984514587342526, -0.9787499999999999, 0.8685756733982559, 0.07459780295320094, 0.28083075794784773},
{0.6500146016835331, 0.7705820064942326, -0.9787499999999999, 0.8497289275840505, 0.10503478387724516, 0.25979031918374446},
{0.6614950594472833, 0.740204716960627, -0.9787499999999999, 0.8273807501281799, 0.13328800614900838, 0.23842727500208327},
{0.6729688064569612, 0.7071300727235219, -0.9787499999999999, 0.8015573048651168, 0.15891641303184897, 0.21674845801362477},
{0.6847501971569679, 0.6710842169798502, -0.9787499999999998, 0.772336684738341, 0.18137212322355697, 0.19473733191159576},
{0.6972799519006339, 0.6316705846341171, -0.9787499999999998, 0.7398789414483411, 0.1999522633581961, 0.17234200878942826},
{0.7111808990379385, 0.588312444946707, -0.97875, 0.7044809189304557, 0.21372569049106427, 0.14945598020814493},
{0.7273436987337559, 0.5401666354847666, -0.97875, 0.6666782005242227, 0.2214216479499413, 0.12588615555836707},
{0.7470569140750515, 0.4859969470727723, -0.9787499999999999, 0.6274372443111275, 0.221264624876045, 0.10129866422831485},
{0.7721927589251019, 0.4240035638571402, -0.9787499999999999, 0.5885168783979845, 0.21074923073728213, 0.07512677784141736},
{0.8054256148837028, 0.35165099865867533, -0.97875, 0.5531202824437911, 0.1864080859577929, 0.04642117789272579},
{0.8503363692006491, 0.265681855909388, -0.97875, 0.5269128122608328, 0.14381826106312745, 0.013640557973260897},
{0.9110114833195462, 0.16275472737821045, -0.9787499999999999, 0.5190334859903354, 0.07843892267176843, -0.025526263500874648},
{0.9622789435357751, 0.04185108825576177, -0.9519538878266296, 0.5262193149709581, -0.010335663699335668, -0.07120726566773451},
{0.9787499999999999, -0.08359597144034135, -0.881836051912104, 0.5438598035986555, -0.10944761160725235, -0.11922437374862652},
{0.9787499999999999, -0.194087647835387, -0.7999476638658827, 0.5820100561594386, -0.20024790019139482, -0.16608401043461138},
{0.9787499999999998, -0.28176563787824577, -0.7294745550034272, 0.6413319960566986, -0.2729911554772323, -0.2101046792889877},
{0.9025922328635798, -0.31795078227117435, -0.621494883227403, 0.6540631497373814, -0.29896243781675963, -0.22892739735355142},
{0.5828837021489475, -0.22991868630760326, -0.37735022802618234, 0.4599964516061952, -0.2122677714640721, -0.16565183300186448},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
};
double time_array[] = {0.0, 0.111120567, 0.172004702, 0.220104343, 0.261071719, 0.297919673, 0.331820733, 0.363101765, 0.392933298, 0.421478805, 0.449444671, 0.477504186, 0.506927209, 0.537925403, 0.570751821, 0.605711675, 0.643175991, 0.683598212, 0.72753223, 0.775645541, 0.828707896, 0.887501968, 0.952532152, 1.0233394, 1.097486618, 1.174592944, 1.252777565, 1.3286474959999999, 1.4009779789999999, 1.482767133, 1.6751087839999999};


bool is_close_enough(double* current, double* goal){
    for(int i = 0; i < 6; i++){
        if(std::abs(current[i] - goal[i]) > GOAL_TOLERANCE){
            return false;
        }
    }
    return true;
}

void calculate_goal(double* curr_position, double* curr_velocity, double* goal, double time){
    // current goal is the index traj_index
    // should we move to the next goal?
    double curr_index_time = time_array[traj_index - 1];
    //std::cout << "time: " << time << std::endl;
    //std::cout << "curr_index_time: " << curr_index_time << std::endl;
    if((time > curr_index_time) || (traj_index >= sizeof(time_array)/sizeof(time_array[0]))){
        traj_index++;
        if(traj_index >= sizeof(time_array)/sizeof(time_array[0])){
            traj_index--; // we need to correct this, otherwise traj_index will go out of bounds
            // we are done
            // the goal should be the final goal
            for(int i = 0; i < 6; i++){
                goal[i] = position_array[traj_index - 1][i];
                //std::cout << "traj_index: " << traj_index << std::endl;
                //std::cout << "returning goal: " << goal[i] << std::endl;
            }
            return;
        }
        return calculate_goal(curr_position, curr_velocity, goal, time);
    }

    double next_index_time = time_array[traj_index];
    double time_diff = next_index_time - curr_index_time;
    double time_ratio = (time - curr_index_time) / time_diff;
    //std::cout << "time: " << time << std::endl;
    //std::cout << "curr_index_time: " << curr_index_time << std::endl;
    //std::cout << "time ratio: " << time_ratio << std::endl;

    for(int i = 0; i < 6; i++){

        //std::cout << "1: " << position_array[traj_index][i] << std::endl;
        //std::cout << "2: " << position_array[traj_index - 1][i] << std::endl;
        double position_diff = position_array[traj_index][i] - position_array[traj_index - 1][i];
        //std::cout << "position_diff " << position_diff << std::endl;
        goal[i] = position_array[traj_index - 1][i] + position_diff * time_ratio;
        //std::cout << "returning goal " << goal[i] << std::endl;
    }
}




